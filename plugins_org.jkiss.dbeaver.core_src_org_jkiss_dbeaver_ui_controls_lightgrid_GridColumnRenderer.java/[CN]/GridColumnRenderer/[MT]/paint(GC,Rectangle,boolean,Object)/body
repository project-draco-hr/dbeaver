{
  int sortOrder=grid.getContentProvider().getSortOrder(element);
  Rectangle sortBounds=getSortControlBounds();
  gc.setFont(getColumnFont(element));
  boolean flat=true;
  boolean drawSelected=false;
  if (flat && selected) {
    gc.setBackground(grid.getCellHeaderSelectionBackground());
  }
 else {
    gc.setBackground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
  }
  gc.setForeground(getDisplay().getSystemColor(SWT.COLOR_LIST_FOREGROUND));
  gc.fillRectangle(bounds.x,bounds.y,bounds.width,bounds.height);
  int pushedDrawingOffset=0;
  if (drawSelected) {
    pushedDrawingOffset=1;
  }
  int x=LEFT_MARGIN;
  Image columnImage=getColumnImage(element);
  if (columnImage != null) {
    int y=bounds.y + pushedDrawingOffset + TOP_MARGIN;
    gc.drawImage(columnImage,bounds.x + x + pushedDrawingOffset,y);
    x+=columnImage.getBounds().width + IMAGE_SPACING;
  }
  int width=bounds.width - x;
  if (sortOrder == SWT.NONE) {
    width-=RIGHT_MARGIN;
  }
 else {
    width-=ARROW_MARGIN + sortBounds.width + ARROW_MARGIN;
  }
  int y=bounds.y + TOP_MARGIN;
  String text=getColumnText(element);
  text=TextUtils.getShortString(grid.fontMetrics,text,width);
  gc.drawString(text,bounds.x + x + pushedDrawingOffset,y + pushedDrawingOffset,true);
  if (sortOrder != SWT.NONE) {
    y=bounds.y + TOP_MARGIN;
    if (drawSelected) {
      sortBounds.x=bounds.x + bounds.width - ARROW_MARGIN - sortBounds.width + 1;
      sortBounds.y=y;
    }
 else {
      sortBounds.x=bounds.x + bounds.width - ARROW_MARGIN - sortBounds.width;
      sortBounds.y=y;
    }
    paintSort(gc,sortBounds,sortOrder);
  }
  if (!flat) {
    if (drawSelected) {
      gc.setForeground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW));
    }
 else {
      gc.setForeground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW));
    }
    gc.drawLine(bounds.x,bounds.y,bounds.x + bounds.width - 1,bounds.y);
    gc.drawLine(bounds.x,bounds.y,bounds.x,bounds.y + bounds.height - 1);
    if (!drawSelected) {
      gc.setForeground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_LIGHT_SHADOW));
      gc.drawLine(bounds.x + 1,bounds.y + 1,bounds.x + bounds.width - 2,bounds.y + 1);
      gc.drawLine(bounds.x + 1,bounds.y + 1,bounds.x + 1,bounds.y + bounds.height - 2);
    }
    if (drawSelected) {
      gc.setForeground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW));
    }
 else {
      gc.setForeground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_DARK_SHADOW));
    }
    gc.drawLine(bounds.x + bounds.width - 1,bounds.y,bounds.x + bounds.width - 1,bounds.y + bounds.height - 1);
    gc.drawLine(bounds.x,bounds.y + bounds.height - 1,bounds.x + bounds.width - 1,bounds.y + bounds.height - 1);
    if (!drawSelected) {
      gc.setForeground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW));
      gc.drawLine(bounds.x + bounds.width - 2,bounds.y + 1,bounds.x + bounds.width - 2,bounds.y + bounds.height - 2);
      gc.drawLine(bounds.x + 1,bounds.y + bounds.height - 2,bounds.x + bounds.width - 2,bounds.y + bounds.height - 2);
    }
  }
 else {
    gc.setForeground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_DARK_SHADOW));
    gc.drawLine(bounds.x + bounds.width - 1,bounds.y,bounds.x + bounds.width - 1,bounds.y + bounds.height - 1);
    gc.drawLine(bounds.x,bounds.y + bounds.height - 1,bounds.x + bounds.width - 1,bounds.y + bounds.height - 1);
  }
  gc.setFont(grid.normalFont);
}
