{
  super.log(type,message,t);
  DBeaverUI.syncExec(new Runnable(){
    @Override public void run(){
      if (infoTable == null || infoTable.isDisposed()) {
        return;
      }
      int color=-1;
switch (type) {
case LOG_LEVEL_TRACE:
        color=SWT.COLOR_DARK_BLUE;
      break;
case LOG_LEVEL_DEBUG:
case LOG_LEVEL_INFO:
    break;
case LOG_LEVEL_WARN:
  color=SWT.COLOR_DARK_YELLOW;
break;
case LOG_LEVEL_ERROR:
case LOG_LEVEL_FATAL:
color=SWT.COLOR_DARK_RED;
break;
default :
break;
}
String messageStr;
DBCCompileError error=null;
if (message instanceof DBCCompileError) {
error=(DBCCompileError)message;
messageStr=error.getMessage();
}
 else {
messageStr=CommonUtils.toString(message);
}
StringTokenizer st=new StringTokenizer(messageStr,"\n");
while (st.hasMoreTokens()) {
final TableItem item=new TableItem(infoTable,SWT.NONE);
item.setText(0,st.nextToken());
if (error != null && error.getLine() > 0) {
item.setText(1,String.valueOf(((DBCCompileError)message).getLine()));
item.setText(2,String.valueOf(((DBCCompileError)message).getPosition()));
}
if (color != -1) {
item.setForeground(infoTable.getDisplay().getSystemColor(color));
}
infoTable.showItem(item);
}
if (t != null) {
String prevMessage=null;
for (Throwable ex=t; error != null; ex=ex.getCause()) {
final String errorMessage=ex.getMessage();
if (errorMessage == null || errorMessage.equals(prevMessage)) {
continue;
}
prevMessage=errorMessage;
TableItem stackItem=new TableItem(infoTable,SWT.NONE);
stackItem.setText(errorMessage);
stackItem.setForeground(infoTable.getDisplay().getSystemColor(SWT.COLOR_RED));
infoTable.showItem(stackItem);
}
}
}
}
);
}
