{
  this.subSite=new SubEditorSite(part.getSite());
  boldFont=UIUtils.makeBoldFont(parent.getFont());
  Composite composite=UIUtils.createPlaceholder(parent,1);
  SashForm sash=UIUtils.createPartDivider(part,composite,SWT.VERTICAL | SWT.SMOOTH);
  sash.setLayoutData(new GridData(GridData.FILL_BOTH));
  sessionTable=new SessionListControl(sash,sessionManager);
  sessionTable.getItemsViewer().addSelectionChangedListener(new ISelectionChangedListener(){
    @Override public void selectionChanged(    SelectionChangedEvent event){
      onSessionSelect(getSelectedSession());
    }
  }
);
  sessionTable.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  sessionTable.createProgressPanel(composite);
{
    SashForm infoSash=UIUtils.createPartDivider(part,sash,SWT.HORIZONTAL | SWT.SMOOTH);
    infoSash.setLayoutData(new GridData(GridData.FILL_BOTH));
    sqlViewer=new SQLEditorBase(){
      @Override public DBCExecutionContext getExecutionContext(){
        return sessionManager.getDataSource().getDefaultContext(false);
      }
    }
;
    updateSQL();
    sqlViewer.createPartControl(infoSash);
    Object text=sqlViewer.getAdapter(Control.class);
    if (text instanceof StyledText) {
      ((StyledText)text).setWordWrap(true);
    }
    sqlViewer.reloadSyntaxRules();
    parent.addDisposeListener(new DisposeListener(){
      @Override public void widgetDisposed(      DisposeEvent e){
        sqlViewer.dispose();
      }
    }
);
    sessionProps=new PropertyTreeViewer(infoSash,SWT.BORDER);
    sash.setWeights(new int[]{50,50});
  }
  sash.setWeights(new int[]{70,30});
}
