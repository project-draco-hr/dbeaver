{
  super.loadSettings();
  DBPConnectionConfiguration connectionInfo=site.getActiveDataSource().getConnectionConfiguration();
  Map<Object,Object> connectionProperties=connectionInfo.getProperties();
  final Object sidService=connectionProperties.get(OracleConstants.PROP_SID_SERVICE);
  if (sidService != null) {
    sidServiceCombo.setText(OracleConnectionType.valueOf(sidService.toString()).getTitle());
  }
  oraHomeSelector.populateHomes(site.getDriver(),connectionInfo.getClientHomeId());
  if (tnsNameCombo.getItemCount() == 0) {
    populateTnsNameCombo();
  }
  if (serviceNameCombo.getItemCount() == 0) {
    for (    String alias : getAvailableServiceNames()) {
      serviceNameCombo.add(alias);
    }
  }
  Object conTypeProperty=connectionProperties.get(OracleConstants.PROP_CONNECTION_TYPE);
  if (conTypeProperty != null) {
    connectionType=OracleConstants.ConnectionType.valueOf(CommonUtils.toString(conTypeProperty));
  }
 else {
    connectionType=OracleConstants.ConnectionType.BASIC;
  }
  connectionTypeFolder.setSelection(connectionType.ordinal());
switch (connectionType) {
case BASIC:
    hostText.setText(CommonUtils.notEmpty(connectionInfo.getHostName()));
  if (!CommonUtils.isEmpty(connectionInfo.getHostPort())) {
    portText.setText(String.valueOf(connectionInfo.getHostPort()));
  }
 else   if (site.getDriver().getDefaultPort() != null) {
    portText.setText(site.getDriver().getDefaultPort());
  }
 else {
    portText.setText("");
  }
serviceNameCombo.setText(CommonUtils.notEmpty(connectionInfo.getDatabaseName()));
break;
case TNS:
tnsNameCombo.setText(CommonUtils.notEmpty(connectionInfo.getDatabaseName()));
break;
case CUSTOM:
connectionUrlText.setText(CommonUtils.notEmpty(connectionInfo.getUrl()));
break;
}
if (OracleConstants.OS_AUTH_USER_NAME.equals(connectionInfo.getUserName())) {
userNameText.setEnabled(false);
passwordText.setEnabled(false);
osAuthCheck.setSelection(true);
}
 else {
userNameText.setText(CommonUtils.notEmpty(connectionInfo.getUserName()));
passwordText.setText(CommonUtils.notEmpty(connectionInfo.getUserPassword()));
osAuthCheck.setSelection(false);
}
final Object roleName=connectionProperties.get(OracleConstants.PROP_INTERNAL_LOGON);
if (roleName != null) {
userRoleCombo.setText(roleName.toString().toUpperCase(Locale.ENGLISH));
}
}
