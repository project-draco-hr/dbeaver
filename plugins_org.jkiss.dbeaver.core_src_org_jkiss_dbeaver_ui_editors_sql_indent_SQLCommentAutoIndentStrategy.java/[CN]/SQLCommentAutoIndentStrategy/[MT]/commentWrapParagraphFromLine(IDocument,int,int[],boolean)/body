{
  String indent=commentExtractLinePrefix(document,line);
  if (!always) {
    if (!indent.trim().startsWith("*")) {
      return;
    }
    if (indent.trim().startsWith("*/")) {
      return;
    }
    if (!isLineTooLong(document,line) && !isLineTooShort(document,line)) {
      return;
    }
  }
  boolean caretRelativeToParagraphOffset=false;
  int caret=caretOffset[0];
  int caretLine=document.getLineOfOffset(caret);
  int lineOffset=document.getLineOffset(line);
  int paragraphOffset=lineOffset + indent.length();
  if (paragraphOffset < caret) {
    caret-=paragraphOffset;
    caretRelativeToParagraphOffset=true;
  }
 else {
    caret-=lineOffset;
  }
  StringBuilder buffer=new StringBuilder();
  int currentLine=line;
  while (line == currentLine || isCommentLine(document,currentLine)) {
    if (buffer.length() != 0 && !Character.isWhitespace(buffer.charAt(buffer.length() - 1))) {
      buffer.append(' ');
      if (currentLine <= caretLine) {
        ++caret;
      }
    }
    String string=getLineContents(document,currentLine);
    buffer.append(string);
    currentLine++;
  }
  String paragraph=buffer.toString();
  if (paragraph.trim().length() == 0) {
    return;
  }
  caretOffset[0]=caretRelativeToParagraphOffset ? caret : 0;
  String delimiter=document.getLineDelimiter(0);
  String wrapped=formatParagraph(paragraph,caretOffset,indent,delimiter,getMargin());
  int beginning=document.getLineOffset(line);
  int end=document.getLineOffset(currentLine);
  document.replace(beginning,end - beginning,wrapped);
  caretOffset[0]=caretRelativeToParagraphOffset ? caretOffset[0] + beginning : caret + beginning;
}
