{
  ERDEntity erdEntity=new ERDEntity(entity);
  ERDAttributeVisibility attributeVisibility=diagram.getAttributeVisibility();
  if (attributeVisibility != ERDAttributeVisibility.NONE) {
    Set<DBSEntityAttribute> keyColumns=null;
    if (attributeVisibility == ERDAttributeVisibility.KEYS) {
      keyColumns=new HashSet<>();
      try {
        for (        DBSEntityAssociation assoc : CommonUtils.safeCollection(entity.getAssociations(monitor))) {
          if (assoc instanceof DBSEntityReferrer) {
            keyColumns.addAll(DBUtils.getEntityAttributes(monitor,(DBSEntityReferrer)assoc));
          }
        }
        for (        DBSEntityConstraint constraint : CommonUtils.safeCollection(entity.getConstraints(monitor))) {
          if (constraint instanceof DBSEntityReferrer) {
            keyColumns.addAll(DBUtils.getEntityAttributes(monitor,(DBSEntityReferrer)constraint));
          }
        }
      }
 catch (      DBException e) {
        log.warn(e);
      }
    }
    Collection<? extends DBSEntityAttribute> idColumns=null;
    try {
      idColumns=DBUtils.getBestTableIdentifier(monitor,entity);
      if (keyColumns != null) {
        keyColumns.addAll(idColumns);
      }
    }
 catch (    DBException e) {
      log.error("Error reading table identifier",e);
    }
    try {
      Collection<? extends DBSEntityAttribute> attributes=entity.getAttributes(monitor);
      if (!CommonUtils.isEmpty(attributes)) {
        for (        DBSEntityAttribute attribute : attributes) {
          if (attribute instanceof DBSEntityAssociation) {
            continue;
          }
          if (attribute instanceof DBPHiddenObject && ((DBPHiddenObject)attribute).isHidden()) {
            continue;
          }
switch (attributeVisibility) {
case PRIMARY:
            if (idColumns == null || !idColumns.contains(attribute)) {
              continue;
            }
          break;
case KEYS:
        if (keyColumns == null || !keyColumns.contains(attribute)) {
          continue;
        }
      break;
default :
    break;
}
ERDEntityAttribute c1=new ERDEntityAttribute(attribute,idColumns != null && idColumns.contains(attribute));
erdEntity.addColumn(c1,false);
}
}
}
 catch (DBException e) {
log.debug("Can't load table '" + entity.getName() + "'columns",e);
}
}
return erdEntity;
}
