{
  listener.searchStarted();
  try {
    String searchString=params.getSearchString();
    Set<DBPDataSource> dataSources=new HashSet<DBPDataSource>();
    for (    DBSDataSearcher searcher : params.sources) {
      dataSources.add(searcher.getDataSource());
    }
    long flags=0;
    if (params.caseSensitive)     flags|=DBSDataSearcher.FLAG_CASE_SENSITIVE;
    if (params.fastSearch)     flags|=DBSDataSearcher.FLAG_FAST_SEARCH;
    if (params.searchNumbers)     flags|=DBSDataSearcher.FLAG_SEARCH_NUMBERS;
    if (params.searchLOBs)     flags|=DBSDataSearcher.FLAG_SEARCH_LOBS;
    int objectsFound=0;
    monitor.beginTask("Search \"" + searchString + "\" in "+ params.sources.size()+ " table(s) / "+ dataSources.size()+ " database(s)",params.sources.size());
    try {
      for (      DBSDataSearcher searcher : params.sources) {
        if (monitor.isCanceled()) {
          break;
        }
        DBCSession session=searcher.getDataSource().openSession(monitor,DBCExecutionPurpose.UTIL,DBUtils.getObjectFullName(searcher));
        try {
          DBDDataReceiver dataReceiver=new TestDataReceiver();
          searcher.findRows(session,dataReceiver,searchString,flags);
          try {
            Thread.sleep(100);
          }
 catch (          InterruptedException e) {
            e.printStackTrace();
          }
        }
  finally {
          session.close();
        }
        if (objectsFound >= params.maxResults) {
          break;
        }
        monitor.worked(1);
      }
    }
  finally {
      monitor.done();
    }
  }
  finally {
    listener.searchFinished();
  }
}
