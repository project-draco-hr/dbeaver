{
  if (context != null && context.isConnected()) {
    if (!ArrayUtils.isEmpty(Job.getJobManager().find(context.getDataSource().getContainer()))) {
      return;
    }
    final InvalidateJob invalidateJob=new InvalidateJob(context);
    invalidateJob.addJobChangeListener(new JobChangeAdapter(){
      @Override public void done(      IJobChangeEvent event){
        String message;
        boolean error;
        if (invalidateJob.getInvalidateError() != null) {
          message="Error: " + invalidateJob.getInvalidateError().getMessage();
          error=true;
        }
 else {
switch (invalidateJob.getInvalidateResult()) {
case DISCONNECTED:
            message="Not connected";
          error=true;
        break;
case CONNECTED:
      message="Connected";
    error=false;
  break;
case RECONNECTED:
message="Connection was reopened";
error=false;
break;
default :
message="Connection is alive";
error=false;
break;
}
}
UIUtils.showMessageBox(shell,"Invalidate [" + context.getContextName() + "]",message,error ? SWT.ICON_ERROR : SWT.ICON_INFORMATION);
}
}
);
invalidateJob.schedule();
}
}
