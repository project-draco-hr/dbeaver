{
  if (context != null && context.isConnected()) {
    if (!ArrayUtils.isEmpty(Job.getJobManager().find(context.getDataSource().getContainer()))) {
      return;
    }
    final InvalidateJob invalidateJob=new InvalidateJob(context);
    invalidateJob.addJobChangeListener(new JobChangeAdapter(){
      @Override public void done(      IJobChangeEvent event){
        StringBuilder message=new StringBuilder();
        boolean error=false;
        int totalNum=0, connectedNum=0, aliveNum=0;
        for (        InvalidateJob.ContextInvalidateResult result : invalidateJob.getInvalidateResults()) {
          totalNum++;
          if (result.error != null) {
            error=true;
            if (message.length() > 0)             message.append("\n");
            message.append("Error: ").append(result.error.getMessage());
          }
switch (result.result) {
case CONNECTED:
case RECONNECTED:
            connectedNum++;
          break;
case ALIVE:
        aliveNum++;
      break;
default :
    break;
}
}
if (connectedNum > 0) {
message.insert(0,"Connections reopened: " + connectedNum + " (of "+ totalNum+ ")");
}
 else if (message.length() == 0) {
message.insert(0,"All connections (" + totalNum + ") are alive!");
}
UIUtils.showMessageBox(shell,"Invalidate data source [" + context.getDataSource().getContainer().getName() + "]",message.toString(),error ? SWT.ICON_ERROR : SWT.ICON_INFORMATION);
}
}
);
invalidateJob.schedule();
}
}
