{
  List<AggregateFunctionDescriptor> functions=enabledFunctions;
  Map<IAggregateFunction,TreeItem> funcMap=new IdentityHashMap<>();
  for (  AggregateFunctionDescriptor funcDesc : functions) {
    TreeItem funcItem=(parentItem == null) ? new TreeItem(aggregateTable,SWT.NONE) : new TreeItem(parentItem,SWT.NONE);
    funcItem.setData(funcDesc);
    funcItem.setText(0,funcDesc.getLabel());
    funcItem.setImage(0,DBeaverIcons.getImage(funcDesc.getIcon()));
    try {
      IAggregateFunction func=funcDesc.createFunction();
      funcMap.put(func,funcItem);
    }
 catch (    DBException e) {
      log.error(e);
    }
  }
  IAggregateFunction[] funcs=funcMap.keySet().toArray(new IAggregateFunction[funcMap.size()]);
  int valueCount=0;
  for (  Number element : values) {
    for (    IAggregateFunction func : funcs) {
      func.accumulate(element);
    }
    valueCount++;
  }
  if (valueCount > 0) {
    for (    IAggregateFunction func : funcs) {
      Number result=func.getResult(valueCount);
      if (result != null) {
        TreeItem treeItem=funcMap.get(func);
        treeItem.setText(1,result.toString());
      }
    }
  }
}
