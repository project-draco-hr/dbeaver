{
  ResultSetModel model=presentation.getController().getModel();
  if (groupByColumns) {
    Map<DBDAttributeBinding,List<Number>> attrValues=new LinkedHashMap<>();
    for (    Object element : selection.toList()) {
      DBDAttributeBinding attr=selection.getElementAttribute(element);
      ResultSetRow row=selection.getElementRow(element);
      Object cellValue=model.getCellValue(attr,row);
      if (cellValue instanceof Number) {
        List<Number> numbers=attrValues.get(attr);
        if (numbers == null) {
          numbers=new ArrayList<>();
          attrValues.put(attr,numbers);
        }
        numbers.add((Number)cellValue);
      }
    }
    for (    Map.Entry<DBDAttributeBinding,List<Number>> entry : attrValues.entrySet()) {
      TreeItem attrItem=new TreeItem(aggregateTable,SWT.NONE);
      attrItem.setText(entry.getKey().getName());
      attrItem.setImage(DBeaverIcons.getImage(DBUtils.getDataIcon(entry.getKey())));
      aggregateValues(attrItem,entry.getValue());
      attrItem.setExpanded(true);
    }
  }
 else {
    List<Number> allValues=new ArrayList<>(selection.size());
    for (    Object element : selection.toList()) {
      DBDAttributeBinding attr=selection.getElementAttribute(element);
      ResultSetRow row=selection.getElementRow(element);
      Object cellValue=model.getCellValue(attr,row);
      if (cellValue instanceof Number) {
        allValues.add((Number)cellValue);
      }
    }
    aggregateValues(null,allValues);
  }
}
