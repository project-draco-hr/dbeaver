{
  if (isFullyCached() || monitor.isCanceled()) {
    return;
  }
  List<OBJECT> tmpObjectList=new ArrayList<>();
  DBPDataSource dataSource=owner.getDataSource();
  if (dataSource == null) {
    throw new DBException("Not connected to database");
  }
  try {
    try (JDBCSession session=DBUtils.openMetaSession(monitor,dataSource,"Load objects from " + owner.getName())){
      try (JDBCStatement dbStat=prepareObjectsStatement(session,owner)){
        monitor.subTask("Execute query");
        dbStat.setFetchSize(DBConstants.METADATA_FETCH_SIZE);
        dbStat.executeStatement();
        JDBCResultSet dbResult=dbStat.getResultSet();
        if (dbResult != null) {
          try {
            while (dbResult.next()) {
              if (monitor.isCanceled()) {
                break;
              }
              OBJECT object=fetchObject(session,owner,dbResult);
              if (object == null) {
                continue;
              }
              tmpObjectList.add(object);
              monitor.subTask(object.getName());
              if (tmpObjectList.size() == maximumCacheSize) {
                log.warn("Maximum cache size exceeded (" + maximumCacheSize + ") in "+ this);
                break;
              }
            }
          }
  finally {
            dbResult.close();
          }
        }
      }
     }
 catch (    SQLException ex) {
      throw new DBException(ex,dataSource);
    }
  }
 catch (  DBException e) {
    if (!handleCacheReadError(e)) {
      throw e;
    }
  }
  Comparator<OBJECT> comparator=getListOrderComparator();
  if (comparator != null) {
    Collections.sort(tmpObjectList,comparator);
  }
synchronized (this) {
    detectCaseSensitivity(owner);
    mergeCache(tmpObjectList);
    this.invalidateObjects(monitor,owner,new CacheIterator());
  }
}
