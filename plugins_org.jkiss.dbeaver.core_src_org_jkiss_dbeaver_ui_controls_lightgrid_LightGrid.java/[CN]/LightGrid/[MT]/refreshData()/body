{
  this.removeAll();
  IGridContentProvider contentProvider=getContentProvider();
  if (contentProvider == null) {
    return;
  }
  this.currentVisibleItems=contentProvider.getRowCount();
  this.topIndex=0;
  this.bottomIndex=-1;
  this.startColumnIndex=-1;
  this.endColumnIndex=-1;
  int columnCount=contentProvider.getColumnCount();
  for (int i=0; i < columnCount; i++) {
    GridColumn column=new GridColumn(this,SWT.NONE);
    column.setText(getColumnLabelProvider().getText(i));
    column.setImage(getColumnLabelProvider().getImage(i));
    contentProvider.updateColumn(column);
  }
  if (getColumnCount() == 1) {
    getColumn(0).setWidth(getSize().x - getRowHeaderWidth() - getHScrollSelectionInPixels()- getVerticalBar().getSize().x);
  }
 else {
    int totalWidth=0;
    for (    GridColumn curColumn : columns) {
      curColumn.pack();
      totalWidth+=curColumn.getWidth();
    }
    int clientWidth=getClientArea().width;
    if (totalWidth > clientWidth) {
      int normalWidth=0;
      List<GridColumn> fatColumns=new ArrayList<GridColumn>();
      for (      GridColumn curColumn : columns) {
        if (curColumn.getWidth() > maxColumnDefWidth) {
          fatColumns.add(curColumn);
        }
 else {
          normalWidth+=curColumn.getWidth();
        }
      }
      if (!fatColumns.isEmpty()) {
        int freeSpace=(clientWidth - normalWidth - getBorderWidth()- rowHeaderWidth- (vScroll.getControl() == null ? 0 : vScroll.getControl().getSize().x)) / fatColumns.size();
        int newFatWidth=(freeSpace > maxColumnDefWidth ? freeSpace : maxColumnDefWidth);
        for (        GridColumn curColumn : fatColumns) {
          curColumn.setWidth(newFatWidth);
        }
      }
    }
  }
  updateScrollbars();
}
