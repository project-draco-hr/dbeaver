{
  e.gc.setBackground(getBackground());
  this.drawBackground(e.gc,0,0,getSize().x,getSize().y);
  if (scrollValuesObsolete) {
    updateScrollbars();
    scrollValuesObsolete=false;
  }
  int x;
  int y=0;
  if (columnHeadersVisible) {
    paintHeader(e.gc);
    y+=headerHeight;
  }
  int availableHeight=getClientArea().height - y;
  int visibleRows=availableHeight / getItemHeight() + 1;
  if (getItemCount() > 0 && availableHeight > 0) {
    RowRange range=getRowRange(getTopIndex(),availableHeight,false,false);
    if (range.height >= availableHeight)     visibleRows=range.rows;
 else     visibleRows=range.rows + (availableHeight - range.height) / getItemHeight() + 1;
  }
  int firstVisibleIndex=getTopIndex();
  int row=firstVisibleIndex;
  for (int i=0; i < visibleRows + (firstVisibleIndex - firstVisibleIndex); i++) {
    x=0;
    x-=getHScrollSelectionInPixels();
    if (row >= 0 && row < getItemCount()) {
      boolean cellInRowSelected=selectedRows.containsKey(row);
      if (rowHeaderVisible) {
        x+=rowHeaderWidth;
      }
      for (      GridColumn column : columns) {
        int width=column.getWidth();
        if (x + width >= 0 && x < getClientArea().width) {
          column.getCellRenderer().setBounds(x,y,width,getItemHeight());
          int cellInHeaderDelta=headerHeight - y;
          if (cellInHeaderDelta > 0) {
            e.gc.setClipping(new Rectangle(x - 1,y + cellInHeaderDelta,width + 1,getItemHeight() + 2 - cellInHeaderDelta));
          }
 else {
            e.gc.setClipping(new Rectangle(x - 1,y - 1,width + 1,getItemHeight() + 2));
          }
          column.getCellRenderer().setFocus(this.isFocusControl());
          column.getCellRenderer().setRowFocus(focusItem == row);
          column.getCellRenderer().setCellFocus(focusItem == row && focusColumn == column);
          column.getCellRenderer().setRowHover(hoveringItem == row);
          column.getCellRenderer().setColumnHover(hoveringColumn == column);
          if (selectedCells.contains(new GridPos(column.getIndex(),row))) {
            column.getCellRenderer().setCellSelected(true);
          }
 else {
            column.getCellRenderer().setCellSelected(false);
          }
          if (hoveringItem == row && hoveringColumn == column) {
            column.getCellRenderer().setHoverDetail(hoveringDetail);
          }
 else {
            column.getCellRenderer().setHoverDetail("");
          }
          column.getCellRenderer().setRow(row);
          column.getCellRenderer().paint(e.gc);
          e.gc.setClipping((Rectangle)null);
        }
        x+=column.getWidth();
      }
      if (x < getClientArea().width) {
        emptyCellRenderer.setFocus(this.isFocusControl());
        emptyCellRenderer.setBounds(x,y,getClientArea().width - x + 1,getItemHeight());
        emptyCellRenderer.setColumn(getColumnCount());
        emptyCellRenderer.paint(e.gc);
      }
      x=0;
      if (rowHeaderVisible) {
        rowHeaderRenderer.setSelected(cellInRowSelected);
        if (y >= headerHeight) {
          rowHeaderRenderer.setBounds(0,y,rowHeaderWidth,getItemHeight() + 1);
          rowHeaderRenderer.setRow(row);
          rowHeaderRenderer.paint(e.gc);
        }
        x+=rowHeaderWidth;
      }
      y+=getItemHeight() + 1;
    }
 else {
      if (rowHeaderVisible) {
        x+=rowHeaderWidth;
      }
      emptyCellRenderer.setBounds(x,y,getClientArea().width - x,getItemHeight());
      emptyCellRenderer.setFocus(false);
      emptyCellRenderer.setSelected(false);
      for (      GridColumn column : columns) {
        emptyCellRenderer.setBounds(x,y,column.getWidth(),getItemHeight());
        emptyCellRenderer.setColumn(column.getIndex());
        emptyCellRenderer.paint(e.gc);
        x+=column.getWidth();
      }
      if (x < getClientArea().width) {
        emptyCellRenderer.setBounds(x,y,getClientArea().width - x + 1,getItemHeight());
        emptyCellRenderer.setColumn(getColumnCount());
        emptyCellRenderer.paint(e.gc);
      }
      x=0;
      if (rowHeaderVisible) {
        emptyRowHeaderRenderer.setBounds(x,y,rowHeaderWidth,getItemHeight() + 1);
        emptyRowHeaderRenderer.paint(e.gc);
        x+=rowHeaderWidth;
      }
      y+=getItemHeight() + 1;
    }
    row++;
  }
  if (columnFootersVisible) {
    paintFooter(e.gc);
  }
}
