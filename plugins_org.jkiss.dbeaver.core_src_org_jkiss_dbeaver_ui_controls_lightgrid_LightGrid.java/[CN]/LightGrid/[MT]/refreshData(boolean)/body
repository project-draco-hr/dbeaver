{
  if (refreshColumns) {
    this.removeAll();
  }
  IGridContentProvider contentProvider=getContentProvider();
  this.nestedRows.clear();
  this.rowElements=collectRows(contentProvider,contentProvider.getElements(false),0);
  this.displayedToolTipText=null;
  if (refreshColumns) {
    this.topIndex=-1;
    this.bottomIndex=-1;
    this.maxColumnDepth=0;
    this.columnElements=contentProvider.getElements(true);
    for (    Object columnElement : columnElements) {
      GridColumn column=new GridColumn(this,columnElement);
      createChildColumns(column);
    }
    boolean hasChildColumns=false;
    for (Iterator<GridColumn> iter=columns.iterator(); iter.hasNext(); ) {
      GridColumn column=iter.next();
      if (column.getParent() == null) {
        topColumns.add(column);
      }
 else {
        hasChildColumns=true;
      }
      if (column.getChildren() != null) {
        iter.remove();
      }
    }
    if (hasChildColumns) {
      columnElements=new Object[columns.size()];
      for (int i=0; i < columns.size(); i++) {
        columnElements[i]=columns.get(i).getElement();
      }
    }
    recalculateSizes();
    scrollValuesObsolete=true;
    if (getColumnCount() == 1) {
      GridColumn column=getColumn(0);
      int columnWidth=column.computeHeaderWidth();
      int gridWidth=getSize().x - getRowHeaderWidth() - getHScrollSelectionInPixels()- getVerticalBar().getSize().x;
      if (gridWidth > columnWidth) {
        columnWidth=gridWidth;
      }
      column.setWidth(columnWidth);
    }
 else {
      int totalWidth=0;
      for (      GridColumn curColumn : topColumns) {
        curColumn.pack();
        totalWidth+=curColumn.getWidth();
      }
      int clientWidth=getClientArea().width;
      if (totalWidth > clientWidth) {
        int normalWidth=0;
        List<GridColumn> fatColumns=new ArrayList<GridColumn>();
        for (        GridColumn curColumn : columns) {
          if (curColumn.getWidth() > maxColumnDefWidth) {
            fatColumns.add(curColumn);
          }
 else {
            normalWidth+=curColumn.getWidth();
          }
        }
        if (!fatColumns.isEmpty()) {
          int freeSpace=(clientWidth - normalWidth - getBorderWidth()- rowHeaderWidth- vScroll.getWidth()) / fatColumns.size();
          int newFatWidth=(freeSpace > maxColumnDefWidth ? freeSpace : maxColumnDefWidth);
          for (          GridColumn curColumn : fatColumns) {
            curColumn.setWidth(newFatWidth);
          }
        }
      }
    }
  }
  updateScrollbars();
}
