{
  Point point=new Point(x,y);
  final GridColumn col=getColumn(point);
  final int row=getRow(point);
  Integer detail=y;
  boolean hoverChange=false;
  if (hoveringItem != row || !CommonUtils.equalObjects(hoveringDetail,detail) || hoveringColumn != col) {
    hoveringItem=row;
    hoveringDetail=detail;
    hoveringColumn=col;
    hoverChange=true;
  }
  boolean overLink=false;
  if (col != null && row >= 0) {
    if (cellRenderer.isOverLink(col,row,x,y)) {
      overLink=true;
    }
  }
  if (overLink) {
    if (!hoveringOnLink) {
      setCursor(sortCursor);
    }
  }
 else   if (hoveringOnLink) {
    setCursor(null);
  }
  hoveringOnLink=overLink;
  if (hoverChange) {
    String newTip=null;
    if ((hoveringItem >= 0) && (hoveringColumn != null)) {
      newTip=getCellToolTip(hoveringColumn,hoveringItem);
    }
 else     if (columnHeadersVisible && hoveringColumn != null && y <= headerHeight) {
      newTip=hoveringColumn.getHeaderTooltip();
    }
 else     if (rowHeaderVisible && hoveringItem >= 0 && x <= rowHeaderWidth) {
      newTip=getLabelProvider().getTooltip(getRowElement(hoveringItem));
    }
    if (newTip != null && !newTip.equals(displayedToolTipText)) {
      updateToolTipText(newTip);
    }
 else     if (newTip == null && displayedToolTipText != null) {
      updateToolTipText(null);
    }
    displayedToolTipText=newTip;
  }
  return hoverChange;
}
