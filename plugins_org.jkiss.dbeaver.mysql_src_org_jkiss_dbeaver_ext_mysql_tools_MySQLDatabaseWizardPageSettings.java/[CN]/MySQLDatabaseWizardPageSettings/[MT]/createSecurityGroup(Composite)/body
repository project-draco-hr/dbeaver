{
  try {
    final SecuredPasswordEncrypter encrypter=new SecuredPasswordEncrypter();
    final DBPConnectionInfo connectionInfo=wizard.getConnectionInfo();
    final String authProperty=DBConstants.INTERNAL_PROP_PREFIX + "-auth-" + wizard.getDatabaseObject().getName()+ "@";
    String authUser=null;
    String authPassword=null;
{
      Object authValue=connectionInfo.getProperties().get(authProperty);
      if (authValue != null) {
        String authCredentials=encrypter.decrypt(authValue.toString());
        int divPos=authCredentials.indexOf(':');
        if (divPos != -1) {
          authUser=authCredentials.substring(0,divPos);
          authPassword=authCredentials.substring(divPos + 1);
        }
      }
    }
    databaseUserName=authUser == null ? connectionInfo.getUserName() : authUser;
    databaseUserPassword=authPassword == null ? connectionInfo.getUserPassword() : authPassword;
    final boolean savePassword=authUser != null;
    Group securityGroup=UIUtils.createControlGroup(parent,"Security",2,GridData.HORIZONTAL_ALIGN_BEGINNING,0);
    Label infoLabel=new Label(securityGroup,SWT.NONE);
    infoLabel.setText("Override user credentials (" + wizard.getConnectionInfo().getUserName() + ") for database '"+ wizard.getDatabaseObject().getName()+ "'.\nExternal tools like 'mysqldump' may require different set of permissions.");
    GridData gd=new GridData(GridData.FILL_HORIZONTAL);
    gd.horizontalSpan=2;
    infoLabel.setLayoutData(gd);
    Button authButton=new Button(securityGroup,SWT.PUSH);
    authButton.setText("Authentication");
    authButton.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        BaseAuthDialog authDialog=new BaseAuthDialog(getShell(),"Authentication",null);
        authDialog.setUserName(databaseUserName);
        authDialog.setUserPassword(databaseUserPassword);
        authDialog.setSavePassword(savePassword);
        if (authDialog.open() == IDialogConstants.OK_ID) {
          databaseUserName=authDialog.getUserName();
          databaseUserPassword=authDialog.getUserPassword();
          if (authDialog.isSavePassword()) {
            try {
              connectionInfo.getProperties().put(authProperty,encrypter.encrypt(databaseUserName + ':' + databaseUserPassword));
            }
 catch (            EncryptionException e1) {
            }
          }
        }
      }
    }
);
    Button resetButton=new Button(securityGroup,SWT.PUSH);
    resetButton.setText("Reset to default");
    resetButton.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        connectionInfo.getProperties().remove(authProperty);
        databaseUserName=connectionInfo.getUserName();
        databaseUserPassword=connectionInfo.getUserPassword();
      }
    }
);
  }
 catch (  EncryptionException e) {
  }
}
