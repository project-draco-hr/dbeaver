{
  grid=new LightGrid(this,style);
  grid.setRowHeaderVisible(true);
  grid.setLinesVisible(true);
  grid.setHeaderVisible(true);
  grid.setMaxColumnDefWidth(MAX_DEF_COLUMN_WIDTH);
  GridData gd=new GridData(GridData.FILL_BOTH);
  grid.setLayoutData(gd);
  grid.addListener(SWT.MouseDoubleClick,this);
  grid.addListener(SWT.MouseDown,this);
  grid.addListener(SWT.KeyDown,this);
  grid.addListener(LightGrid.Event_ChangeSort,this);
  gridSelectionListener=new SelectionListener(){
    @Override public void widgetSelected(    SelectionEvent e){
      GridPos pos=(GridPos)e.data;
      Event event=new Event();
      event.x=pos.col;
      event.y=pos.row;
      notifyListeners(Event_ChangeCursor,event);
    }
    @Override public void widgetDefaultSelected(    SelectionEvent e){
    }
  }
;
  grid.addSelectionListener(gridSelectionListener);
  tableEditor=new GridEditor(grid);
  tableEditor.horizontalAlignment=SWT.LEFT;
  tableEditor.verticalAlignment=SWT.TOP;
  tableEditor.grabHorizontal=true;
  tableEditor.grabVertical=true;
  tableEditor.minimumWidth=50;
  hookContextMenu();
  grid.setContentProvider(contentProvider);
  grid.setContentLabelProvider(contentLabelProvider);
  grid.setColumnLabelProvider(columnLabelProvider);
  grid.setRowLabelProvider(rowLabelProvider);
{
    UIUtils.addFocusTracker(site,SPREADSHEET_CONTROL_ID,grid);
    grid.addDisposeListener(new DisposeListener(){
      @Override public void widgetDisposed(      DisposeEvent e){
        UIUtils.removeFocusTracker(site,grid);
      }
    }
);
  }
}
