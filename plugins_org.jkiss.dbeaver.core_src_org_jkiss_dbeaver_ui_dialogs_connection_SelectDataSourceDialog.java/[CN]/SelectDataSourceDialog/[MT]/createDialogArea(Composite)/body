{
  getShell().setText(CoreMessages.dialog_select_datasource_title);
  Composite group=(Composite)super.createDialogArea(parent);
  GridData gd=new GridData(GridData.FILL_BOTH);
  group.setLayoutData(gd);
  DBeaverCore core=DBeaverCore.getInstance();
  DBNProject rootNode=core.getNavigatorModel().getRoot().getProject(core.getProjectRegistry().getActiveProject());
  DatabaseNavigatorTree dataSourceTree=new DatabaseNavigatorTree(group,rootNode.getDatabases(),SWT.SINGLE,false);
  dataSourceTree.setLayoutData(new GridData(GridData.FILL_BOTH));
  dataSourceTree.getViewer().addFilter(new ViewerFilter(){
    @Override public boolean select(    Viewer viewer,    Object parentElement,    Object element){
      return element instanceof DBNLocalFolder || element instanceof DBNDataSource;
    }
  }
);
  dataSourceTree.getViewer().addSelectionChangedListener(new ISelectionChangedListener(){
    @Override public void selectionChanged(    SelectionChangedEvent event){
      IStructuredSelection structSel=(IStructuredSelection)event.getSelection();
      Object selNode=structSel.isEmpty() ? null : structSel.getFirstElement();
      if (selNode instanceof DBNDataSource) {
        dataSource=((DBNDataSource)selNode).getObject();
        getButton(IDialogConstants.OK_ID).setEnabled(true);
      }
 else {
        dataSource=null;
        getButton(IDialogConstants.OK_ID).setEnabled(false);
      }
    }
  }
);
  dataSourceTree.getViewer().addDoubleClickListener(new IDoubleClickListener(){
    @Override public void doubleClick(    DoubleClickEvent event){
      if (getButton(IDialogConstants.OK_ID).isEnabled()) {
        okPressed();
      }
    }
  }
);
  return group;
}
