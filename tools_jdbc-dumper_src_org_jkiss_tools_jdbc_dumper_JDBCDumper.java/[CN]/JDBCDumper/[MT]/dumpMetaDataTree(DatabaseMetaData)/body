{
  try {
    List<String> catalogs=new ArrayList<String>();
    try {
      catalogs=dumpResultSetAndReturn("Catalogs",metaData.getCatalogs(),"TABLE_CAT");
    }
 catch (    Throwable e) {
      e.printStackTrace();
    }
    if (catalogs.isEmpty()) {
      catalogs.add("%");
    }
    for (    String catalog : catalogs) {
      List<String> schemas=new ArrayList<String>();
      try {
        schemas=dumpResultSetAndReturn(catalog + " Schemas",metaData.getSchemas(catalog,"%"),"TABLE_SCHEM");
      }
 catch (      Throwable e) {
        e.printStackTrace();
      }
      if (schemas.isEmpty() && catalogs.size() == 1) {
        catalog="%";
        try {
          schemas=dumpResultSetAndReturn("All Schemas",metaData.getSchemas("%","%"),"TABLE_SCHEM");
        }
 catch (        Throwable e) {
          e.printStackTrace();
        }
        if (schemas.isEmpty()) {
          schemas.add("%");
        }
      }
      final String catalogName=catalog;
      for (      final String schema : schemas) {
        dumpResultSet("Tables of " + catalog + "."+ schema,"",metaData.getTables(catalog,schema,"%",null),new NestedFetcher(){
          @Override public void readNestedInfo(          ResultSet resultSet) throws SQLException {
            String tableName=resultSet.getString("TABLE_NAME");
            System.out.println("\tColumns:");
            try {
              dumpResultSet(null,"\t\t",metaData.getColumns(catalogName,schema,tableName,"%"),null);
            }
 catch (            Throwable e) {
              e.printStackTrace();
            }
            System.out.println("\tIndexes:");
            try {
              dumpResultSet(null,"\t\t",metaData.getIndexInfo(catalogName,schema,tableName,false,false),null);
            }
 catch (            Throwable e) {
              e.printStackTrace();
            }
            System.out.println("\tImported Keys:");
            try {
              dumpResultSet(null,"\t\t",metaData.getImportedKeys(catalogName,schema,tableName),null);
            }
 catch (            Throwable e) {
              e.printStackTrace();
            }
            System.out.println("\tExported Keys:");
            try {
              dumpResultSet(null,"\t\t",metaData.getExportedKeys(catalogName,schema,tableName),null);
            }
 catch (            Throwable e) {
              e.printStackTrace();
            }
          }
        }
);
      }
    }
  }
 catch (  Throwable e) {
    e.printStackTrace();
  }
}
