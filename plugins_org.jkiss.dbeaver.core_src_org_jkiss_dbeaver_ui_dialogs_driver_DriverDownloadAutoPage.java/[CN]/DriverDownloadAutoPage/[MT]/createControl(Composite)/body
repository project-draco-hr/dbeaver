{
  final DriverDownloadWizard wizard=getWizard();
  final DriverDescriptor driver=wizard.getDriver();
  setMessage("Download " + driver.getFullName() + " driver files");
  initializeDialogUnits(parent);
  Composite composite=UIUtils.createPlaceholder(parent,1);
  composite.setLayoutData(new GridData(GridData.FILL_BOTH));
  if (!wizard.isForceDownload()) {
    Composite infoGroup=UIUtils.createPlaceholder(composite,2,5);
    infoGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    Label infoText=new Label(infoGroup,SWT.NONE);
    infoText.setText(driver.getFullName() + " driver files are missing.\nDBeaver can download these files automatically.\n\n");
    infoText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    final Button forceCheckbox=UIUtils.createCheckbox(infoGroup,"Force download",wizard.isForceDownload());
    forceCheckbox.setToolTipText("Force files download. Will download files even if they are already on the disk");
    forceCheckbox.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END | GridData.VERTICAL_ALIGN_BEGINNING));
    forceCheckbox.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        wizard.setForceDownload(forceCheckbox.getSelection());
      }
    }
);
  }
{
    Group filesGroup=UIUtils.createControlGroup(composite,"Files required by driver",1,-1,-1);
    filesGroup.setLayoutData(new GridData(GridData.FILL_BOTH));
    filesTree=new Tree(filesGroup,SWT.BORDER | SWT.FULL_SELECTION);
    filesTree.setHeaderVisible(true);
    filesTree.setLayoutData(new GridData(GridData.FILL_BOTH));
    UIUtils.createTreeColumn(filesTree,SWT.LEFT,"File");
    UIUtils.createTreeColumn(filesTree,SWT.LEFT,"Version");
    UIUtils.createTreeColumn(filesTree,SWT.LEFT,"Description");
    treeEditor=new TreeEditor(filesTree);
    treeEditor.horizontalAlignment=SWT.RIGHT;
    treeEditor.verticalAlignment=SWT.CENTER;
    treeEditor.grabHorizontal=true;
    treeEditor.minimumWidth=50;
    filesTree.addMouseListener(new MouseAdapter(){
      @Override public void mouseUp(      MouseEvent e){
        TreeItem item=filesTree.getItem(new Point(e.x,e.y));
        if (item != null && item.getData() instanceof DBPDriverDependencies.DependencyNode) {
          if (UIUtils.getColumnAtPos(item,e.x,e.y) == 1) {
            showVersionEditor(item);
            return;
          }
        }
        disposeOldEditor();
      }
    }
);
  }
  if (!wizard.isForceDownload()) {
    Label infoText=new Label(composite,SWT.NONE);
    infoText.setText("\nOr you can obtain driver files by yourself and add them in driver editor.");
    infoText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  }
  createLinksPanel(composite);
  boldFont=UIUtils.makeBoldFont(filesTree.getFont());
  filesTree.addDisposeListener(new DisposeListener(){
    @Override public void widgetDisposed(    DisposeEvent e){
      UIUtils.dispose(boldFont);
    }
  }
);
  setControl(composite);
}
