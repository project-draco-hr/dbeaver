{
  DriverDownloadWizard wizard=(DriverDownloadWizard)getWizard();
  DriverDescriptor driver=wizard.getDriver();
  setMessage("Download " + driver.getFullName() + " driver files");
  StringBuilder message=new StringBuilder();
  message.append("").append(driver.getFullName()).append(" driver files are missing.\nDBeaver can download these files automatically.\n\nFiles required by driver:");
  for (  DriverFileDescriptor file : driver.getDriverFiles()) {
    message.append("\n\t-").append(file.getPath());
  }
  message.append("\n\nOr you can obtain driver files by yourself and add them in driver editor.");
  initializeDialogUnits(parent);
  Composite composite=UIUtils.createPlaceholder(parent,1);
  composite.setLayoutData(new GridData(GridData.FILL_BOTH));
  Text infoText=new Text(composite,SWT.MULTI | SWT.READ_ONLY | SWT.WRAP);
  infoText.setText(message.toString());
  infoText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  UIUtils.createPlaceholder(composite,1).setLayoutData(new GridData(GridData.FILL_BOTH));
{
    Composite linksGroup=UIUtils.createPlaceholder(composite,2);
    linksGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    Composite configGroup=UIUtils.createPlaceholder(linksGroup,1);
    configGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    UIUtils.createLink(configGroup,"<a>Repository configuration</a>",new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
      }
    }
);
    UIUtils.createLink(configGroup,"<a>Proxy configration</a>",new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
      }
    }
);
    Composite webGroup=UIUtils.createPlaceholder(linksGroup,1);
    webGroup.setLayoutData(new GridData(GridData.VERTICAL_ALIGN_BEGINNING | GridData.FILL_HORIZONTAL | GridData.HORIZONTAL_ALIGN_END));
    if (!CommonUtils.isEmpty(driver.getWebURL())) {
      Link link=UIUtils.createLink(webGroup,"Vendor's website: <a href=\"" + driver.getWebURL() + "\">"+ driver.getWebURL()+ "</a>",new SelectionAdapter(){
        @Override public void widgetSelected(        SelectionEvent e){
          super.widgetSelected(e);
        }
      }
);
      link.setLayoutData(new GridData(GridData.VERTICAL_ALIGN_BEGINNING | GridData.HORIZONTAL_ALIGN_END));
    }
  }
  setControl(composite);
}
