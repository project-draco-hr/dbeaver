{
  super(config);
  this.registry=registry;
  parentId=config.getAttribute(RegistryConstants.ATTR_PARENT);
  this.id=config.getAttribute(RegistryConstants.ATTR_ID);
  this.implType=new ObjectType(config.getAttribute(RegistryConstants.ATTR_CLASS));
  this.name=config.getAttribute(RegistryConstants.ATTR_LABEL);
  this.description=config.getAttribute(RegistryConstants.ATTR_DESCRIPTION);
  this.icon=iconToImage(config.getAttribute(RegistryConstants.ATTR_ICON));
  if (this.icon == null) {
    this.icon=UIIcon.GEN_DATABASE_TYPE;
  }
  MavenRegistry.getInstance();
  IConfigurationElement[] trees=config.getChildren(RegistryConstants.TAG_TREE);
  if (!ArrayUtils.isEmpty(trees)) {
    this.treeDescriptor=this.loadTreeInfo(trees[0]);
  }
{
    for (    IConfigurationElement propsElement : config.getChildren(RegistryConstants.TAG_DRIVER_PROPERTIES)) {
      for (      IConfigurationElement prop : propsElement.getChildren(PropertyDescriptor.TAG_PROPERTY_GROUP)) {
        driverProperties.addAll(PropertyDescriptor.extractProperties(prop));
      }
    }
  }
{
    for (    IConfigurationElement driversElement : config.getChildren(RegistryConstants.TAG_DRIVERS)) {
      this.driversManagable=driversElement.getAttribute(RegistryConstants.ATTR_MANAGABLE) == null || CommonUtils.getBoolean(driversElement.getAttribute(RegistryConstants.ATTR_MANAGABLE));
      for (      IConfigurationElement driverElement : driversElement.getChildren(RegistryConstants.TAG_DRIVER)) {
        try {
          this.drivers.add(loadDriver(driverElement));
        }
 catch (        Exception e) {
          log.error("Error loading driver",e);
        }
      }
    }
  }
{
    for (    IConfigurationElement viewsElement : config.getChildren(RegistryConstants.TAG_VIEWS)) {
      for (      IConfigurationElement viewElement : viewsElement.getChildren(RegistryConstants.TAG_VIEW)) {
        this.views.add(new DataSourceViewDescriptor(this,viewElement));
      }
    }
  }
}
