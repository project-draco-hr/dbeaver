{
  table=new Table(composite,SWT.BORDER | SWT.MULTI | SWT.CHECK| SWT.FULL_SELECTION);
  table.setLinesVisible(true);
  table.setHeaderVisible(true);
  GridData gd=new GridData(GridData.FILL_BOTH);
  gd.widthHint=400;
  gd.heightHint=300;
  table.setLayoutData(gd);
  UIUtils.createTableColumn(table,SWT.LEFT,"Value");
  UIUtils.createTableColumn(table,SWT.LEFT,"Description");
  MenuManager menuMgr=new MenuManager();
  menuMgr.addMenuListener(new IMenuListener(){
    @Override public void menuAboutToShow(    IMenuManager manager){
      UIUtils.fillDefaultTableContextMenu(manager,table);
    }
  }
);
  menuMgr.setRemoveAllWhenShown(true);
  table.setMenu(menuMgr.createContextMenu(table));
  if (attr.getDataKind() == DBPDataKind.STRING) {
    final Text valueFilterText=new Text(composite,SWT.BORDER);
    valueFilterText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    valueFilterText.addModifyListener(new ModifyListener(){
      @Override public void modifyText(      ModifyEvent e){
        filterPattern=valueFilterText.getText();
        if (filterPattern.isEmpty()) {
          filterPattern=null;
        }
        loadValues();
      }
    }
);
  }
  filterPattern=null;
  loadValues();
}
