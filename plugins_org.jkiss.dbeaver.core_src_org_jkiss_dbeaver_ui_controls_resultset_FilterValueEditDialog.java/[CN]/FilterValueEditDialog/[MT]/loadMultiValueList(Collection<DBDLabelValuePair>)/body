{
  table.removeAll();
  Pattern pattern=null;
  if (!CommonUtils.isEmpty(filterPattern)) {
    pattern=Pattern.compile(SQLUtils.makeLikePattern("%" + filterPattern + "%"),Pattern.CASE_INSENSITIVE);
  }
  boolean hasNulls=false;
  java.util.Map<Object,DBDLabelValuePair> rowData=new TreeMap<>();
  for (  ResultSetRow row : viewer.getModel().getAllRows()) {
    Object cellValue=viewer.getModel().getCellValue(attr,row);
    if (DBUtils.isNullValue(cellValue)) {
      hasNulls=true;
      continue;
    }
    String itemString=attr.getValueHandler().getValueDisplayString(attr,cellValue,DBDDisplayFormat.UI);
    rowData.put(cellValue,new DBDLabelValuePair(itemString,cellValue));
  }
  for (  DBDLabelValuePair pair : values) {
    rowData.put(pair.getValue(),pair);
  }
  java.util.List<DBDLabelValuePair> sortedList=new ArrayList<>(rowData.values());
  if (pattern != null) {
    for (Iterator<DBDLabelValuePair> iter=sortedList.iterator(); iter.hasNext(); ) {
      String itemString=attr.getValueHandler().getValueDisplayString(attr,iter.next().getValue(),DBDDisplayFormat.UI);
      if (!pattern.matcher(itemString).matches()) {
        iter.remove();
      }
    }
  }
  Collections.sort(sortedList);
  if (hasNulls) {
    sortedList.add(0,new DBDLabelValuePair(DBUtils.getDefaultValueDisplayString(null,DBDDisplayFormat.UI),null));
  }
  Set<Object> checkedValues=new HashSet<>();
  for (  ResultSetRow row : rows) {
    Object value=viewer.getModel().getCellValue(attr,row);
    checkedValues.add(value);
  }
  TableItem firstVisibleItem=null;
  for (  DBDLabelValuePair row : sortedList) {
    Object cellValue=row.getValue();
    String itemString=attr.getValueHandler().getValueDisplayString(attr,cellValue,DBDDisplayFormat.UI);
    TableItem item=new TableItem(table,SWT.LEFT);
    item.setData(cellValue);
    item.setText(0,itemString);
    if (!CommonUtils.isEmpty(row.getLabel())) {
      item.setText(1,row.getLabel());
    }
    if (checkedValues.contains(cellValue)) {
      item.setChecked(true);
      if (firstVisibleItem == null) {
        firstVisibleItem=item;
      }
    }
  }
  UIUtils.packColumns(table,false);
  if (firstVisibleItem != null) {
    table.showItem(firstVisibleItem);
  }
}
