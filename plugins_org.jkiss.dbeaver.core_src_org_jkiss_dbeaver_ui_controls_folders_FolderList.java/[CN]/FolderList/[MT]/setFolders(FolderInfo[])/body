{
  if (elements != ELEMENTS_EMPTY) {
    removeAll();
  }
  elements=new ListElement[children.length];
  if (children.length == 0) {
    widestLabelIndex=NONE;
  }
 else {
    widestLabelIndex=0;
    for (int i=0; i < children.length; i++) {
      elements[i]=new ListElement(this,children[i],i);
      elements[i].setVisible(false);
      elements[i].setLayoutData(null);
      if (i != widestLabelIndex) {
        int width=getTabWidth(children[i]);
        if (width > getTabWidth(children[widestLabelIndex])) {
          widestLabelIndex=i;
        }
      }
    }
  }
  int maxTabWidth=getTabWidth(children[widestLabelIndex]);
  Object layoutData=getLayoutData();
  if (layoutData instanceof GridData) {
    ((GridData)layoutData).widthHint=maxTabWidth + INDENT_LEFT + INDENT_RIGHT;
  }
  computeTopAndBottomTab();
}
