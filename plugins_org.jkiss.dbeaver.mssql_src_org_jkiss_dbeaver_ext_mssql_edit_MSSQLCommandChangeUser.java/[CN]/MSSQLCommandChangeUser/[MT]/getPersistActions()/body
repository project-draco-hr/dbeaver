{
  List<IDatabasePersistAction> actions=new ArrayList<IDatabasePersistAction>();
  boolean newUser=!getObject().isPersisted();
  if (newUser) {
    actions.add(new AbstractDatabasePersistAction(MSSQLMessages.edit_command_change_user_action_create_new_user,"CREATE USER " + getObject().getFullName()){
      @Override public void handleExecute(      Throwable error){
        if (error == null) {
          getObject().setPersisted(true);
        }
      }
    }
);
  }
  StringBuilder script=new StringBuilder();
  script.append("UPDATE mssql.user SET ");
  boolean hasSet=false;
  for (  Map.Entry<Object,Object> entry : getProperties().entrySet()) {
    if (entry.getKey() == UserPropertyHandler.PASSWORD_CONFIRM) {
      continue;
    }
    String delim=hasSet ? "," : "";
switch (UserPropertyHandler.valueOf((String)entry.getKey())) {
case PASSWORD:
      script.append(delim).append("Password=PASSWORD('").append(SQLUtils.escapeString(CommonUtils.toString(entry.getValue()))).append("')");
    hasSet=true;
  break;
case MAX_QUERIES:
script.append(delim).append("Max_Questions=").append(CommonUtils.toInt(entry.getValue()));
hasSet=true;
break;
case MAX_UPDATES:
script.append(delim).append("Max_Updates=").append(CommonUtils.toInt(entry.getValue()));
hasSet=true;
break;
case MAX_CONNECTIONS:
script.append(delim).append("Max_Connections=").append(CommonUtils.toInt(entry.getValue()));
hasSet=true;
break;
case MAX_USER_CONNECTIONS:
script.append(delim).append("Max_User_Connections=").append(CommonUtils.toInt(entry.getValue()));
hasSet=true;
break;
default :
break;
}
}
script.append(" WHERE User='").append(getObject().getUserName()).append("' AND Host='").append(getObject().getHost()).append("'");
if (hasSet) {
actions.add(new AbstractDatabasePersistAction(MSSQLMessages.edit_command_change_user_action_update_user_record,script.toString()));
}
return actions.toArray(new IDatabasePersistAction[actions.size()]);
}
