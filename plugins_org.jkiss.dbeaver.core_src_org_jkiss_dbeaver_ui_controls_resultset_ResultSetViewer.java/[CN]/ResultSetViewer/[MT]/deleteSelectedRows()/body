{
  GridPos curPos=spreadsheet.getCursorPosition();
  TreeSet<Integer> rowNumbers=new TreeSet<Integer>();
  if (gridMode == GridMode.RECORD) {
    rowNumbers.add(this.curRowNum);
  }
 else {
    for (    GridPos pos : spreadsheet.getSelection()) {
      rowNumbers.add(pos.row);
    }
  }
  for (Iterator<Integer> iter=rowNumbers.iterator(); iter.hasNext(); ) {
    int rowNum=iter.next();
    if (rowNum < 0 || rowNum >= model.getRowCount()) {
      iter.remove();
    }
  }
  if (rowNumbers.isEmpty()) {
    return;
  }
  int rowsRemoved=0;
  int lastRowNum=-1;
  for (Iterator<Integer> iter=rowNumbers.descendingIterator(); iter.hasNext(); ) {
    int rowNum=iter.next();
    if (rowNum > lastRowNum) {
      lastRowNum=rowNum;
    }
    if (model.deleteRow(rowNum)) {
      rowsRemoved++;
    }
  }
  if (gridMode == GridMode.GRID && lastRowNum < spreadsheet.getItemCount() - 1) {
    curPos.row=lastRowNum - rowsRemoved + 1;
    spreadsheet.setCursor(curPos,false);
  }
  if (rowsRemoved > 0) {
    refreshSpreadsheet(true);
  }
 else {
    spreadsheet.redrawGrid();
  }
  updateEditControls();
  fireResultSetChange();
}
