{
  GridPos curPos=spreadsheet.getCursorPosition();
  List<RowData> rowsToDelete=new ArrayList<RowData>();
  if (gridMode == GridMode.RECORD) {
    rowsToDelete.add(model.getRow(this.curRowNum));
  }
 else {
    for (    GridPos pos : spreadsheet.getSelection()) {
      rowsToDelete.add(model.getRow(pos.row));
    }
  }
  if (rowsToDelete.isEmpty()) {
    return;
  }
  int rowsRemoved=0;
  int lastRowNum=-1;
  for (  RowData row : rowsToDelete) {
    if (model.deleteRow(row)) {
      rowsRemoved++;
    }
  }
  if (gridMode == GridMode.GRID && lastRowNum < spreadsheet.getItemCount() - 1) {
    curPos.row=lastRowNum - rowsRemoved + 1;
    spreadsheet.setCursor(curPos,false);
  }
  if (rowsRemoved > 0) {
    refreshSpreadsheet(false,true);
  }
 else {
    spreadsheet.redrawGrid();
  }
  updateEditControls();
  fireResultSetChange();
}
