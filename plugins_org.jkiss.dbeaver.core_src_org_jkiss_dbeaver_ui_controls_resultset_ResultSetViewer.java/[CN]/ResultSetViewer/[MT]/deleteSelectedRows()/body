{
  Set<RowData> rowsToDelete=new LinkedHashSet<RowData>();
  if (recordMode) {
    rowsToDelete.add(curRow);
  }
 else {
    for (    GridCell cell : spreadsheet.getCellSelection()) {
      rowsToDelete.add((RowData)cell.row);
    }
  }
  if (rowsToDelete.isEmpty()) {
    return;
  }
  int rowsRemoved=0;
  int lastRowNum=-1;
  for (  RowData row : rowsToDelete) {
    if (model.deleteRow(row)) {
      rowsRemoved++;
    }
    lastRowNum=row.getVisualNumber();
  }
  if (!recordMode && lastRowNum < spreadsheet.getItemCount() - 1 && curAttribute != null) {
    GridCell newPos=new GridCell(curAttribute,model.getRow(lastRowNum - rowsRemoved + 1));
    spreadsheet.setCursor(newPos,false);
  }
  if (rowsRemoved > 0) {
    refreshSpreadsheet(true);
  }
 else {
    spreadsheet.redrawGrid();
  }
  updateEditControls();
  fireResultSetChange();
}
