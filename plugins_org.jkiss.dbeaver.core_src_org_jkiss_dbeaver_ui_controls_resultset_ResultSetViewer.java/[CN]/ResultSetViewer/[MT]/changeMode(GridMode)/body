{
  int oldRowNum=this.curRowNum, oldColNum=this.curColNum;
  int rowCount=model.getRowCount();
  if (rowCount > 0) {
    if (oldRowNum < 0) {
      oldRowNum=this.curRowNum=0;
    }
 else     if (oldRowNum >= rowCount) {
      oldRowNum=this.curRowNum=rowCount - 1;
    }
  }
  this.gridMode=gridMode;
  if (this.gridMode == GridMode.GRID) {
    this.spreadsheet.setRowHeaderWidth(DEFAULT_ROW_HEADER_WIDTH);
    this.initResultSet();
  }
 else {
    this.resetRecordHeaderWidth();
    this.updateRecordMode();
  }
  if (gridMode == GridMode.GRID) {
    if (oldRowNum >= 0 && oldRowNum < spreadsheet.getItemCount()) {
      spreadsheet.setCursor(new GridPos(oldColNum,oldRowNum),false);
    }
  }
 else {
    if (oldColNum >= 0) {
      spreadsheet.setCursor(new GridPos(0,oldColNum),false);
    }
  }
  spreadsheet.layout(true,true);
  previewValue();
}
