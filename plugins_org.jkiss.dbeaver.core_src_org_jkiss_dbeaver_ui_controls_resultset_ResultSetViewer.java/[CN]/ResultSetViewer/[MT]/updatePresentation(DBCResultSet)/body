{
  try {
    if (resultSet instanceof StatResultSet) {
      availablePresentations=Collections.emptyList();
      setActivePresentation(new StatisticsPresentation());
      activePresentationDescriptor=null;
    }
 else {
      IResultSetContext context=new IResultSetContext(){
        @Override public boolean supportsAttributes(){
          DBDAttributeBinding[] attrs=model.getAttributes();
          return attrs.length > 0 && (attrs[0].getDataKind() != DBPDataKind.DOCUMENT || !CommonUtils.isEmpty(attrs[0].getNestedBindings()));
        }
        @Override public boolean supportsDocument(){
          DBDAttributeBinding[] attrs=model.getAttributes();
          return attrs.length == 1 && attrs[0].getDataKind() == DBPDataKind.DOCUMENT;
        }
      }
;
      availablePresentations=ResultSetPresentationRegistry.getInstance().getAvailablePresentations(resultSet,context);
      if (!availablePresentations.isEmpty()) {
        for (        ResultSetPresentationDescriptor pd : availablePresentations) {
          if (pd == activePresentationDescriptor) {
            return;
          }
        }
        String defaultPresentationId=getPreferenceStore().getString(DBeaverPreferences.RESULT_SET_PRESENTATION);
        ResultSetPresentationDescriptor newPresentation=null;
        if (!CommonUtils.isEmpty(defaultPresentationId)) {
          for (          ResultSetPresentationDescriptor pd : availablePresentations) {
            if (pd.getId().equals(defaultPresentationId)) {
              newPresentation=pd;
              break;
            }
          }
        }
        if (newPresentation == null) {
          newPresentation=availablePresentations.get(0);
        }
        try {
          IResultSetPresentation instance=newPresentation.createInstance();
          activePresentationDescriptor=newPresentation;
          setActivePresentation(instance);
        }
 catch (        DBException e) {
          log.error(e);
        }
      }
    }
  }
  finally {
    CImageCombo combo=presentationSwitchCombo.combo;
    combo.setRedraw(false);
    try {
      if (activePresentationDescriptor == null) {
        combo.setEnabled(false);
      }
 else {
        combo.setEnabled(true);
        combo.removeAll();
        for (        ResultSetPresentationDescriptor pd : availablePresentations) {
          combo.add(pd.getIcon(),pd.getLabel(),null,pd);
        }
        combo.select(activePresentationDescriptor);
      }
    }
  finally {
      combo.setRedraw(true);
    }
  }
}
