{
  viewerPanel.setRedraw(false);
  try {
    if (resultSet instanceof StatResultSet) {
      availablePresentations=Collections.emptyList();
      setActivePresentation(new StatisticsPresentation());
      activePresentationDescriptor=null;
    }
 else {
      availablePresentations=ResultSetPresentationRegistry.getInstance().getAvailablePresentations(resultSet);
      if (!availablePresentations.isEmpty()) {
        for (        ResultSetPresentationDescriptor pd : availablePresentations) {
          if (pd == activePresentationDescriptor) {
            return;
          }
        }
        String defaultPresentationId=getPreferenceStore().getString(DBeaverPreferences.RESULT_SET_PRESENTATION);
        ResultSetPresentationDescriptor newPresentation=null;
        if (!CommonUtils.isEmpty(defaultPresentationId)) {
          for (          ResultSetPresentationDescriptor pd : availablePresentations) {
            if (pd.getId().equals(defaultPresentationId)) {
              newPresentation=pd;
              break;
            }
          }
        }
        if (newPresentation == null) {
          newPresentation=availablePresentations.get(0);
        }
        try {
          IResultSetPresentation instance=newPresentation.createInstance();
          activePresentationDescriptor=newPresentation;
          setActivePresentation(instance);
        }
 catch (        DBException e) {
          log.error(e);
        }
      }
    }
  }
  finally {
    CImageCombo combo=presentationSwitchCombo.combo;
    if (activePresentationDescriptor == null) {
      combo.setEnabled(false);
    }
 else {
      combo.setEnabled(true);
      combo.removeAll();
      for (      ResultSetPresentationDescriptor pd : availablePresentations) {
        combo.add(pd.getIcon(),pd.getLabel(),null,pd);
      }
      combo.select(activePresentationDescriptor);
    }
    viewerPanel.setRedraw(true);
  }
}
