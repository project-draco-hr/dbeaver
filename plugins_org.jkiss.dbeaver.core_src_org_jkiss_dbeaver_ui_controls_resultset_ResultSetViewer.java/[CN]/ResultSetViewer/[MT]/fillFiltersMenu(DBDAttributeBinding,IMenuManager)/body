{
  if (supportsDataFilter()) {
    DBCLogicalOperator[] operators=attribute.getValueHandler().getSupportedOperators(attribute);
    for (    DBCLogicalOperator operator : operators) {
      if (operator.getArgumentCount() == 0) {
        filtersMenu.add(new FilterByAttributeAction(operator,FilterByAttributeType.NONE,attribute));
      }
    }
    for (    FilterByAttributeType type : FilterByAttributeType.values()) {
      if (type == FilterByAttributeType.NONE) {
        continue;
      }
      filtersMenu.add(new Separator());
      if (type.getValue(this,attribute,DBCLogicalOperator.EQUALS,true) == null) {
        continue;
      }
      for (      DBCLogicalOperator operator : operators) {
        if (operator.getArgumentCount() > 0) {
          filtersMenu.add(new FilterByAttributeAction(operator,type,attribute));
        }
      }
    }
    filtersMenu.add(new Separator());
    DBDAttributeConstraint constraint=model.getDataFilter().getConstraint(attribute);
    if (constraint != null && constraint.hasCondition()) {
      filtersMenu.add(new FilterResetAttributeAction(attribute));
    }
  }
  filtersMenu.add(new Separator());
  filtersMenu.add(new ToggleServerSideOrderingAction());
  filtersMenu.add(new ShowFiltersAction());
}
