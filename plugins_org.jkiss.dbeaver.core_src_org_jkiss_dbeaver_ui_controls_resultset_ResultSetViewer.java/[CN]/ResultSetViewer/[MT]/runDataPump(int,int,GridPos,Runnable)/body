{
  if (dataPumpJob == null) {
    dataPumpJob=new ResultSetDataPumpJob(this);
    dataPumpJob.addJobChangeListener(new JobChangeAdapter(){
      @Override public void done(      IJobChangeEvent event){
        final Throwable error=dataPumpJob == null ? null : dataPumpJob.getError();
        dataPumpJob=null;
        Display.getDefault().asyncExec(new Runnable(){
          @Override public void run(){
            final Shell shell=getControl().getShell();
            if (error != null) {
              setStatus(error.getMessage(),true);
              UIUtils.showErrorDialog(shell,"Error executing query","Query execution failed",error);
            }
            if (oldPos != null) {
              ResultSetViewer.this.curRowNum=oldPos.row;
              ResultSetViewer.this.curColNum=oldPos.col;
              if (mode == ResultSetMode.GRID) {
                spreadsheet.setCursor(new GridPos(curColNum,curRowNum),false);
              }
 else {
                spreadsheet.setCursor(new GridPos(0,curColNum),false);
              }
            }
            if (finalizer != null) {
              finalizer.run();
            }
          }
        }
);
      }
    }
);
    dataPumpJob.setOffset(offset);
    dataPumpJob.setMaxRows(maxRows);
    dataPumpJob.schedule();
  }
}
