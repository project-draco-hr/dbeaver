{
  rejectChanges();
  curRows=new ArrayList<Object[]>(this.origRows);
  if (dataFilter.getOrderColumns().isEmpty()) {
    return;
  }
  Collections.sort(curRows,new Comparator<Object[]>(){
    @Override public int compare(    Object[] row1,    Object[] row2){
      int result=0;
      for (      DBQOrderColumn co : dataFilter.getOrderColumns()) {
        final int colIndex=getMetaColumnIndex(null,co.getColumnName());
        if (colIndex < 0) {
          continue;
        }
        Object cell1=row1[colIndex];
        Object cell2=row2[colIndex];
        if (cell1 == cell2) {
          result=0;
        }
 else         if (DBUtils.isNullValue(cell1)) {
          result=1;
        }
 else         if (DBUtils.isNullValue(cell2)) {
          result=-1;
        }
 else         if (cell1 instanceof Comparable<?>) {
          result=((Comparable)cell1).compareTo(cell2);
        }
 else {
          String str1=cell1.toString();
          String str2=cell2.toString();
          result=str1.compareTo(str2);
        }
        if (co.isDescending()) {
          result=-result;
        }
        if (result != 0) {
          break;
        }
      }
      return result;
    }
  }
);
}
