{
  GridPos curPos=spreadsheet.getCursorPosition();
  int rowNum;
  if (gridMode == GridMode.RECORD) {
    rowNum=this.curRowNum;
  }
 else {
    rowNum=curPos.row;
  }
  if (rowNum < 0) {
    rowNum=0;
  }
  model.shiftRows(rowNum,1);
  final DBDAttributeBinding[] columns=model.getColumns();
  final Object[] cells=new Object[columns.length];
  final int currentRowNumber=rowNum;
  try {
    DBeaverUI.runInProgressService(new DBRRunnableWithProgress(){
      @Override public void run(      DBRProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
        DBCSession session=getDataSource().openSession(monitor,DBCExecutionPurpose.UTIL,CoreMessages.controls_resultset_viewer_add_new_row_context_name);
        try {
          if (copyCurrent && currentRowNumber >= 0 && currentRowNumber < model.getRowCount()) {
            Object[] origRow=model.getRowData(currentRowNumber);
            for (int i=0; i < columns.length; i++) {
              DBDAttributeBinding metaColumn=columns[i];
              DBSAttributeBase attribute=metaColumn.getAttribute();
              if (attribute.isSequence() || attribute.isPseudoAttribute()) {
                cells[i]=null;
              }
 else {
                try {
                  cells[i]=metaColumn.getValueHandler().getValueFromObject(session,attribute,origRow[i],true);
                }
 catch (                DBCException e) {
                  log.warn(e);
                  try {
                    cells[i]=DBUtils.makeNullValue(session,metaColumn.getValueHandler(),attribute);
                  }
 catch (                  DBCException e1) {
                    log.warn(e1);
                  }
                }
              }
            }
          }
 else {
            for (int i=0; i < columns.length; i++) {
              DBDAttributeBinding metaColumn=columns[i];
              try {
                cells[i]=DBUtils.makeNullValue(session,metaColumn.getValueHandler(),metaColumn.getAttribute());
              }
 catch (              DBCException e) {
                log.warn(e);
              }
            }
          }
        }
  finally {
          session.close();
        }
      }
    }
);
  }
 catch (  InvocationTargetException e) {
    log.error("Could not create new row",e.getTargetException());
  }
catch (  InterruptedException e) {
  }
  model.addNewRow(rowNum,cells);
  refreshSpreadsheet(false,true);
  updateEditControls();
  fireResultSetChange();
}
