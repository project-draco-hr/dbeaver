{
  if (dataPumpJob == null) {
    DBDDataFilter useDataFilter=dataFilter;
    if (useDataFilter == null) {
      if (dataContainer == getDataContainer()) {
        useDataFilter=model.getDataFilter();
      }
    }
    dataPumpJob=new ResultSetDataPumpJob(dataContainer,useDataFilter,getDataReceiver(),getSpreadsheet());
    dataPumpJob.addJobChangeListener(new JobChangeAdapter(){
      @Override public void aboutToRun(      IJobChangeEvent event){
        getModel().setUpdateInProgress(true);
        getControl().getDisplay().asyncExec(new Runnable(){
          @Override public void run(){
            enableFilters(false);
          }
        }
);
      }
      @Override public void done(      IJobChangeEvent event){
        ResultSetDataPumpJob job=(ResultSetDataPumpJob)event.getJob();
        final Throwable error=job.getError();
        if (job.getStatistics() != null) {
          model.setStatistics(job.getStatistics());
        }
        getControl().getDisplay().asyncExec(new Runnable(){
          @Override public void run(){
            Control control=getControl();
            if (control == null || control.isDisposed()) {
              return;
            }
            final Shell shell=control.getShell();
            if (error != null) {
              setStatus(error.getMessage(),true);
              UIUtils.showErrorDialog(shell,"Error executing query","Query execution failed",error);
            }
 else             if (focusRow >= 0 && focusRow < model.getRowCount() && model.getVisibleColumnCount() > 0) {
              curRow=model.getRow(focusRow);
              if (recordMode) {
                updateRecordMode();
              }
 else {
                updateStatusMessage();
              }
              GridCell newPos;
              if (!recordMode) {
                newPos=new GridCell(curAttribute,curRow);
              }
 else {
                newPos=new GridCell(curRow,curAttribute);
              }
              spreadsheet.setCursor(newPos,false);
              previewValue();
            }
 else {
              spreadsheet.redraw();
            }
            if (error == null) {
              setNewState(dataContainer,dataFilter);
            }
            getModel().setUpdateInProgress(false);
            if (dataFilter != null) {
              model.updateDataFilter(dataFilter);
            }
            updateFiltersText();
            if (finalizer != null) {
              finalizer.run();
            }
            dataPumpJob=null;
          }
        }
);
      }
    }
);
    dataPumpJob.setOffset(offset);
    dataPumpJob.setMaxRows(maxRows);
    dataPumpJob.schedule();
  }
}
