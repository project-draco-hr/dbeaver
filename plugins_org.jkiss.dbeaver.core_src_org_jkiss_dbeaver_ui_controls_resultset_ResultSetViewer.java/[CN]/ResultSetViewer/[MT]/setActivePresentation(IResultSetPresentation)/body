{
  for (  Control child : presentationPanel.getChildren()) {
    child.dispose();
  }
  activePresentation=presentation;
  activePresentation.createPresentation(this,presentationPanel);
  presentationPanel.layout();
{
    IFindReplaceTarget nested=null;
    if (presentation instanceof IAdaptable) {
      nested=((IAdaptable)presentation).getAdapter(IFindReplaceTarget.class);
    }
    findReplaceTarget.setTarget(nested);
  }
  if (toolBarManager != null) {
    boolean presContributions=false;
    for (    IContributionItem item : toolBarManager.getItems()) {
      if (presContributions) {
        if (IResultSetPresentation.PRES_TOOLS_END.equals(item.getId())) {
          break;
        }
        toolBarManager.remove(item);
      }
 else       if (IResultSetPresentation.PRES_TOOLS_BEGIN.equals(item.getId())) {
        presContributions=true;
      }
    }
    activePresentation.fillToolbar(toolBarManager);
    toolBarManager.update(true);
  }
  Display display=getControl().getDisplay();
  if (UIUtils.isParent(viewerPanel,display.getFocusControl())) {
    display.asyncExec(new Runnable(){
      @Override public void run(){
        activePresentation.getControl().setFocus();
      }
    }
);
  }
}
