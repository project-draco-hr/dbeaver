{
  for (  Control child : presentationPanel.getChildren()) {
    child.dispose();
  }
  for (  CTabItem panelItem : panelFolder.getItems()) {
    panelItem.dispose();
  }
  activePresentation=presentation;
  availablePanels.clear();
  activePanels.clear();
  if (activePresentationDescriptor != null) {
    availablePanels.addAll(ResultSetPresentationRegistry.getInstance().getSupportedPanels(activePresentationDescriptor));
  }
  activePresentation.createPresentation(this,presentationPanel);
{
    boolean panelsVisible=false;
    int[] panelWeights=new int[]{700,300};
    if (activePresentationDescriptor != null) {
      PresentationSettings settings=getPresentationSettings();
      panelsVisible=settings.panelsVisible;
      if (settings.panelRatio > 0) {
        panelWeights=new int[]{1000 - settings.panelRatio,settings.panelRatio};
      }
      if (!CommonUtils.isEmpty(settings.enabledPanelIds)) {
        for (        String panelId : settings.enabledPanelIds) {
          activatePanel(panelId,panelId.equals(settings.activePanelId));
        }
      }
    }
    showPanels(panelsVisible);
    viewerSash.setWeights(panelWeights);
  }
  presentationPanel.layout();
{
    IFindReplaceTarget nested=null;
    if (presentation instanceof IAdaptable) {
      nested=((IAdaptable)presentation).getAdapter(IFindReplaceTarget.class);
    }
    findReplaceTarget.setTarget(nested);
  }
  if (mainToolbar != null) {
    mainToolbar.update(true);
  }
  Display display=getControl().getDisplay();
  if (UIUtils.isParent(viewerPanel,display.getFocusControl())) {
    display.asyncExec(new Runnable(){
      @Override public void run(){
        activePresentation.getControl().setFocus();
      }
    }
);
  }
}
