{
  super();
  this.site=site;
  this.recordMode=false;
  this.container=container;
  this.dataReceiver=new ResultSetDataReceiver(this);
  this.colorRed=Display.getDefault().getSystemColor(SWT.COLOR_RED);
  this.viewerSettings=UIUtils.getDialogSettings(ResultSetViewer.class.getSimpleName());
  loadPresentationSettings();
  this.viewerPanel=UIUtils.createPlaceholder(parent,1);
  UIUtils.setHelp(this.viewerPanel,IHelpContextIds.CTX_RESULT_SET_VIEWER);
  this.filtersPanel=new ResultSetFilterPanel(this);
  this.findReplaceTarget=new DynamicFindReplaceTarget();
  this.viewerSash=UIUtils.createPartDivider(site.getPart(),viewerPanel,SWT.HORIZONTAL | SWT.SMOOTH);
  this.viewerSash.setLayoutData(new GridData(GridData.FILL_BOTH));
  this.presentationPanel=UIUtils.createPlaceholder(this.viewerSash,1);
  this.presentationPanel.setLayoutData(new GridData(GridData.FILL_BOTH));
  this.panelFolder=new CTabFolder(this.viewerSash,SWT.TOP);
  this.panelFolder.marginWidth=0;
  this.panelFolder.marginHeight=0;
  this.panelFolder.setMinimizeVisible(true);
  this.panelFolder.setLayoutData(new GridData(GridData.FILL_BOTH));
  this.panelToolBar=new ToolBarManager(SWT.HORIZONTAL | SWT.RIGHT | SWT.FLAT);
  ToolBar panelToolbarControl=this.panelToolBar.createControl(panelFolder);
  this.panelFolder.setTopRight(panelToolbarControl);
  this.panelFolder.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      CTabItem activeTab=panelFolder.getSelection();
      if (activeTab != null) {
        setActivePanel((String)activeTab.getData());
      }
    }
  }
);
  this.panelFolder.addListener(SWT.Resize,new Listener(){
    @Override public void handleEvent(    Event event){
      if (!viewerSash.isDisposed()) {
        int[] weights=viewerSash.getWeights();
        getPresentationSettings().panelRatio=weights[1];
      }
    }
  }
);
  this.panelFolder.addCTabFolder2Listener(new CTabFolder2Adapter(){
    @Override public void close(    CTabFolderEvent event){
      CTabItem item=(CTabItem)event.item;
      String panelId=(String)item.getData();
      removePanel(panelId);
    }
    @Override public void minimize(    CTabFolderEvent event){
      showPanels(false);
    }
    @Override public void maximize(    CTabFolderEvent event){
    }
  }
);
  setActivePresentation(new EmptyPresentation());
  createStatusBar();
  this.viewerPanel.addDisposeListener(new DisposeListener(){
    @Override public void widgetDisposed(    DisposeEvent e){
      dispose();
    }
  }
);
  changeMode(false);
}
