{
  byte bom[]=new byte[BOM_SIZE];
  String encoding;
  int unread;
  PushbackInputStream pushbackStream=new PushbackInputStream(in,BOM_SIZE);
  int n=pushbackStream.read(bom,0,bom.length);
  if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {
    encoding="UTF-8";
    unread=n - 3;
  }
 else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {
    encoding="UTF-16BE";
    unread=n - 2;
  }
 else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {
    encoding="UTF-16LE";
    unread=n - 2;
  }
 else   if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {
    encoding="UTF-32BE";
    unread=n - 4;
  }
 else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {
    encoding="UTF-32LE";
    unread=n - 4;
  }
 else {
    encoding=defaultEncoding;
    unread=n;
  }
  if (unread > 0) {
    pushbackStream.unread(bom,(n - unread),unread);
  }
 else   if (unread < -1) {
    pushbackStream.unread(bom,0,0);
  }
  if (encoding == null) {
    reader=new InputStreamReader(pushbackStream);
  }
 else {
    reader=new InputStreamReader(pushbackStream,encoding);
  }
}
