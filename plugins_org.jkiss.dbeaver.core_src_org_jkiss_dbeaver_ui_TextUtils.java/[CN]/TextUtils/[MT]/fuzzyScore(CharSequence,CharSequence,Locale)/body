{
  if (term == null || query == null) {
    throw new IllegalArgumentException("Strings must not be null");
  }
  final String termLowerCase=term.toString().toLowerCase(locale);
  final String queryLowerCase=query.toString().toLowerCase(locale);
  int score=0;
  int termIndex=0;
  int previousMatchingCharacterIndex=Integer.MIN_VALUE;
  for (int queryIndex=0; queryIndex < queryLowerCase.length(); queryIndex++) {
    final char queryChar=queryLowerCase.charAt(queryIndex);
    boolean termCharacterMatchFound=false;
    for (; termIndex < termLowerCase.length(); termIndex++) {
      final char termChar=termLowerCase.charAt(termIndex);
      if (queryChar == termChar) {
        score++;
        if (termIndex == 0 || !Character.isLetter(termLowerCase.charAt(termIndex - 1))) {
          score++;
        }
        if (previousMatchingCharacterIndex + 1 == termIndex) {
          score+=4;
        }
        previousMatchingCharacterIndex=termIndex;
        termIndex++;
        termCharacterMatchFound=true;
        break;
      }
    }
    if (!termCharacterMatchFound) {
      return 0;
    }
  }
  return score;
}
