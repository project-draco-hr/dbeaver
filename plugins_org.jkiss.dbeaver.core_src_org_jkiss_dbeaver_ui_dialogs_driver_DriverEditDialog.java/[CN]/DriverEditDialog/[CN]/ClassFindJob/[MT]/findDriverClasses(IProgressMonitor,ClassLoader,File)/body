{
  try {
    JarFile currentFile=new JarFile(libFile,false);
    monitor.beginTask(libFile.getName(),currentFile.size());
    for (Enumeration<?> e=currentFile.entries(); e.hasMoreElements(); ) {
{
        if (monitor.isCanceled()) {
          break;
        }
        JarEntry current=(JarEntry)e.nextElement();
        String fileName=current.getName();
        if (fileName.endsWith(".class") && fileName.indexOf("$") == -1) {
          String className=fileName.replaceAll("/",".").replace(".class","");
          monitor.subTask(className);
          try {
            Class<?> aClass=Class.forName(className,false,findCL);
            final int modifiers=aClass.getModifiers();
            if (java.sql.Driver.class.isAssignableFrom(aClass) && !Modifier.isAbstract(modifiers) && !Modifier.isStatic(modifiers)&& Modifier.isPublic(modifiers)) {
              driverClassNames.add(aClass.getName());
            }
          }
 catch (          Throwable e1) {
          }
          monitor.worked(1);
        }
      }
    }
    monitor.done();
  }
 catch (  IOException e) {
    log.debug(e);
  }
}
