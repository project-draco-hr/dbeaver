{
  if (driver == null) {
    getShell().setText(CoreMessages.dialog_edit_driver_title_create_driver);
    driver=provider.createDriver();
  }
 else {
    getShell().setText(CoreMessages.dialog_edit_driver_title_edit_driver + driver.getName() + "'");
    getShell().setImage(DBeaverIcons.getImage(driver.getPlainIcon()));
  }
  boolean isReadOnly=!provider.isDriversManagable();
  int advStyle=isReadOnly ? SWT.READ_ONLY : SWT.NONE;
  Composite group=(Composite)super.createDialogArea(parent);
  GridData gd=new GridData(GridData.FILL_BOTH);
  gd.widthHint=500;
  group.setLayoutData(gd);
{
    Composite propsGroup=new Composite(group,SWT.NONE);
    propsGroup.setLayout(new GridLayout(2,false));
    propsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    UIUtils.createControlLabel(propsGroup,CoreMessages.dialog_edit_driver_label_driver_name);
    final Composite namePlaceholder=UIUtils.createPlaceholder(propsGroup,3,5);
    namePlaceholder.setLayoutData(new GridData(GridData.FILL_BOTH));
    driverNameText=new Text(namePlaceholder,SWT.BORDER | advStyle);
    driverNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    driverNameText.addModifyListener(new ModifyListener(){
      @Override public void modifyText(      ModifyEvent e){
        onChangeProperty();
      }
    }
);
    driverCategoryCombo=UIUtils.createLabelCombo(namePlaceholder,CoreMessages.dialog_edit_driver_label_category,SWT.BORDER | SWT.DROP_DOWN | advStyle);
    driverDescText=UIUtils.createLabelText(propsGroup,CoreMessages.dialog_edit_driver_label_description,CommonUtils.notEmpty(driver.getDescription()),SWT.BORDER | advStyle);
    driverClassText=UIUtils.createLabelText(propsGroup,CoreMessages.dialog_edit_driver_label_class_name,CommonUtils.notEmpty(driver.getDriverClassName()),SWT.BORDER | advStyle);
    driverClassText.addModifyListener(new ModifyListener(){
      @Override public void modifyText(      ModifyEvent e){
        onChangeProperty();
      }
    }
);
    driverURLText=UIUtils.createLabelText(propsGroup,CoreMessages.dialog_edit_driver_label_sample_url,CommonUtils.notEmpty(driver.getSampleURL()),SWT.BORDER | advStyle);
    driverURLText.addModifyListener(new ModifyListener(){
      @Override public void modifyText(      ModifyEvent e){
        onChangeProperty();
      }
    }
);
    boolean hasSite=!CommonUtils.isEmpty(driver.getWebURL());
    UIUtils.createControlLabel(propsGroup,CoreMessages.dialog_edit_driver_label_default_port);
    Composite ph=hasSite ? UIUtils.createPlaceholder(propsGroup,3) : propsGroup;
    ph.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    driverPortText=new Text(ph,SWT.BORDER | advStyle);
    driverPortText.setText(driver.getDefaultPort() == null ? "" : driver.getDefaultPort());
    driverPortText.setLayoutData(new GridData(SWT.NONE));
    driverPortText.addModifyListener(new ModifyListener(){
      @Override public void modifyText(      ModifyEvent e){
        onChangeProperty();
      }
    }
);
    if (hasSite) {
      GridLayout gl=(GridLayout)ph.getLayout();
      gl.horizontalSpacing=5;
      UIUtils.createControlLabel(ph,CoreMessages.dialog_edit_driver_label_website);
      Link urlLabel=new Link(ph,SWT.NONE);
      urlLabel.setText("<a>" + driver.getWebURL() + "</a>");
      urlLabel.addSelectionListener(new SelectionAdapter(){
        @Override public void widgetSelected(        SelectionEvent e){
          RuntimeUtils.launchProgram(driver.getWebURL());
        }
      }
);
      urlLabel.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    }
    embeddedDriverCheck=UIUtils.createLabelCheckbox(propsGroup,"Embedded","Embedded driver",driver.isEmbedded());
  }
{
    TabFolder tabFolder=new TabFolder(group,SWT.NONE);
    tabFolder.setLayoutData(new GridData(GridData.FILL_BOTH));
    if (provider.isDriversManagable()) {
      createLibrariesTab(tabFolder);
    }
    createConnectionPropertiesTab(tabFolder);
    createParametersTab(tabFolder);
    if (driver.getClientManager() != null) {
      createClientHomesTab(tabFolder);
    }
    final String license=driver.getLicense();
    if (license != null) {
      createLicenseTab(tabFolder,license);
    }
    tabFolder.setSelection(0);
  }
  resetSettings(false);
  return group;
}
