{
  cache.references=new ArrayList<>();
  try {
    DBSObjectContainer container=null;
    if (!CommonUtils.isEmpty(containerName)) {
      DBSObjectContainer dsContainer=DBUtils.getAdapter(DBSObjectContainer.class,getExecutionContext().getDataSource());
      if (dsContainer != null) {
        DBSObject childContainer=dsContainer.getChild(monitor,containerName);
        if (childContainer instanceof DBSObjectContainer) {
          container=(DBSObjectContainer)childContainer;
        }
 else {
          DBSObjectSelector dsSelector=DBUtils.getAdapter(DBSObjectSelector.class,getExecutionContext().getDataSource());
          if (dsSelector != null) {
            DBSObject curCatalog=dsSelector.getSelectedObject();
            if (curCatalog instanceof DBSObjectContainer) {
              childContainer=((DBSObjectContainer)curCatalog).getChild(monitor,containerName);
            }
          }
          if (childContainer == null) {
            return Status.CANCEL_STATUS;
          }
 else           if (childContainer instanceof DBSObjectContainer) {
            container=(DBSObjectContainer)childContainer;
          }
        }
      }
    }
    DBSObjectType[] objectTypes=structureAssistant.getHyperlinkObjectTypes();
    Collection<DBSObjectReference> objects=structureAssistant.findObjectsByMask(monitor,container,objectTypes,word,caseSensitive,10);
    if (!CommonUtils.isEmpty(objects)) {
      cache.references.addAll(objects);
    }
  }
 catch (  DBException e) {
    log.warn(e);
  }
 finally {
    cache.loading=false;
  }
  return Status.OK_STATUS;
}
