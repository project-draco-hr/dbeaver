{
  final String sourceEncoding=configuration.getSourceEncoding();
  File tmpFile=null;
  try {
    if (CommonUtils.isEmpty(command)) {
      throw new IOException("No command specified for external formatter");
    }
    if (useFile) {
      tmpFile=File.createTempFile("dbeaver-sql-format","sql");
      try (final OutputStream os=new FileOutputStream(tmpFile)){
        try (final Writer out=new OutputStreamWriter(os,sourceEncoding)){
          IOUtils.copyText(new StringReader(source),out);
        }
       }
       command=command.replace("${file}",tmpFile.getAbsolutePath());
    }
    List<String> commandList=ArgumentTokenizer.tokenize(command,false);
    ProcessBuilder pb=new ProcessBuilder(commandList);
    pb.redirectErrorStream(true);
    process=pb.start();
    try {
      if (tmpFile == null) {
        try (final OutputStream stdout=process.getOutputStream()){
          stdout.write(source.getBytes(sourceEncoding));
        }
       }
      int rc=process.waitFor();
      StringWriter buf=new StringWriter();
      try (Reader input=new InputStreamReader(process.getInputStream(),sourceEncoding)){
        IOUtils.copyText(input,buf);
        if (rc != 0) {
          log.debug("Formatter result code: " + rc);
        }
      }
       result=buf.toString();
    }
  finally {
      process.destroy();
    }
  }
 catch (  Exception e) {
    result=source;
    finished=true;
    return GeneralUtils.makeExceptionStatus(e);
  }
 finally {
    if (tmpFile != null && tmpFile.exists()) {
      if (!tmpFile.delete()) {
        log.debug("Can't delete temp file '" + tmpFile.getAbsolutePath() + "'");
      }
    }
  }
  finished=true;
  return Status.OK_STATUS;
}
