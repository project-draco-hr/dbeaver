{
  IDocument document=viewer.getDocument();
  try {
    fContext.setReadOnly(false);
    int start;
    TemplateBuffer templateBuffer;
{
      int oldReplaceOffset=getReplaceOffset();
      try {
        templateBuffer=fContext.evaluate(fTemplate);
      }
 catch (      TemplateException e1) {
        fSelectedRegion=fRegion;
        return;
      }
      start=getReplaceOffset();
      int shift=start - oldReplaceOffset;
      int end=Math.max(getReplaceEndOffset(),offset + shift);
      String templateString=templateBuffer.getString();
      document.replace(start,end - start,templateString);
    }
    LinkedModeModel model=new LinkedModeModel();
    TemplateVariable[] variables=templateBuffer.getVariables();
    boolean hasPositions=false;
    for (int i=0; i != variables.length; i++) {
      SQLVariable variable=(SQLVariable)variables[i];
      if (variable.isUnambiguous())       continue;
      LinkedPositionGroup group=new LinkedPositionGroup();
      int[] offsets=variable.getOffsets();
      int length=variable.getLength();
      LinkedPosition first;
{
        String[] values=variable.getValues();
        for (int j=0; j < values.length; j++) {
          ensurePositionCategoryInstalled(document,model);
          Position pos=new Position(offsets[0] + start,length);
          document.addPosition(getCategory(),pos);
        }
        if (values.length > 1) {
          first=new SQLProposalPosition(document,offsets[0] + start,length,variable);
        }
 else {
          first=new LinkedPosition(document,offsets[0] + start,length);
        }
      }
      for (int j=0; j != offsets.length; j++) {
        if (j == 0)         group.addPosition(first);
 else         group.addPosition(new LinkedPosition(document,offsets[j] + start,length));
      }
      model.addGroup(group);
      hasPositions=true;
    }
    if (hasPositions) {
      model.forceInstall();
      LinkedModeUI ui=new LinkedModeUI(model,viewer);
      ui.setExitPosition(viewer,getCaretOffset(templateBuffer) + start,0,Integer.MAX_VALUE);
      ui.enter();
      fSelectedRegion=ui.getSelectedRegion();
    }
 else {
      ensurePositionCategoryRemoved(document);
      fSelectedRegion=new Region(getCaretOffset(templateBuffer) + start,0);
    }
  }
 catch (  BadLocationException e) {
    log.error(e);
    ensurePositionCategoryRemoved(document);
    fSelectedRegion=fRegion;
  }
catch (  BadPositionCategoryException e) {
    log.error(e);
    fSelectedRegion=fRegion;
  }
}
