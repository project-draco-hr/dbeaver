{
  final DBRProgressMonitor monitor=session.getProgressMonitor();
  final DBPDataSource dataSource=session.getDataSource();
  boolean readMetaData=dataSource.getContainer().getPreferenceStore().getBoolean(DBeaverPreferences.RESULT_SET_READ_METADATA);
  if (!readMetaData) {
    return;
  }
  boolean readReferences=dataSource.getContainer().getPreferenceStore().getBoolean(DBeaverPreferences.RESULT_SET_READ_REFERENCES);
  final Map<DBCEntityMetaData,DBSEntity> entityBindingMap=new IdentityHashMap<>();
  monitor.beginTask("Discover resultset metadata",3);
  try {
    SQLQuery sqlQuery=null;
    DBSEntity entity=null;
    DBCStatement sourceStatement=resultSet.getSourceStatement();
    if (sourceStatement != null && sourceStatement.getStatementSource() != null) {
      DBCExecutionSource executionSource=sourceStatement.getStatementSource();
      monitor.subTask("Discover owner entity");
      DBSDataContainer dataContainer=executionSource.getDataContainer();
      if (dataContainer instanceof DBSEntity) {
        entity=(DBSEntity)dataContainer;
      }
      DBCEntityMetaData entityMeta=null;
      if (entity == null) {
        Object sourceDescriptor=executionSource.getSourceDescriptor();
        if (sourceDescriptor instanceof SQLQuery) {
          sqlQuery=(SQLQuery)sourceDescriptor;
          entityMeta=sqlQuery.getSingleSource();
        }
        if (entityMeta != null) {
          entity=getEntityFromMetaData(monitor,dataSource,entityMeta);
          if (entity != null) {
            entityBindingMap.put(entityMeta,entity);
          }
        }
      }
    }
    final Map<DBSEntity,DBDRowIdentifier> locatorMap=new IdentityHashMap<>();
    monitor.subTask("Discover attributes");
    for (    DBDAttributeBindingMeta binding : bindings) {
      monitor.subTask("Discover attribute '" + binding.getName() + "'");
      DBCAttributeMetaData attrMeta=binding.getMetaAttribute();
      DBSEntity attrEntity=null;
      final DBCEntityMetaData attrEntityMeta=attrMeta.getEntityMetaData();
      if (attrEntityMeta != null) {
        attrEntity=entityBindingMap.get(attrEntityMeta);
        if (attrEntity == null) {
          if (entity != null && entity instanceof DBSTable && ((DBSTable)entity).isView()) {
            attrEntity=entity;
          }
 else {
            attrEntity=getEntityFromMetaData(monitor,dataSource,attrEntityMeta);
          }
        }
        if (attrEntity != null) {
          entityBindingMap.put(attrEntityMeta,attrEntity);
        }
      }
      if (attrEntity == null) {
        attrEntity=entity;
      }
      if (attrEntity != null) {
        DBSEntityAttribute tableColumn;
        if (attrMeta.getPseudoAttribute() != null) {
          tableColumn=attrMeta.getPseudoAttribute().createFakeAttribute(attrEntity,attrMeta);
        }
 else {
          tableColumn=attrEntity.getAttribute(monitor,attrMeta.getName());
        }
        if (sqlQuery != null) {
          if (tableColumn != null && tableColumn.getTypeID() != attrMeta.getTypeID()) {
            continue;
          }
        }
        if (tableColumn != null && binding.setEntityAttribute(tableColumn)) {
          try {
            int pos=attrMeta.getOrdinalPosition();
            for (            Object[] row : rows) {
              row[pos]=binding.getValueHandler().getValueFromObject(session,tableColumn,row[pos],false);
            }
          }
 catch (          DBCException e) {
            log.warn("Error resolving attribute '" + binding.getName() + "' values",e);
          }
        }
      }
    }
    monitor.worked(1);
    monitor.subTask("Detect unique identifiers");
    for (    DBDAttributeBindingMeta binding : bindings) {
      DBSEntityAttribute attr=binding.getEntityAttribute();
      if (attr == null) {
        continue;
      }
      DBSEntity attrEntity=attr.getParentObject();
      if (attrEntity != null) {
        DBDRowIdentifier rowIdentifier=locatorMap.get(attrEntity);
        if (rowIdentifier == null) {
          DBSEntityReferrer entityIdentifier=getBestIdentifier(monitor,attrEntity,bindings);
          if (entityIdentifier != null) {
            rowIdentifier=new DBDRowIdentifier(attrEntity,entityIdentifier);
            locatorMap.put(attrEntity,rowIdentifier);
          }
        }
        binding.setRowIdentifier(rowIdentifier);
      }
    }
    monitor.worked(1);
    if (readReferences) {
      monitor.subTask("Late bindings");
      for (      DBDAttributeBinding binding : bindings) {
        binding.lateBinding(session,rows);
      }
    }
    monitor.subTask("Complete metadata load");
    for (    DBDRowIdentifier rowIdentifier : locatorMap.values()) {
      rowIdentifier.reloadAttributes(monitor,bindings);
    }
  }
 catch (  Throwable e) {
    log.error("Can't extract column identifier info",e);
  }
 finally {
    monitor.done();
  }
}
