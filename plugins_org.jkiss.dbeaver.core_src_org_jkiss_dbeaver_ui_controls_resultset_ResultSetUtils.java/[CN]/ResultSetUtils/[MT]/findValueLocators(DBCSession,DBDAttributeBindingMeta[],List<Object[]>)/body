{
  DBRProgressMonitor monitor=session.getProgressMonitor();
  monitor.beginTask("Discover resultset metadata",3);
  Map<DBSEntity,DBDRowIdentifier> locatorMap=new HashMap<DBSEntity,DBDRowIdentifier>();
  try {
    monitor.subTask("Discover attributes");
    for (    DBDAttributeBindingMeta binding : bindings) {
      monitor.subTask("Discover attribute '" + binding.getName() + "'");
      DBCAttributeMetaData attrMeta=binding.getMetaAttribute();
      DBCEntityMetaData entityMeta=attrMeta.getEntityMetaData();
      Object metaSource=attrMeta.getSource();
      if (entityMeta == null && metaSource instanceof SQLQuery) {
        entityMeta=((SQLQuery)metaSource).getSingleSource();
      }
      DBSEntity entity=null;
      if (metaSource instanceof DBSEntity) {
        entity=(DBSEntity)metaSource;
      }
 else       if (entityMeta != null) {
        DBPDataSource dataSource=session.getDataSource();
        final DBSObjectContainer objectContainer=DBUtils.getAdapter(DBSObjectContainer.class,dataSource);
        if (objectContainer != null) {
          String catalogName=DBObjectNameCaseTransformer.transformName(dataSource,entityMeta.getCatalogName());
          String schemaName=DBObjectNameCaseTransformer.transformName(dataSource,entityMeta.getSchemaName());
          String entityName=DBObjectNameCaseTransformer.transformName(dataSource,entityMeta.getEntityName());
          Class<? extends DBSObject> scChildType=objectContainer.getChildType(monitor);
          DBSObject entityObject;
          if (!CommonUtils.isEmpty(catalogName) && scChildType != null && (DBSSchema.class.isAssignableFrom(scChildType) || DBSTable.class.isAssignableFrom(scChildType))) {
            entityObject=DBUtils.getObjectByPath(monitor,objectContainer,null,schemaName,entityName);
          }
 else {
            entityObject=DBUtils.getObjectByPath(monitor,objectContainer,catalogName,schemaName,entityName);
          }
          if (entityObject == null) {
            log.debug("Table '" + DBUtils.getSimpleQualifiedName(catalogName,schemaName,entityName) + "' not found in metadata catalog");
          }
 else           if (entityObject instanceof DBSEntity) {
            entity=(DBSEntity)entityObject;
          }
 else {
            log.debug("Unsupported table class: " + entityObject.getClass().getName());
          }
        }
      }
      if (entity != null) {
        DBSEntityAttribute tableColumn;
        if (attrMeta.getPseudoAttribute() != null) {
          tableColumn=attrMeta.getPseudoAttribute().createFakeAttribute(entity,attrMeta);
        }
 else {
          tableColumn=entity.getAttribute(monitor,attrMeta.getName());
        }
        binding.setEntityAttribute(tableColumn);
      }
    }
    monitor.worked(1);
    monitor.subTask("Early bindings");
    for (    DBDAttributeBindingMeta binding : bindings) {
      monitor.subTask("Bind attribute '" + binding.getName() + "'");
      DBSEntityAttribute attr=binding.getEntityAttribute();
      if (attr == null) {
        continue;
      }
      DBSEntity entity=attr.getParentObject();
      DBDRowIdentifier rowIdentifier=locatorMap.get(entity);
      if (rowIdentifier == null) {
        DBSEntityReferrer entityIdentifier=getBestIdentifier(monitor,entity,bindings);
        if (entityIdentifier != null) {
          rowIdentifier=new DBDRowIdentifier(entity,entityIdentifier);
          locatorMap.put(entity,rowIdentifier);
        }
      }
      binding.setRowIdentifier(rowIdentifier);
    }
    monitor.worked(1);
    monitor.subTask("Late bindings");
    for (    DBDAttributeBinding binding : bindings) {
      monitor.subTask("Late bind attribute '" + binding.getName() + "'");
      binding.lateBinding(session,rows);
    }
    for (    DBDRowIdentifier rowIdentifier : locatorMap.values()) {
      rowIdentifier.reloadAttributes(monitor,bindings);
    }
  }
 catch (  DBException e) {
    log.error("Can't extract column identifier info",e);
  }
 finally {
    monitor.done();
  }
}
