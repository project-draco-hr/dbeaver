{
  Method[] methods=theClass.getMethods();
  for (  Method method : methods) {
    final PropertyGroup propGroupInfo=method.getAnnotation(PropertyGroup.class);
    if (propGroupInfo != null && method.getReturnType() != null) {
      ObjectPropertyGroupDescriptor groupDescriptor=new ObjectPropertyGroupDescriptor(source,parent,method,propGroupInfo,filter);
      annoProps.addAll(groupDescriptor.getChildren());
    }
 else {
      final Property propInfo=method.getAnnotation(Property.class);
      if (propInfo == null || !BeanUtils.isGetterName(method.getName()) || method.getReturnType() == null) {
        continue;
      }
      ObjectPropertyDescriptor desc=new ObjectPropertyDescriptor(source,parent,propInfo,method);
      if (filter != null && !filter.select(desc)) {
        continue;
      }
      annoProps.add(desc);
    }
  }
  Collections.sort(annoProps,ATTRIBUTE_DESCRIPTOR_COMPARATOR);
}
