{
  menu.add(makeAction("SELECT ",new TableAnalysisRunner(table){
    @Override public void generateSQL(    DBRProgressMonitor monitor,    StringBuilder sql) throws DBException {
      sql.append("SELECT ");
      boolean hasAttr=false;
      for (      DBSEntityAttribute attr : getAllAttributes(monitor)) {
        if (hasAttr)         sql.append(", ");
        sql.append(DBUtils.getObjectFullName(attr));
        hasAttr=true;
      }
      sql.append("\nFROM ").append(DBUtils.getObjectFullName(entity));
      sql.append(";\n");
    }
  }
));
  menu.add(makeAction("INSERT ",new TableAnalysisRunner(table){
    @Override public void generateSQL(    DBRProgressMonitor monitor,    StringBuilder sql) throws DBException {
      sql.append("INSERT INTO ").append(DBUtils.getObjectFullName(entity)).append("\n(");
      boolean hasAttr=false;
      for (      DBSEntityAttribute attr : getAllAttributes(monitor)) {
        if (hasAttr)         sql.append(", ");
        sql.append(DBUtils.getObjectFullName(attr));
        hasAttr=true;
      }
      sql.append(")\nVALUES(");
      hasAttr=false;
      for (      DBSEntityAttribute attr : getAllAttributes(monitor)) {
        if (hasAttr)         sql.append(", ");
        appendDefaultValue(sql,attr);
        hasAttr=true;
      }
      sql.append(");\n");
    }
  }
));
  menu.add(makeAction("UPDATE ",new TableAnalysisRunner(table){
    @Override public void generateSQL(    DBRProgressMonitor monitor,    StringBuilder sql) throws DBException {
      Collection<? extends DBSEntityAttribute> keyAttributes=getKeyAttributes(monitor);
      sql.append("UPDATE ").append(DBUtils.getObjectFullName(entity)).append("\nSET ");
      boolean hasAttr=false;
      for (      DBSEntityAttribute attr : getValueAttributes(monitor,keyAttributes)) {
        if (hasAttr)         sql.append(", ");
        sql.append(DBUtils.getObjectFullName(attr)).append("=");
        appendDefaultValue(sql,attr);
        hasAttr=true;
      }
      if (!CommonUtils.isEmpty(keyAttributes)) {
        sql.append("\nWHERE ");
        hasAttr=false;
        for (        DBSEntityAttribute attr : keyAttributes) {
          if (hasAttr)           sql.append(" AND ");
          sql.append(DBUtils.getObjectFullName(attr)).append("=");
          appendDefaultValue(sql,attr);
          hasAttr=true;
        }
      }
      sql.append(";\n");
    }
  }
));
  menu.add(makeAction("DELETE ",new TableAnalysisRunner(table){
    @Override public void generateSQL(    DBRProgressMonitor monitor,    StringBuilder sql) throws DBException {
      sql.append("DELETE FROM  ").append(DBUtils.getObjectFullName(entity)).append("\nWHERE ");
      Collection<? extends DBSEntityAttribute> keyAttributes=getKeyAttributes(monitor);
      if (CommonUtils.isEmpty(keyAttributes)) {
        keyAttributes=getAllAttributes(monitor);
      }
      boolean hasAttr=false;
      for (      DBSEntityAttribute attr : keyAttributes) {
        if (hasAttr)         sql.append(" AND ");
        sql.append(DBUtils.getObjectFullName(attr)).append("=");
        appendDefaultValue(sql,attr);
        hasAttr=true;
      }
      sql.append(";\n");
    }
  }
));
  menu.add(makeAction("MERGE",new TableAnalysisRunner(table){
    @Override public void generateSQL(    DBRProgressMonitor monitor,    StringBuilder sql) throws DBException {
      boolean hasAttr=false;
      sql.append("MERGE INTO ").append(DBUtils.getObjectFullName(entity)).append(" AS tgt\n");
      sql.append("USING SOURCE_TABLE AS src\n");
      Collection<? extends DBSEntityAttribute> keyAttributes=getKeyAttributes(monitor);
      if (!CommonUtils.isEmpty(keyAttributes)) {
        sql.append("ON (");
        for (        DBSEntityAttribute attr : keyAttributes) {
          if (hasAttr)           sql.append(" AND ");
          sql.append("tgt.").append(DBUtils.getQuotedIdentifier(attr)).append("=src.").append(DBUtils.getQuotedIdentifier(attr));
          hasAttr=true;
        }
        sql.append(")\n");
      }
      sql.append("WHEN MATCHED\nTHEN UPDATE SET\n");
      hasAttr=false;
      for (      DBSEntityAttribute attr : getValueAttributes(monitor,keyAttributes)) {
        if (hasAttr)         sql.append(", ");
        sql.append("tgt.").append(DBUtils.getQuotedIdentifier(attr)).append("=src.").append(DBUtils.getQuotedIdentifier(attr));
        hasAttr=true;
      }
      sql.append("\nWHEN NOT MATCHED\nTHEN INSERT (");
      hasAttr=false;
      for (      DBSEntityAttribute attr : getAllAttributes(monitor)) {
        if (hasAttr)         sql.append(", ");
        sql.append(DBUtils.getQuotedIdentifier(attr));
        hasAttr=true;
      }
      sql.append(")\nVALUES (");
      hasAttr=false;
      for (      DBSEntityAttribute attr : getAllAttributes(monitor)) {
        if (hasAttr)         sql.append(", ");
        sql.append("src.").append(DBUtils.getQuotedIdentifier(attr));
        hasAttr=true;
      }
      sql.append(");\n");
    }
  }
));
}
