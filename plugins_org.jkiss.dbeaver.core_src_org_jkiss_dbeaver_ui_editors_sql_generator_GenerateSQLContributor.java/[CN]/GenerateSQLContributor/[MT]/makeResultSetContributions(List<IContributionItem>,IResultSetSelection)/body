{
  final IResultSetController rsv=rss.getController();
  DBSDataContainer dataContainer=rsv.getDataContainer();
  final List<DBDAttributeBinding> visibleAttributes=rsv.getModel().getVisibleAttributes();
  final DBSEntity entity=rsv.getModel().getSingleSource();
  if (dataContainer != null && !visibleAttributes.isEmpty() && entity != null) {
    final Collection<ResultSetRow> selectedRows=rss.getSelectedRows();
    if (!CommonUtils.isEmpty(selectedRows)) {
      menu.add(makeAction("SELECT by Unique Key",new ResultSetAnalysisRunner(dataContainer.getDataSource(),rsv.getModel()){
        @Override public void generateSQL(        DBRProgressMonitor monitor,        StringBuilder sql) throws DBException {
          for (          ResultSetRow firstRow : selectedRows) {
            Collection<? extends DBSEntityAttribute> keyAttributes=getKeyAttributes(monitor);
            sql.append("SELECT ");
            boolean hasAttr=false;
            for (            DBSAttributeBase attr : getValueAttributes(monitor,keyAttributes)) {
              if (hasAttr)               sql.append(", ");
              sql.append(DBUtils.getObjectFullName(attr));
              hasAttr=true;
            }
            sql.append("\nFROM ").append(DBUtils.getObjectFullName(entity));
            sql.append("\nWHERE ");
            hasAttr=false;
            for (            DBSEntityAttribute attr : keyAttributes) {
              if (hasAttr)               sql.append(" AND ");
              DBDAttributeBinding binding=rsv.getModel().getAttributeBinding(attr);
              sql.append(DBUtils.getObjectFullName(attr)).append("=");
              if (binding == null) {
                appendDefaultValue(sql,attr);
              }
 else {
                appendAttributeValue(rsv,sql,binding,firstRow);
              }
              hasAttr=true;
            }
            sql.append(";\n");
          }
        }
      }
));
      menu.add(makeAction("INSERT",new ResultSetAnalysisRunner(dataContainer.getDataSource(),rsv.getModel()){
        @Override public void generateSQL(        DBRProgressMonitor monitor,        StringBuilder sql) throws DBException {
          for (          ResultSetRow firstRow : selectedRows) {
            Collection<? extends DBSAttributeBase> allAttributes=getAllAttributes(monitor);
            sql.append("INSERT INTO ").append(DBUtils.getObjectFullName(entity));
            sql.append("\n(");
            boolean hasAttr=false;
            for (            DBSAttributeBase attr : allAttributes) {
              if (attr.isPseudoAttribute() || DBUtils.isHiddenObject(attr)) {
                continue;
              }
              if (hasAttr)               sql.append(", ");
              sql.append(DBUtils.getObjectFullName(attr));
              hasAttr=true;
            }
            sql.append(")\nVALUES(");
            hasAttr=false;
            for (            DBSAttributeBase attr : allAttributes) {
              if (attr.isPseudoAttribute() || DBUtils.isHiddenObject(attr)) {
                continue;
              }
              if (hasAttr)               sql.append(", ");
              DBDAttributeBinding binding=rsv.getModel().getAttributeBinding(attr);
              if (binding == null) {
                appendDefaultValue(sql,attr);
              }
 else {
                appendAttributeValue(rsv,sql,binding,firstRow);
              }
              hasAttr=true;
            }
            sql.append(");\n");
          }
        }
      }
));
      menu.add(makeAction("DELETE by Unique Key",new ResultSetAnalysisRunner(dataContainer.getDataSource(),rsv.getModel()){
        @Override public void generateSQL(        DBRProgressMonitor monitor,        StringBuilder sql) throws DBException {
          for (          ResultSetRow firstRow : selectedRows) {
            Collection<? extends DBSEntityAttribute> keyAttributes=getKeyAttributes(monitor);
            sql.append("DELETE FROM ").append(DBUtils.getObjectFullName(entity));
            sql.append("\nWHERE ");
            boolean hasAttr=false;
            for (            DBSEntityAttribute attr : keyAttributes) {
              if (hasAttr)               sql.append(" AND ");
              DBDAttributeBinding binding=rsv.getModel().getAttributeBinding(attr);
              sql.append(DBUtils.getObjectFullName(attr)).append("=");
              if (binding == null) {
                appendDefaultValue(sql,attr);
              }
 else {
                appendAttributeValue(rsv,sql,binding,firstRow);
              }
              hasAttr=true;
            }
            sql.append(";\n");
          }
        }
      }
));
    }
  }
}
