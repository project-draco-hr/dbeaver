{
  return new TableAnalysisRunner(entities){
    @Override public void generateSQL(    DBRProgressMonitor monitor,    StringBuilder sql,    DBSEntity object) throws DBException {
      boolean hasAttr=false;
      sql.append("MERGE INTO ").append(DBUtils.getObjectFullName(object,DBPEvaluationContext.DML)).append(" AS tgt\n");
      sql.append("USING SOURCE_TABLE AS src\n");
      Collection<? extends DBSEntityAttribute> keyAttributes=getKeyAttributes(monitor,object);
      if (!CommonUtils.isEmpty(keyAttributes)) {
        sql.append("ON (");
        for (        DBSEntityAttribute attr : keyAttributes) {
          if (hasAttr)           sql.append(" AND ");
          sql.append("tgt.").append(DBUtils.getQuotedIdentifier(attr)).append("=src.").append(DBUtils.getQuotedIdentifier(attr));
          hasAttr=true;
        }
        sql.append(")\n");
      }
      sql.append("WHEN MATCHED\nTHEN UPDATE SET\n");
      hasAttr=false;
      for (      DBSAttributeBase attr : getValueAttributes(monitor,object,keyAttributes)) {
        if (hasAttr)         sql.append(", ");
        sql.append("tgt.").append(DBUtils.getQuotedIdentifier(object.getDataSource(),attr.getName())).append("=src.").append(DBUtils.getQuotedIdentifier(object.getDataSource(),attr.getName()));
        hasAttr=true;
      }
      sql.append("\nWHEN NOT MATCHED\nTHEN INSERT (");
      hasAttr=false;
      for (      DBSEntityAttribute attr : getAllAttributes(monitor,object)) {
        if (hasAttr)         sql.append(", ");
        sql.append(DBUtils.getQuotedIdentifier(attr));
        hasAttr=true;
      }
      sql.append(")\nVALUES (");
      hasAttr=false;
      for (      DBSEntityAttribute attr : getAllAttributes(monitor,object)) {
        if (hasAttr)         sql.append(", ");
        sql.append("src.").append(DBUtils.getQuotedIdentifier(attr));
        hasAttr=true;
      }
      sql.append(");\n");
    }
  }
;
}
