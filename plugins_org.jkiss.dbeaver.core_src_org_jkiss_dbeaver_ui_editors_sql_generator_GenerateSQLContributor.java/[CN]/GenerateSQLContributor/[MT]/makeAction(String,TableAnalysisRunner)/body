{
  return new ActionContributionItem(new Action(text,DBeaverIcons.getImageDescriptor(UIIcon.SQL_TEXT)){
    @Override public void run(){
      DBeaverUI.runInUI(DBeaverUI.getActiveWorkbenchWindow(),runnable);
      String sql=runnable.getResult();
      IEditorPart activeEditor=DBeaverUI.getActiveWorkbenchWindow().getActivePage().getActiveEditor();
      boolean showDialog=true;
      if (activeEditor instanceof AbstractTextEditor) {
        AbstractTextEditor textEditor=(AbstractTextEditor)activeEditor;
        ITextSelection selection=(ITextSelection)textEditor.getSelectionProvider().getSelection();
        IDocumentProvider provider=textEditor.getDocumentProvider();
        IDocument doc=provider.getDocument(activeEditor.getEditorInput());
        try {
          sql=GeneralUtils.getDefaultLineSeparator() + sql;
          doc.replace(selection.getOffset(),selection.getLength(),sql);
          textEditor.getSelectionProvider().setSelection(new TextSelection(doc,selection.getOffset() + sql.length(),0));
        }
 catch (        BadLocationException e) {
          log.warn(e);
        }
        activeEditor.setFocus();
        showDialog=false;
      }
      if (showDialog) {
        DBPDataSource dataSource=runnable.getEntity().getDataSource();
        if (dataSource != null) {
          ViewSQLDialog dialog=new ViewSQLDialog(DBeaverUI.getActiveWorkbenchWindow().getActivePage().getActivePart().getSite(),dataSource.getDefaultContext(false),"Generated SQL",null,sql);
          dialog.open();
        }
      }
 else {
        UIUtils.setClipboardContents(DBeaverUI.getActiveWorkbenchShell().getDisplay(),TextTransfer.getInstance(),sql);
      }
    }
  }
);
}
