{
  DBPCommentsManager commentsSupport=textEditor.getCommentsSupport();
  if (commentsSupport == null) {
    return;
  }
  Pair<String,String> comment=commentsSupport.getMultiLineComments();
  if (comment == null) {
    return;
  }
  int selOffset=selection.getOffset();
  int selLength=selection.getLength();
  DocumentRewriteSession rewriteSession=null;
  if (document instanceof IDocumentExtension4) {
    rewriteSession=((IDocumentExtension4)document).startRewriteSession(DocumentRewriteSessionType.SEQUENTIAL);
  }
  String lineDelimiter=TextUtilities.getDefaultLineDelimiter(document);
  String selText=selection.getText();
  boolean isMultiLine=selection.getStartLine() != selection.getEndLine() || selText.contains(lineDelimiter);
  String testText=selText.trim();
  if (testText.startsWith(comment.getFirst()) && testText.endsWith(comment.getSecond())) {
    int startPos=selText.indexOf(comment.getFirst()) + comment.getFirst().length();
    while (lineDelimiter.indexOf(selText.charAt(startPos)) != -1) {
      startPos++;
    }
    int endPos=selText.lastIndexOf(comment.getSecond());
    while (lineDelimiter.indexOf(selText.charAt(endPos)) != -1) {
      endPos--;
    }
    String newSel=selText.substring(startPos,endPos);
    document.replace(selection.getOffset(),selection.getLength(),newSel);
    selLength-=(selText.length() - newSel.length());
  }
 else {
    if (isMultiLine) {
      int endOffset=selOffset + selLength;
      boolean firstAtBegin=document.getLineOffset(selection.getStartLine()) == selOffset;
      boolean secondAtBegin=document.getLineOffset(document.getLineOfOffset(endOffset)) == endOffset;
      boolean useLineFeeds=firstAtBegin && secondAtBegin;
      document.replace(selection.getOffset() + selection.getLength(),0,comment.getSecond() + (useLineFeeds ? lineDelimiter : ""));
      document.replace(selection.getOffset(),0,comment.getFirst() + (useLineFeeds ? lineDelimiter : ""));
      selLength+=comment.getFirst().length() + comment.getSecond().length() + (useLineFeeds ? lineDelimiter.length() * 2 : 0);
    }
 else {
      document.replace(selection.getOffset(),selection.getLength(),comment.getFirst() + selText + comment.getSecond());
      selLength+=comment.getFirst().length() + comment.getSecond().length();
    }
  }
  if (rewriteSession != null) {
    ((IDocumentExtension4)document).stopRewriteSession(rewriteSession);
  }
  if (selLength > 0) {
    textEditor.getSelectionProvider().setSelection(new TextSelection(selOffset,selLength));
  }
}
