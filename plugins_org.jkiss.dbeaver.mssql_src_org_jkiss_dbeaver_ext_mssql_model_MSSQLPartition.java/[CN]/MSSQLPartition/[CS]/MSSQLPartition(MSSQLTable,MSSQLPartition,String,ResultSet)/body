{
  super(mySQLTable,name,true);
  this.parent=parent;
  if (parent != null) {
    parent.addSubPartitions(this);
  }
  this.position=JDBCUtils.safeGetInt(dbResult,parent == null ? MSSQLConstants.COL_PARTITION_ORDINAL_POSITION : MSSQLConstants.COL_SUBPARTITION_ORDINAL_POSITION);
  this.method=JDBCUtils.safeGetString(dbResult,parent == null ? MSSQLConstants.COL_PARTITION_METHOD : MSSQLConstants.COL_SUBPARTITION_METHOD);
  this.expression=JDBCUtils.safeGetString(dbResult,parent == null ? MSSQLConstants.COL_PARTITION_EXPRESSION : MSSQLConstants.COL_SUBPARTITION_EXPRESSION);
  this.description=JDBCUtils.safeGetString(dbResult,MSSQLConstants.COL_PARTITION_DESCRIPTION);
  this.tableRows=JDBCUtils.safeGetLong(dbResult,MSSQLConstants.COL_TABLE_ROWS);
  this.avgRowLength=JDBCUtils.safeGetLong(dbResult,MSSQLConstants.COL_AVG_ROW_LENGTH);
  this.dataLength=JDBCUtils.safeGetLong(dbResult,MSSQLConstants.COL_DATA_LENGTH);
  this.maxDataLength=JDBCUtils.safeGetLong(dbResult,MSSQLConstants.COL_MAX_DATA_LENGTH);
  this.indexLength=JDBCUtils.safeGetLong(dbResult,MSSQLConstants.COL_INDEX_LENGTH);
  this.dataFree=JDBCUtils.safeGetLong(dbResult,MSSQLConstants.COL_DATA_FREE);
  this.createTime=JDBCUtils.safeGetTimestamp(dbResult,MSSQLConstants.COL_CREATE_TIME);
  this.updateTime=JDBCUtils.safeGetTimestamp(dbResult,MSSQLConstants.COL_UPDATE_TIME);
  this.checkTime=JDBCUtils.safeGetTimestamp(dbResult,MSSQLConstants.COL_CHECK_TIME);
  this.checksum=JDBCUtils.safeGetLong(dbResult,MSSQLConstants.COL_CHECKSUM);
  this.comment=JDBCUtils.safeGetString(dbResult,MSSQLConstants.COL_PARTITION_COMMENT);
  this.nodegroup=JDBCUtils.safeGetString(dbResult,MSSQLConstants.COL_NODEGROUP);
}
