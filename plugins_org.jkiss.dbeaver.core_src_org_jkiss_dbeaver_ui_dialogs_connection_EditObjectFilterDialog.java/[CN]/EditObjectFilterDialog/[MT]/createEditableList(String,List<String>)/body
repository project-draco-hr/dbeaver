{
  Group group=UIUtils.createControlGroup(blockControl,name,2,GridData.FILL_BOTH,0);
  final Table valueTable=new Table(group,SWT.SINGLE | SWT.FULL_SELECTION | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL);
  final GridData gd=new GridData(GridData.FILL_BOTH);
  gd.widthHint=300;
  gd.heightHint=100;
  valueTable.setLayoutData(gd);
  valueTable.setLinesVisible(true);
  final TableColumn valueColumn=UIUtils.createTableColumn(valueTable,SWT.LEFT,CoreMessages.dialog_filter_table_column_value);
  valueColumn.setWidth(300);
  if (!CommonUtils.isEmpty(values)) {
    for (    String value : values) {
      new TableItem(valueTable,SWT.LEFT).setText(value);
    }
  }
  final CustomTableEditor tableEditor=new CustomTableEditor(valueTable){
    @Override protected Control createEditor(    Table table,    int index,    TableItem item){
      Text editor=new Text(table,SWT.BORDER);
      editor.setText(item.getText());
      return editor;
    }
    @Override protected void saveEditorValue(    Control control,    int index,    TableItem item){
      item.setText(((Text)control).getText());
    }
  }
;
  Composite buttonsGroup=UIUtils.createPlaceholder(group,1,5);
  buttonsGroup.setLayoutData(new GridData(GridData.VERTICAL_ALIGN_BEGINNING));
  final Button addButton=new Button(buttonsGroup,SWT.PUSH);
  addButton.setText(CoreMessages.dialog_filter_button_add);
  addButton.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  addButton.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      TableItem newItem=new TableItem(valueTable,SWT.LEFT);
      valueTable.setSelection(newItem);
      tableEditor.closeEditor();
      tableEditor.showEditor(newItem);
    }
  }
);
  final Button removeButton=new Button(buttonsGroup,SWT.PUSH);
  removeButton.setText(CoreMessages.dialog_filter_button_remove);
  removeButton.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  removeButton.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      int selectionIndex=valueTable.getSelectionIndex();
      if (selectionIndex >= 0) {
        tableEditor.closeEditor();
        valueTable.remove(selectionIndex);
        removeButton.setEnabled(valueTable.getSelectionIndex() >= 0);
      }
    }
  }
);
  removeButton.setEnabled(false);
  valueTable.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      int selectionIndex=valueTable.getSelectionIndex();
      removeButton.setEnabled(selectionIndex >= 0);
    }
  }
);
  return valueTable;
}
