{
  super(tableBase,true);
  DB2DataSource db2DataSource=(DB2DataSource)tableBase.getDataSource();
  setName(JDBCUtils.safeGetString(dbResult,"COLNAME"));
  setOrdinalPosition(JDBCUtils.safeGetInt(dbResult,"COLNO"));
  setRequired(JDBCUtils.safeGetBoolean(dbResult,"NULLS",DB2YesNo.N.name()));
  setDefaultValue(JDBCUtils.safeGetString(dbResult,"DEFAULT"));
  setMaxLength(JDBCUtils.safeGetInteger(dbResult,"LENGTH"));
  setScale(JDBCUtils.safeGetInteger(dbResult,"SCALE"));
  this.hidden=DB2ColumnHiddenState.isHidden(JDBCUtils.safeGetString(dbResult,"HIDDEN"));
  this.identity=JDBCUtils.safeGetBoolean(dbResult,"IDENTITY",DB2YesNo.Y.name());
  this.lobCompact=JDBCUtils.safeGetBoolean(dbResult,"COMPACT",DB2YesNo.Y.name());
  this.generated=CommonUtils.valueOf(DB2TableColumnGenerated.class,JDBCUtils.safeGetString(dbResult,"GENERATED"));
  this.generatedText=JDBCUtils.safeGetString(dbResult,"TEXT");
  this.compress=CommonUtils.valueOf(DB2TableColumnCompression.class,JDBCUtils.safeGetString(dbResult,"COMPRESS"));
  this.colcard=JDBCUtils.safeGetLong(dbResult,"COLCARD");
  this.high2key=JDBCUtils.safeGetString(dbResult,"HIGH2KEY");
  this.low2key=JDBCUtils.safeGetString(dbResult,"LOW2KEY");
  this.avgLength=JDBCUtils.safeGetInteger(dbResult,"AVGCOLLEN");
  this.nbNulls=JDBCUtils.safeGetLong(dbResult,"NUMNULLS");
  this.keySeq=JDBCUtils.safeGetInteger(dbResult,"KEYSEQ");
  this.partKeySeq=JDBCUtils.safeGetInteger(dbResult,"PARTKEYSEQ");
  this.remarks=JDBCUtils.safeGetString(dbResult,"REMARKS");
  if (db2DataSource.isAtLeastV9_5()) {
    this.collationSchema=JDBCUtils.safeGetStringTrimmed(dbResult,"COLLATIONSCHEMA");
    this.collationNane=JDBCUtils.safeGetString(dbResult,"COLLATIONNAME");
  }
  if (db2DataSource.isAtLeastV10_1()) {
    this.rowBegin=JDBCUtils.safeGetBoolean(dbResult,"ROWBEGIN",DB2YesNo.Y.name());
    this.rowEnd=JDBCUtils.safeGetBoolean(dbResult,"ROWEND",DB2YesNo.Y.name());
  }
  String typeName=JDBCUtils.safeGetString(dbResult,"TYPENAME");
  this.dataType=tableBase.getDataSource().getDataTypeCache().getObject(monitor,getTable().getDataSource(),typeName);
  if (this.dataType == null) {
    String typeSchemaName=JDBCUtils.safeGetStringTrimmed(dbResult,"TYPESCHEMA");
    this.dataTypeSchema=getDataSource().getSchema(monitor,typeSchemaName);
    this.dataType=this.dataTypeSchema.getUDT(monitor,typeName);
  }
 else {
    this.dataTypeSchema=dataType.getSchema();
  }
  setTypeName(dataType.getFullQualifiedName());
  setValueType(dataType.getTypeID());
}
