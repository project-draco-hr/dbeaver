{
  super(tableBase,true);
  setName(JDBCUtils.safeGetString(dbResult,"COLNAME"));
  setOrdinalPosition(JDBCUtils.safeGetInt(dbResult,"COLNO"));
  setRequired(JDBCUtils.safeGetBoolean(dbResult,"NULLS",DB2YesNo.N.name()));
  setDefaultValue(JDBCUtils.safeGetString(dbResult,"DEFAULT"));
  setMaxLength(JDBCUtils.safeGetInteger(dbResult,"LENGTH"));
  setScale(JDBCUtils.safeGetInteger(dbResult,"SCALE"));
  this.hidden=DB2ColumnHiddenState.isHidden(JDBCUtils.safeGetString(dbResult,"HIDDEN"));
  this.remarks=JDBCUtils.safeGetString(dbResult,"REMARKS");
  String typeName=JDBCUtils.safeGetString(dbResult,"TYPENAME");
  this.dataType=tableBase.getDataSource().getDataTypeCache().getObject(monitor,getTable().getDataSource(),typeName);
  if (this.dataType == null) {
    String typeSchemaName=JDBCUtils.safeGetStringTrimmed(dbResult,"TYPESCHEMA");
    this.dataTypeSchema=getDataSource().getSchema(monitor,typeSchemaName);
    this.dataType=this.dataTypeSchema.getUDT(monitor,typeName);
  }
 else {
    this.dataTypeSchema=dataType.getSchema();
  }
  setTypeName(dataType.getFullQualifiedName());
  setValueType(dataType.getTypeID());
}
