{
  final List<QMMetaEvent> events=obtainEvents();
  final List<QMMetaListener> listeners=getListeners();
  if (!listeners.isEmpty() && !events.isEmpty()) {
    for (    QMMetaListener listener : listeners) {
      try {
        listener.metaInfoChanged(events);
      }
 catch (      Throwable e) {
        log.error("Error notifying event listener",e);
      }
    }
  }
synchronized (historySync) {
    pastEvents.addAll(events);
    int size=pastEvents.size();
    if (size > MAX_HISTORY_EVENTS) {
      pastEvents=new ArrayList<>(pastEvents.subList(size - MAX_HISTORY_EVENTS,size));
    }
  }
  if (isRunning()) {
    this.schedule(EVENT_DISPATCH_PERIOD);
  }
  return Status.OK_STATUS;
}
