{
  super(userOrGroup,JDBCUtils.safeGetStringTrimmed(resultSet,"OBJ_SCHEMA") + "." + JDBCUtils.safeGetString(resultSet,"OBJ_NAME"),true);
  DB2DataSource db2DataSource=userOrGroup.getDataSource();
  String grantorName=JDBCUtils.safeGetString(resultSet,"GRANTOR");
  this.grantorType=CommonUtils.valueOf(DB2GrantorGranteeType.class,JDBCUtils.safeGetString(resultSet,"GRANTORTYPE"));
switch (grantorType) {
case U:
    this.grantor=userOrGroup.getDataSource().getUser(monitor,grantorName);
  break;
case G:
this.grantor=userOrGroup.getDataSource().getGroup(monitor,grantorName);
break;
default :
break;
}
String objectSchemaName=JDBCUtils.safeGetStringTrimmed(resultSet,"OBJ_SCHEMA");
this.objectSchema=db2DataSource.getSchema(monitor,objectSchemaName);
String objectName=JDBCUtils.safeGetString(resultSet,"OBJ_NAME");
this.objectType=CommonUtils.valueOf(DB2ObjectType.class,JDBCUtils.safeGetString(resultSet,"OBJ_TYPE"));
switch (objectType) {
case TABLE:
this.object=DB2Utils.findTableBySchemaNameAndName(monitor,db2DataSource,objectSchemaName,objectName);
if (this.object == null) {
this.objectType=DB2ObjectType.VIEW;
this.object=DB2Utils.findViewBySchemaNameAndName(monitor,db2DataSource,objectSchemaName,objectName);
}
this.control=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"CONTROLAUTH"));
this.alter=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"ALTERAUTH"));
this.delete=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"DELETEAUTH"));
this.index=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"INDEXAUTH"));
this.insert=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"INSERTAUTH"));
this.reference=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"REFAUTH"));
this.select=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"SELECTAUTH"));
this.update=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"UPDATEAUTH"));
break;
case INDEX:
this.object=DB2Utils.findIndexBySchemaNameAndName(monitor,db2DataSource,objectSchemaName,objectName);
this.control=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"CONTROLAUTH"));
break;
case SEQUENCE:
this.object=DB2Utils.findSequenceBySchemaNameAndName(monitor,db2DataSource,objectSchemaName,objectName);
this.alter=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"ALTERAUTH"));
this.usage=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"USAGEAUTH"));
break;
case TABLESPACE:
this.object=db2DataSource.getTablespace(monitor,objectName);
this.usage=CommonUtils.valueOf(DB2AuthHeldType.class,JDBCUtils.safeGetString(resultSet,"USAGEAUTH"));
break;
default :
break;
}
}
