{
  int nodeCount=nodes.size();
  List<List<DBNDatabaseNode>> allChildren=new ArrayList<List<DBNDatabaseNode>>(nodeCount);
  for (int i=0; i < nodeCount; i++) {
    DBNDatabaseNode node=nodes.get(i);
    allChildren.add(CommonUtils.safeList(node.getChildren(monitor)));
  }
  Set<String> allChildNames=new LinkedHashSet<String>();
  for (  List<DBNDatabaseNode> childList : allChildren) {
    for (    DBNDatabaseNode child : childList) {
      DBXTreeNode meta=child.getMeta();
      if (meta.isVirtual()) {
        continue;
      }
      allChildNames.add(child.getNodeName());
    }
  }
  for (  String childName : allChildNames) {
    int[] childIndexes=new int[nodeCount];
    for (int i=0; i < nodeCount; i++) {
      childIndexes[i]=-1;
      List<DBNDatabaseNode> childList=allChildren.get(i);
      for (int k=0; k < childList.size(); k++) {
        DBNDatabaseNode child=childList.get(k);
        if (child.getNodeName().equals(childName)) {
          childIndexes[i]=k;
          break;
        }
      }
    }
    List<DBNDatabaseNode> nodesToCompare=new ArrayList<DBNDatabaseNode>(nodeCount);
    for (int i=0; i < nodeCount; i++) {
      if (childIndexes[i] == -1) {
      }
 else {
        for (int k=0; k < nodeCount; k++) {
          if (k != i && childIndexes[k] != childIndexes[i]) {
            break;
          }
        }
        nodesToCompare.add(allChildren.get(i).get(childIndexes[i]));
      }
    }
    compareNodes(monitor,nodesToCompare);
  }
}
