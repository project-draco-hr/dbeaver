{
  getShell().setText("Map columns of " + mapping.getTargetName());
  Composite composite=new Composite(parent,SWT.NONE);
  composite.setLayout(new GridLayout(1,false));
  composite.setLayoutData(new GridData(GridData.FILL_BOTH));
  new Label(composite,SWT.NONE).setText("Source entity: " + DBUtils.getObjectFullName(mapping.getSource()));
  new Label(composite,SWT.NONE).setText("Target entity: " + mapping.getTargetName());
  mappingViewer=new TableViewer(composite,SWT.BORDER | SWT.SINGLE | SWT.FULL_SELECTION);
  GridData gd=new GridData(GridData.FILL_BOTH);
  gd.widthHint=400;
  gd.heightHint=300;
  mappingViewer.getTable().setLayoutData(gd);
  mappingViewer.getTable().setLinesVisible(true);
  mappingViewer.getTable().setHeaderVisible(true);
  mappingViewer.setContentProvider(new ListContentProvider());
  TableViewerColumn columnSource=new TableViewerColumn(mappingViewer,SWT.LEFT);
  columnSource.setLabelProvider(new MappingLabelProvider(){
    @Override public void update(    ViewerCell cell){
      DatabaseMappingAttribute mapping=(DatabaseMappingAttribute)cell.getElement();
      cell.setText(DBUtils.getObjectFullName(mapping.source));
      super.update(cell);
    }
  }
);
  columnSource.getColumn().setText("Source");
  columnSource.getColumn().setWidth(170);
  TableViewerColumn columnTarget=new TableViewerColumn(mappingViewer,SWT.LEFT);
  columnTarget.setLabelProvider(new MappingLabelProvider(){
    @Override public void update(    ViewerCell cell){
      DatabaseMappingAttribute mapping=(DatabaseMappingAttribute)cell.getElement();
      cell.setText(mapping.getTargetName());
      if (mapping.mappingType == DatabaseMappingType.unspecified) {
        cell.setBackground(DBeaverUI.getSharedTextColors().getColor(SharedTextColors.COLOR_BACK_DELETED));
      }
 else {
        cell.setBackground(null);
      }
      super.update(cell);
    }
  }
);
  columnTarget.getColumn().setText("Target");
  columnTarget.getColumn().setWidth(170);
  TableViewerColumn columnType=new TableViewerColumn(mappingViewer,SWT.LEFT);
  columnType.setLabelProvider(new MappingLabelProvider(){
    @Override public void update(    ViewerCell cell){
      DatabaseMappingAttribute mapping=(DatabaseMappingAttribute)cell.getElement();
      String text="";
switch (mapping.getMappingType()) {
case unspecified:
        text="?";
      break;
case existing:
    text="column";
  break;
case create:
text="new";
break;
case skip:
text="skip";
break;
}
cell.setText(text);
super.update(cell);
}
}
);
columnType.getColumn().setText("Type");
columnType.getColumn().setWidth(60);
mappingViewer.setInput(attributeMappings);
return parent;
}
