{
  if (progressOverlay == null) {
    cancelButton=new Button(progressControl,SWT.PUSH);
    cancelButton.setText("Cancel");
    GridData gd=new GridData(GridData.FILL_BOTH);
    gd.verticalIndent=DBeaverIcons.getImage(UIIcon.PROGRESS0).getBounds().height * 2;
    cancelButton.setLayoutData(gd);
    cancelButton.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        cancelButton.setText("Canceled");
        cancelButton.setEnabled(false);
        Point buttonSize=cancelButton.computeSize(SWT.DEFAULT,SWT.DEFAULT);
        progressOverlay.minimumWidth=buttonSize.x;
        progressOverlay.minimumHeight=buttonSize.y;
        progressOverlay.layout();
        ResultSetDataPumpJob.this.cancel();
        if (forceCancelTimeout > 0) {
          new ForceCancelJob().schedule(forceCancelTimeout);
        }
      }
    }
);
    painListener=new PaintListener(){
      @Override public void paintControl(      PaintEvent e){
        Image image=DBeaverIcons.getImage(PROGRESS_IMAGES[drawCount % PROGRESS_IMAGES.length]);
        Rectangle buttonBounds=cancelButton.getBounds();
        Rectangle imageBounds=image.getBounds();
        e.gc.drawImage(image,(buttonBounds.x + buttonBounds.width / 2) - imageBounds.width / 2,buttonBounds.y - imageBounds.height - 5);
        long elapsedTime=System.currentTimeMillis() - pumpStartTime;
        String elapsedString=elapsedTime > 10000 ? String.valueOf(elapsedTime / 1000) : String.valueOf(((double)(elapsedTime / 100)) / 10);
        String statusMessage=CommonUtils.truncateString(progressMessage.replaceAll("\\s"," "),64);
        String status=statusMessage + " - " + elapsedString+ "s";
        Point statusSize=e.gc.textExtent(status);
        int statusX=(buttonBounds.x + buttonBounds.width / 2) - statusSize.x / 2;
        int statusY=buttonBounds.y - imageBounds.height - 10- statusSize.y;
        e.gc.setForeground(controller.getDefaultForeground());
        e.gc.setBackground(controller.getDefaultBackground());
        e.gc.fillRectangle(statusX - 2,statusY - 2,statusSize.x + 4,statusSize.y + 4);
        e.gc.drawText(status,statusX,statusY,true);
        e.gc.setForeground(shadowColor);
        e.gc.drawRoundRectangle(statusX - 3,statusY - 3,statusSize.x + 5,statusSize.y + 5,5,5);
      }
    }
;
    progressControl.addPaintListener(painListener);
    progressOverlay=new ControlEditor(progressControl);
    Point buttonSize=cancelButton.computeSize(SWT.DEFAULT,SWT.DEFAULT);
    progressOverlay.minimumWidth=buttonSize.x;
    progressOverlay.minimumHeight=buttonSize.y;
    progressOverlay.setEditor(cancelButton);
  }
  drawCount++;
  progressOverlay.layout();
  progressControl.redraw();
  schedule(PROGRESS_VISUALIZE_PERIOD);
}
