{
  error=null;
  pumpStartTime=System.currentTimeMillis();
  DBRProgressMonitor proxyMonitor=new ProxyProgressMonitor(monitor){
    @Override public void beginTask(    String name,    int totalWork){
      super.beginTask(name,totalWork);
    }
    @Override public void subTask(    String name){
      progressMessage=name;
      super.subTask(name);
    }
  }
;
  DBCSession session=getDataSource().openSession(proxyMonitor,DBCExecutionPurpose.USER,NLS.bind(CoreMessages.controls_rs_pump_job_context_name,resultSetViewer.getDataContainer().getName()));
  PumpVisualizer visualizer=new PumpVisualizer();
  try {
    visualizer.schedule(PROGRESS_VISUALIZE_PERIOD * 2);
    statistics=resultSetViewer.getDataContainer().readData(session,resultSetViewer.getDataReceiver(),resultSetViewer.getModel().getDataFilter(),offset,maxRows,DBSDataContainer.FLAG_READ_PSEUDO);
  }
 catch (  DBException e) {
    error=e;
  }
 finally {
    session.close();
    visualizer.finished=true;
  }
  return Status.OK_STATUS;
}
