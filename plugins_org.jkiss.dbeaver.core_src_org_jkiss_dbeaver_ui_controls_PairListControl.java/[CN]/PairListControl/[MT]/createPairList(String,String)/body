{
  this.setLayout(new GridLayout(3,false));
  GridData gd=new GridData(GridData.FILL_BOTH);
  this.setLayoutData(gd);
  Label leftLabel=new Label(this,SWT.NONE);
  leftLabel.setText(leftTitle);
  new Label(this,SWT.NONE);
  Label rightLabel=new Label(this,SWT.NONE);
  rightLabel.setText(rightTitle);
  leftList=createList(this);
{
    Composite buttonsPane=new Composite(this,SWT.NONE);
    gd=new GridData(GridData.VERTICAL_ALIGN_CENTER);
    gd.minimumWidth=50;
    buttonsPane.setLayoutData(gd);
    GridLayout gl=new GridLayout(1,false);
    buttonsPane.setLayout(gl);
    final Button btnMoveRight=createButton(buttonsPane,DBeaverIcons.getImage(UIIcon.ARROW_RIGHT),new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        moveElements(true);
      }
    }
);
    final Button btnMoveRightAll=createButton(buttonsPane,DBeaverIcons.getImage(UIIcon.ARROW_RIGHT_ALL),new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        leftList.selectAll();
        moveElements(true);
      }
    }
);
    final Button btnMoveLeft=createButton(buttonsPane,DBeaverIcons.getImage(UIIcon.ARROW_LEFT),new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        moveElements(false);
      }
    }
);
    final Button btnMoveLeftAll=createButton(buttonsPane,DBeaverIcons.getImage(UIIcon.ARROW_LEFT_ALL),new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        rightList.selectAll();
        moveElements(false);
      }
    }
);
    createButton(buttonsPane,DBeaverIcons.getImage(UIIcon.ARROW_RESET),new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        setListData(leftList,leftElements);
        setListData(rightList,rightElements);
      }
    }
);
    selListener=new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        btnMoveLeft.setEnabled(rightList.getSelectionCount() > 0);
        btnMoveLeftAll.setEnabled(rightList.getItemCount() > 0);
        btnMoveRight.setEnabled(leftList.getSelectionCount() > 0);
        btnMoveRightAll.setEnabled(leftList.getItemCount() > 0);
      }
    }
;
    btnMoveLeft.setEnabled(false);
    btnMoveLeftAll.setEnabled(false);
    btnMoveRight.setEnabled(false);
    btnMoveRightAll.setEnabled(false);
  }
  rightList=createList(this);
  leftList.addSelectionListener(selListener);
  rightList.addSelectionListener(selListener);
  leftList.addMouseListener(new MouseAdapter(){
    @Override public void mouseDoubleClick(    MouseEvent e){
      moveElements(true);
    }
  }
);
  rightList.addMouseListener(new MouseAdapter(){
    @Override public void mouseDoubleClick(    MouseEvent e){
      moveElements(false);
    }
  }
);
}
