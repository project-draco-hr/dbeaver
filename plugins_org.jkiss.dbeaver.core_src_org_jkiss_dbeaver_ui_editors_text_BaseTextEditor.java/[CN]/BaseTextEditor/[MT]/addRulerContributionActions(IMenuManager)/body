{
  final IColumnSupport support=(IColumnSupport)getAdapter(IColumnSupport.class);
  IPreferenceStore store=getPreferenceStore();
  final RulerColumnPreferenceAdapter adapter=new RulerColumnPreferenceAdapter(store,AbstractTextEditor.PREFERENCE_RULER_CONTRIBUTIONS);
  List descriptors=RulerColumnRegistry.getDefault().getColumnDescriptors();
  for (Iterator t=descriptors.iterator(); t.hasNext(); ) {
    final RulerColumnDescriptor descriptor=(RulerColumnDescriptor)t.next();
    if (!descriptor.isIncludedInMenu() || !support.isColumnSupported(descriptor))     continue;
    final boolean isVisible=support.isColumnVisible(descriptor);
    IAction action=new Action("Show " + descriptor.getName(),IAction.AS_CHECK_BOX){
      @Override public void run(){
        if (descriptor.isGlobal())         adapter.setEnabled(descriptor,!isVisible);
 else         support.setColumnVisible(descriptor,!isVisible);
      }
    }
;
    action.setChecked(isVisible);
    action.setImageDescriptor(descriptor.getIcon());
    menu.appendToGroup(ITextEditorActionConstants.GROUP_RULERS,action);
  }
}
