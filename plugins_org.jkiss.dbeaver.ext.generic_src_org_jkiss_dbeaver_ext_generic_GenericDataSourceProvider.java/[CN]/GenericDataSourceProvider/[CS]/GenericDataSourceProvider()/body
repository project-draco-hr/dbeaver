{
  metaModels.put(GenericConstants.META_MODEL_STANDARD,new GenericMetaModel(GenericConstants.META_MODEL_STANDARD));
  IExtensionRegistry extensionRegistry=Platform.getExtensionRegistry();
  IConfigurationElement[] extElements=extensionRegistry.getConfigurationElementsFor(EXTENSION_ID);
  for (  IConfigurationElement ext : extElements) {
    String metaClass=ext.getAttribute("class");
    GenericMetaModel metaModel;
    if (!CommonUtils.isEmpty(metaClass)) {
      try {
        Class<? extends GenericMetaModel> metaClassImpl=AbstractDescriptor.getObjectClass(Platform.getBundle(ext.getContributor().getName()),metaClass,GenericMetaModel.class);
        if (metaClassImpl != null) {
          metaModel=metaClassImpl.getConstructor(IConfigurationElement.class).newInstance(ext);
        }
 else {
          log.warn("Generic meta model implementation '" + metaClass + "' not found");
          continue;
        }
      }
 catch (      Exception e) {
        log.error(e);
        continue;
      }
    }
 else {
      metaModel=new GenericMetaModel(ext);
    }
    metaModels.put(metaModel.getId(),metaModel);
    for (    String driverClass : metaModel.getDriverClass()) {
      metaModels.put(driverClass,metaModel);
    }
  }
}
