{
  super.contributeToToolBar(manager);
  textContributor.contributeToToolBar(manager);
  manager.add(saveAction);
  manager.add(loadAction);
  manager.add(new Separator());
  manager.add(infoAction);
  manager.add(new Separator());
  manager.add(applyAction);
  manager.add(closeAction);
  manager.add(new Separator());
  manager.add(new ControlContribution("Encoding"){
    @Override protected Control createControl(    Composite parent){
      String curCharset=null;
      if (getEditor() != null) {
        curCharset=getEditor().getEditorInput().getFileCharset();
      }
      encodingCombo=UIUtils.createEncodingCombo(parent,curCharset);
      encodingCombo.setToolTipText("Content Encoding");
      encodingCombo.addSelectionListener(new SelectionAdapter(){
        @Override public void widgetSelected(        SelectionEvent e){
          final ContentEditor contentEditor=getEditor();
          if (contentEditor != null) {
            final ContentEditorInput contentEditorInput=contentEditor.getEditorInput();
            Combo combo=(Combo)e.widget;
            final String charset=combo.getItem(combo.getSelectionIndex());
            contentEditorInput.setFileCharset(charset);
          }
        }
      }
);
      return encodingCombo;
    }
    @Override public void dispose(){
      encodingCombo=null;
      super.dispose();
    }
  }
);
}
