{
  curConstraint=null;
  fkColumns.clear();
  ownColumns=null;
  columnsTable.removeAll();
  if (curConstraints.isEmpty() || uniqueKeyCombo.getSelectionIndex() < 0) {
    return;
  }
  curConstraint=curConstraints.get(uniqueKeyCombo.getSelectionIndex());
  try {
    for (    DBSEntityAttributeRef pkColumn : curConstraint.getAttributeReferences(VoidProgressMonitor.INSTANCE)) {
      FKColumnInfo fkColumnInfo=new FKColumnInfo(pkColumn.getAttribute());
      Collection<? extends DBSEntityAttribute> tmpColumns=ownTable.getAttributes(VoidProgressMonitor.INSTANCE);
      ownColumns=tmpColumns == null ? Collections.<DBSTableColumn>emptyList() : new ArrayList<DBSEntityAttribute>(ownTable.getAttributes(VoidProgressMonitor.INSTANCE));
      if (!CommonUtils.isEmpty(ownColumns)) {
        for (        DBSEntityAttribute ownColumn : ownColumns) {
          if (ownColumn.getName().equals(pkColumn.getAttribute().getName()) && ownTable != pkColumn.getAttribute().getParentObject()) {
            fkColumnInfo.ownColumn=ownColumn;
            break;
          }
        }
      }
      fkColumns.add(fkColumnInfo);
      TableItem item=new TableItem(columnsTable,SWT.NONE);
      if (fkColumnInfo.ownColumn != null) {
        item.setText(0,fkColumnInfo.ownColumn.getName());
        item.setImage(0,getColumnIcon(fkColumnInfo.ownColumn));
        item.setText(1,fkColumnInfo.ownColumn.getTypeName());
      }
      item.setText(2,pkColumn.getAttribute().getName());
      item.setImage(2,getColumnIcon(pkColumn.getAttribute()));
      item.setText(3,pkColumn.getAttribute().getTypeName());
      item.setData(fkColumnInfo);
    }
  }
 catch (  DBException e) {
    UIUtils.showErrorDialog(getShell(),CoreMessages.dialog_struct_edit_fk_error_load_constraint_columns_title,CoreMessages.dialog_struct_edit_fk_error_load_constraint_columns_message,e);
  }
  UIUtils.packColumns(columnsTable,true);
}
