{
  initializeDialogUnits(parent);
  Composite composite=new Composite(parent,SWT.NULL);
  GridLayout gl=new GridLayout();
  gl.marginHeight=0;
  gl.marginWidth=0;
  composite.setLayout(gl);
  composite.setLayoutData(new GridData(GridData.FILL_BOTH));
  final StreamConsumerSettings settings=getWizard().getPageSettings(this,StreamConsumerSettings.class);
{
    Group generalSettings=UIUtils.createControlGroup(composite,CoreMessages.data_transfer_wizard_output_group_general,5,GridData.FILL_HORIZONTAL,0);
    clipboardCheck=UIUtils.createLabelCheckbox(generalSettings,"Copy to clipboard",false);
    clipboardCheck.setLayoutData(new GridData(GridData.BEGINNING,GridData.BEGINNING,false,false,4,1));
    clipboardCheck.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        settings.setOutputClipboard(clipboardCheck.getSelection());
        toggleClipboardOutput();
        updatePageCompletion();
      }
    }
);
    directoryText=UIUtils.createOutputFolderChooser(generalSettings,null,new ModifyListener(){
      @Override public void modifyText(      ModifyEvent e){
        settings.setOutputFolder(directoryText.getText());
        updatePageCompletion();
      }
    }
);
    ((GridData)directoryText.getParent().getLayoutData()).horizontalSpan=4;
    UIUtils.createControlLabel(generalSettings,CoreMessages.data_transfer_wizard_output_label_file_name_pattern);
    fileNameText=new Text(generalSettings,SWT.BORDER);
    GridData gd=new GridData(GridData.FILL_HORIZONTAL);
    gd.horizontalSpan=4;
    fileNameText.setLayoutData(gd);
    fileNameText.addModifyListener(new ModifyListener(){
      @Override public void modifyText(      ModifyEvent e){
        settings.setOutputFilePattern(fileNameText.getText());
        updatePageCompletion();
      }
    }
);
{
      UIUtils.createControlLabel(generalSettings,CoreMessages.data_transfer_wizard_output_label_encoding);
      encodingCombo=UIUtils.createEncodingCombo(generalSettings,settings.getOutputEncoding());
      encodingCombo.addModifyListener(new ModifyListener(){
        @Override public void modifyText(        ModifyEvent e){
          int index=encodingCombo.getSelectionIndex();
          if (index >= 0) {
            settings.setOutputEncoding(encodingCombo.getItem(index));
          }
          updatePageCompletion();
        }
      }
);
      encodingBOMLabel=UIUtils.createControlLabel(generalSettings,CoreMessages.data_transfer_wizard_output_label_insert_bom);
      encodingBOMLabel.setToolTipText(CoreMessages.data_transfer_wizard_output_label_insert_bom_tooltip);
      encodingBOMCheckbox=new Button(generalSettings,SWT.CHECK);
      encodingBOMCheckbox.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END,GridData.VERTICAL_ALIGN_BEGINNING,true,false,1,1));
      encodingBOMCheckbox.addSelectionListener(new SelectionAdapter(){
        @Override public void widgetSelected(        SelectionEvent e){
          settings.setOutputEncodingBOM(encodingBOMCheckbox.getSelection());
        }
      }
);
      new Label(generalSettings,SWT.NONE);
    }
    compressCheckbox=UIUtils.createLabelCheckbox(generalSettings,CoreMessages.data_transfer_wizard_output_checkbox_compress,false);
    compressCheckbox.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING,GridData.VERTICAL_ALIGN_BEGINNING,true,false,4,1));
    compressCheckbox.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        settings.setCompressResults(compressCheckbox.getSelection());
      }
    }
);
  }
{
    Group generalSettings=UIUtils.createControlGroup(composite,CoreMessages.data_transfer_wizard_output_group_progress,4,GridData.FILL_HORIZONTAL,0);
    showFolderCheckbox=UIUtils.createLabelCheckbox(generalSettings,CoreMessages.data_transfer_wizard_output_checkbox_open_folder,true);
    showFolderCheckbox.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        settings.setOpenFolderOnFinish(showFolderCheckbox.getSelection());
      }
    }
);
    showFolderCheckbox.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING,GridData.VERTICAL_ALIGN_BEGINNING,false,false,3,1));
  }
  setControl(composite);
}
