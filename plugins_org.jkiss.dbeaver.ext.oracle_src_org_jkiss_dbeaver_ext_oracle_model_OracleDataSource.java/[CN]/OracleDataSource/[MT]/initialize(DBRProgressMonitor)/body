{
  super.initialize(monitor);
  this.publicSchema=new OracleSchema(this,1,OracleConstants.USER_PUBLIC);
{
    try (JDBCSession session=DBUtils.openMetaSession(monitor,this,"Load data source meta info")){
      DBPConnectionConfiguration connectionInfo=getContainer().getConnectionConfiguration();
      Object sessionLanguage=connectionInfo.getProperty(OracleConstants.PROP_SESSION_LANGUAGE);
      if (sessionLanguage != null) {
        try {
          JDBCUtils.executeSQL(session,"ALTER SESSION SET NLS_LANGUAGE='" + sessionLanguage + "'");
        }
 catch (        SQLException e) {
          log.warn("Can't set session language",e);
        }
      }
      Object sessionTerritory=connectionInfo.getProperty(OracleConstants.PROP_SESSION_TERRITORY);
      if (sessionTerritory != null) {
        try {
          JDBCUtils.executeSQL(session,"ALTER SESSION SET NLS_TERRITORY='" + sessionTerritory + "'");
        }
 catch (        SQLException e) {
          log.warn("Can't set session territory",e);
        }
      }
      this.isAdmin="YES".equals(JDBCUtils.queryString(session,"SELECT 'YES' FROM USER_ROLE_PRIVS WHERE GRANTED_ROLE='DBA'"));
      this.isAdminVisible=isAdmin;
      if (!isAdminVisible) {
        Object showAdmin=connectionInfo.getProperty(OracleConstants.PROP_ALWAYS_SHOW_DBA);
        if (showAdmin != null) {
          isAdminVisible=CommonUtils.getBoolean(showAdmin,false);
        }
      }
      this.activeSchemaName=OracleUtils.getCurrentSchema(session);
      if (this.activeSchemaName != null) {
        if (this.activeSchemaName.isEmpty()) {
          this.activeSchemaName=null;
        }
      }
    }
 catch (    SQLException e) {
      log.warn(e);
    }
  }
  this.dataTypeCache.getAllObjects(monitor,this);
}
