{
  try {
    store.setValue(DBeaverPreferences.STATEMENT_INVALIDATE_BEFORE_EXECUTE,invalidateBeforeExecuteCheck.getSelection());
    store.setValue(DBeaverPreferences.STATEMENT_TIMEOUT,executeTimeoutText.getSelection());
    store.setValue(SQLPreferenceConstants.ENABLE_AUTO_ACTIVATION,csAutoActivationCheck.getSelection());
    store.setValue(SQLPreferenceConstants.AUTO_ACTIVATION_DELAY,csAutoActivationDelaySpinner.getSelection());
    store.setValue(SQLPreferenceConstants.INSERT_SINGLE_PROPOSALS_AUTO,csAutoInsertCheck.getSelection());
    store.setValue(SQLPreferenceConstants.PROPOSAL_INSERT_CASE,csInsertCase.getSelectionIndex());
    store.setValue(SQLPreferenceConstants.HIDE_DUPLICATE_PROPOSALS,csHideDuplicates.getSelection());
    store.setValue(DBeaverPreferences.SCRIPT_COMMIT_TYPE,CommonUtils.fromOrdinal(SQLScriptCommitType.class,commitTypeCombo.getSelectionIndex()).name());
    store.setValue(DBeaverPreferences.SCRIPT_COMMIT_LINES,commitLinesText.getSelection());
    store.setValue(DBeaverPreferences.SCRIPT_ERROR_HANDLING,CommonUtils.fromOrdinal(SQLScriptErrorHandling.class,errorHandlingCombo.getSelectionIndex()).name());
    store.setValue(DBeaverPreferences.SCRIPT_FETCH_RESULT_SETS,fetchResultSetsCheck.getSelection());
    store.setValue(DBeaverPreferences.SCRIPT_AUTO_FOLDERS,autoFoldersCheck.getSelection());
    store.setValue(SQLPreferenceConstants.SQLEDITOR_CLOSE_SINGLE_QUOTES,acSingleQuotesCheck.getSelection());
    store.setValue(SQLPreferenceConstants.SQLEDITOR_CLOSE_DOUBLE_QUOTES,acDoubleQuotesCheck.getSelection());
    store.setValue(SQLPreferenceConstants.SQLEDITOR_CLOSE_BRACKETS,acBracketsCheck.getSelection());
    final RulerColumnPreferenceAdapter adapter=new RulerColumnPreferenceAdapter(store,AbstractTextEditor.PREFERENCE_RULER_CONTRIBUTIONS);
    for (    Map.Entry<RulerColumnDescriptor,Button> entry : rulerChecks.entrySet()) {
      adapter.setEnabled(entry.getKey(),entry.getValue().getSelection());
    }
  }
 catch (  Exception e) {
    log.warn(e);
  }
  RuntimeUtils.savePreferenceStore(store);
}
