{
  final Composite composite=new Composite(parent,SWT.NONE);
  GridData gd=new GridData(GridData.FILL_BOTH);
  gd.minimumHeight=200;
  composite.setLayoutData(gd);
  composite.setLayout(new GridLayout(2,false));
  hostText=UIUtils.createLabelText(composite,CoreMessages.model_ssh_configurator_label_host_ip,null);
  hostText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  portText=UIUtils.createLabelSpinner(composite,CoreMessages.model_ssh_configurator_label_port,SSHConstants.DEFAULT_SSH_PORT,0,65535);
  userNameText=UIUtils.createLabelText(composite,CoreMessages.model_ssh_configurator_label_user_name,null);
  userNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  authMethodCombo=UIUtils.createLabelCombo(composite,CoreMessages.model_ssh_configurator_combo_auth_method,SWT.DROP_DOWN | SWT.READ_ONLY);
  gd=new GridData(GridData.FILL_HORIZONTAL);
  gd.minimumWidth=130;
  authMethodCombo.setLayoutData(gd);
  authMethodCombo.add(CoreMessages.model_ssh_configurator_combo_password);
  authMethodCombo.add(CoreMessages.model_ssh_configurator_combo_pub_key);
  privateKeyLabel=UIUtils.createControlLabel(composite,CoreMessages.model_ssh_configurator_label_private_key);
  privateKeyLabel.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING));
  pkControlGroup=UIUtils.createPlaceholder(composite,1);
  gd=new GridData(GridData.FILL_HORIZONTAL);
  gd.minimumWidth=130;
  pkControlGroup.setLayoutData(gd);
  privateKeyText=new TextWithOpenFile(pkControlGroup,CoreMessages.model_ssh_configurator_dialog_choose_private_key,new String[]{"*","*.ssh","*.pem","*.*"});
  privateKeyText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  pwdLabel=UIUtils.createControlLabel(composite,CoreMessages.model_ssh_configurator_label_password);
  pwdControlGroup=UIUtils.createPlaceholder(composite,3);
  gd=new GridData(GridData.FILL_HORIZONTAL);
  gd.minimumWidth=200;
  pwdControlGroup.setLayoutData(gd);
  passwordText=new Text(pwdControlGroup,SWT.BORDER | SWT.PASSWORD);
  new Label(pwdControlGroup,SWT.NONE).setText("   ");
  savePasswordCheckbox=UIUtils.createCheckbox(pwdControlGroup,CoreMessages.model_ssh_configurator_checkbox_save_pass,false);
  keepAliveText=UIUtils.createLabelSpinner(composite,CoreMessages.model_ssh_configurator_label_keep_alive,0,0,Integer.MAX_VALUE);
  authMethodCombo.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      updatePrivateKeyVisibility();
      composite.layout();
    }
  }
);
}
