{
  this.objectSchema=JDBCUtils.safeGetStringTrimmed(dbResult,"OBJECT_SCHEMA");
  this.objectName=JDBCUtils.safeGetString(dbResult,"OBJECT_NAME");
  this.objectType=JDBCUtils.safeGetString(dbResult,"OBJECT_TYPE");
  this.createTime=JDBCUtils.safeGetTimestamp(dbResult,"CREATE_TIME");
  this.statsTime=JDBCUtils.safeGetTimestamp(dbResult,"STATISTICS_TIME");
  this.columnsCount=JDBCUtils.safeGetInteger(dbResult,"COLUMN_COUNT");
  this.rowCount=JDBCUtils.safeGetInteger(dbResult,"ROW_COUNT");
  this.width=JDBCUtils.safeGetInteger(dbResult,"WIDTH");
  this.pages=JDBCUtils.safeGetLong(dbResult,"PAGES");
  this.distinct=JDBCUtils.safeGetString(dbResult,"DISTINCT");
  this.tablespaceName=JDBCUtils.safeGetString(dbResult,"TABLESPACE_NAME");
  this.overHead=JDBCUtils.safeGetDouble(dbResult,"OVERHEAD");
  this.transferRate=JDBCUtils.safeGetDouble(dbResult,"TRANSFER_RATE");
  this.prefetchSize=JDBCUtils.safeGetInteger(dbResult,"PREFETCHSIZE");
  this.extentSize=JDBCUtils.safeGetInteger(dbResult,"EXTENTSIZE");
  this.cluster=JDBCUtils.safeGetDouble(dbResult,"CLUSTER");
  this.nLeaf=JDBCUtils.safeGetLong(dbResult,"NLEAF");
  this.nLevels=JDBCUtils.safeGetInteger(dbResult,"NLEVELS");
  this.fullKeyCard=JDBCUtils.safeGetLong(dbResult,"FULLKEYCARD");
  this.overFlow=JDBCUtils.safeGetLong(dbResult,"OVERFLOW");
  this.firstKeyCard=JDBCUtils.safeGetLong(dbResult,"FIRSTKEYCARD");
  this.first2KeyCard=JDBCUtils.safeGetLong(dbResult,"FIRST2KEYCARD");
  this.first3KeyCard=JDBCUtils.safeGetLong(dbResult,"FIRST3KEYCARD");
  this.first4KeyCard=JDBCUtils.safeGetLong(dbResult,"FIRST4KEYCARD");
  this.sequentialPages=JDBCUtils.safeGetLong(dbResult,"SEQUENTIAL_PAGES");
  this.density=JDBCUtils.safeGetInteger(dbResult,"DENSITY");
  this.statsSrc=JDBCUtils.safeGetString(dbResult,"STATS_SRC");
  this.avgSequenceGap=JDBCUtils.safeGetDouble(dbResult,"AVERAGE_SEQUENCE_GAP");
  this.avgSequenceFetchGap=JDBCUtils.safeGetDouble(dbResult,"AVERAGE_SEQUENCE_FETCH_GAP");
  this.avgSequencePages=JDBCUtils.safeGetDouble(dbResult,"AVERAGE_SEQUENCE_PAGES");
  this.avgSequenceFetchPages=JDBCUtils.safeGetDouble(dbResult,"AVERAGE_SEQUENCE_FETCH_PAGES");
  this.avgRandomFetchPages=JDBCUtils.safeGetDouble(dbResult,"AVERAGE_RANDOM_FETCH_PAGES");
  this.numRIDs=JDBCUtils.safeGetLong(dbResult,"NUMRIDS");
  this.numRIDsDeleted=JDBCUtils.safeGetLong(dbResult,"NUMRIDS_DELETED");
  this.numEmptyLeafs=JDBCUtils.safeGetLong(dbResult,"NUM_EMPTY_LEAFS");
  this.activeBlocks=JDBCUtils.safeGetLong(dbResult,"ACTIVE_BLOCKS");
  this.numDataParts=JDBCUtils.safeGetInteger(dbResult,"NUM_DATA_PARTS");
  this.nullKeys=JDBCUtils.safeGetString(dbResult,"NULLKEYS");
  this.nodeName=buildName(objectSchema,objectName);
  this.displayName=objectType + ": " + nodeName;
}
