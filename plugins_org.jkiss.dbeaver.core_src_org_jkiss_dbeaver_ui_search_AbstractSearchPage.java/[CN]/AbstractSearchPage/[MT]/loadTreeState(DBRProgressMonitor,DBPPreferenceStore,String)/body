{
  final List<DBNNode> result=new ArrayList<>();
  final String sources=store.getString(propName);
  if (!CommonUtils.isEmpty(sources)) {
    Set<DBNDataSource> brokenDataSources=new HashSet<>();
    StringTokenizer st=new StringTokenizer(sources,"|");
    while (st.hasMoreTokens()) {
      String nodePath=st.nextToken();
      try {
        DBNDataSource dsNode=DBeaverCore.getInstance().getNavigatorModel().getDataSourceByPath(nodePath);
        if (dsNode == null || brokenDataSources.contains(dsNode)) {
          continue;
        }
        DBNNode node=DBeaverCore.getInstance().getNavigatorModel().getNodeByPath(monitor,dsNode.getOwnerProject(),nodePath);
        if (node != null) {
          result.add(node);
        }
 else {
          brokenDataSources.add(dsNode);
        }
      }
 catch (      DBException e) {
        log.error(e);
      }
    }
  }
  return result;
}
