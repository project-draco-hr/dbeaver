{
  return new UITask<GenericTableForeignKey>(){
    @Override protected GenericTableForeignKey runTask(){
      EditForeignKeyDialog editDialog=new EditForeignKeyDialog(DBeaverUI.getActiveWorkbenchShell(),"Create foreign key",table,new DBSForeignKeyModifyRule[]{DBSForeignKeyModifyRule.NO_ACTION,DBSForeignKeyModifyRule.CASCADE,DBSForeignKeyModifyRule.RESTRICT,DBSForeignKeyModifyRule.SET_NULL,DBSForeignKeyModifyRule.SET_DEFAULT});
      if (editDialog.open() != IDialogConstants.OK_ID) {
        return null;
      }
      final GenericTableForeignKey foreignKey=new GenericTableForeignKey(table,null,null,(GenericPrimaryKey)editDialog.getUniqueConstraint(),editDialog.getOnDeleteRule(),editDialog.getOnUpdateRule(),DBSForeignKeyDefferability.NOT_DEFERRABLE,false);
      foreignKey.setName(DBObjectNameCaseTransformer.transformObjectName(foreignKey,CommonUtils.escapeIdentifier(table.getName()) + "_" + CommonUtils.escapeIdentifier(editDialog.getUniqueConstraint().getParentObject().getName())+ "_FK"));
      int colIndex=1;
      for (      EditForeignKeyDialog.FKColumnInfo tableColumn : editDialog.getColumns()) {
        foreignKey.addColumn(new GenericTableForeignKeyColumnTable(foreignKey,(GenericTableColumn)tableColumn.getOwnColumn(),colIndex++,(GenericTableColumn)tableColumn.getRefColumn()));
      }
      return foreignKey;
    }
  }
.execute();
}
