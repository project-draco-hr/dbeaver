{
  super(config);
  this.id=config.getAttribute(RegistryConstants.ATTR_ID);
  this.exporterType=new ObjectType(config.getAttribute(RegistryConstants.ATTR_CLASS));
  this.name=config.getAttribute(RegistryConstants.ATTR_LABEL);
  this.description=config.getAttribute(RegistryConstants.ATTR_DESCRIPTION);
  this.fileExtension=config.getAttribute(RegistryConstants.ATTR_EXTENSION);
  String formatName=config.getAttribute(RegistryConstants.ATTR_FORMAT);
  if (CommonUtils.isEmpty(formatName)) {
    exportFormat=DBDDisplayFormat.UI;
  }
 else {
    exportFormat=DBDDisplayFormat.valueOf(formatName.toUpperCase());
  }
  String iconPath=config.getAttribute(RegistryConstants.ATTR_ICON);
  if (!CommonUtils.isEmpty(iconPath)) {
    this.icon=iconToImage(iconPath);
  }
  IConfigurationElement[] typesCfg=config.getChildren(RegistryConstants.ATTR_SOURCE_TYPE);
  if (typesCfg != null) {
    for (    IConfigurationElement typeCfg : typesCfg) {
      String objectType=typeCfg.getAttribute(RegistryConstants.ATTR_TYPE);
      if (objectType != null) {
        sourceTypes.add(new ObjectType(objectType));
      }
    }
  }
  IConfigurationElement[] propElements=config.getChildren(PropertyDescriptorEx.TAG_PROPERTY_GROUP);
  for (  IConfigurationElement prop : propElements) {
    properties.addAll(PropertyDescriptorEx.extractProperties(prop));
  }
}
