{
  this.presentation=presentation;
  viewPlaceholder=new Composite(parent,SWT.NONE);
  viewPlaceholder.setLayout(new FillLayout());
  viewPlaceholder.addPaintListener(new PaintListener(){
    @Override public void paintControl(    PaintEvent e){
      if (viewPlaceholder.getChildren().length == 0) {
        String hidePanelCmd=ActionUtils.findCommandDescription(ResultSetCommandHandler.CMD_TOGGLE_PANELS,ViewValuePanel.this.presentation.getController().getSite(),true);
        UIUtils.drawMessageOverControl(viewPlaceholder,e,"Select a cell to view/edit value",0);
        UIUtils.drawMessageOverControl(viewPlaceholder,e,"Press " + hidePanelCmd + " to hide this panel",20);
      }
    }
  }
);
  if (this.presentation instanceof ISelectionProvider) {
    final ISelectionProvider selectionProvider=(ISelectionProvider)this.presentation;
    final ISelectionChangedListener selectionListener=new ISelectionChangedListener(){
      @Override public void selectionChanged(      SelectionChangedEvent event){
        if (ViewValuePanel.this.presentation.getController().getVisiblePanel() == ViewValuePanel.this) {
          refreshValue(false);
        }
      }
    }
;
    selectionProvider.addSelectionChangedListener(selectionListener);
    viewPlaceholder.addDisposeListener(new DisposeListener(){
      @Override public void widgetDisposed(      DisposeEvent e){
        selectionProvider.removeSelectionChangedListener(selectionListener);
      }
    }
);
  }
  return viewPlaceholder;
}
