{
  this.type=type;
  this.contents=contents;
  values=new LinkedHashMap<DBSAttributeBase,Object>();
  try {
    Object[] attrValues=contents == null ? null : contents.getAttributes();
    if (type instanceof DBSEntity) {
      DBSEntity entity=(DBSEntity)type;
      Collection<? extends DBSEntityAttribute> entityAttributes=CommonUtils.safeCollection(entity.getAttributes(session.getProgressMonitor()));
      int valueCount=attrValues == null ? 0 : attrValues.length;
      if (attrValues != null && entityAttributes.size() != valueCount) {
        log.warn("Number of entity attributes (" + entityAttributes.size() + ") differs from real values ("+ valueCount+ ")");
      }
      for (      DBSEntityAttribute attr : entityAttributes) {
        int ordinalPosition=attr.getOrdinalPosition() - 1;
        if (ordinalPosition < 0 || attrValues != null && ordinalPosition >= valueCount) {
          log.warn("Attribute '" + attr.getName() + "' ordinal position ("+ ordinalPosition+ ") is out of range ("+ valueCount+ ")");
          continue;
        }
        Object value=attrValues != null ? attrValues[ordinalPosition] : null;
        DBDValueHandler valueHandler=DBUtils.findValueHandler(session,attr);
        value=valueHandler.getValueFromObject(session,attr,value,false);
        values.put(attr,value);
      }
    }
  }
 catch (  DBException e) {
    throw new DBCException("Can't obtain attributes meta information",e);
  }
catch (  SQLException e) {
    throw new DBCException(e,session.getDataSource());
  }
}
