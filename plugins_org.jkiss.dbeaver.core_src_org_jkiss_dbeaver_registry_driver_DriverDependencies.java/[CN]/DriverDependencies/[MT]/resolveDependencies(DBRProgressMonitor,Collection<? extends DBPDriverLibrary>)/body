{
  try {
{
      rootNodes.clear();
      final Map<String,DBPDriverLibrary> libMap=new LinkedHashMap<>();
      for (      DBPDriverLibrary library : rootLibraries) {
        DependencyNode node=new DependencyNode(null,library);
        libMap.put(node.library.getId(),node.library);
        resolveDependencies(monitor,node,libMap);
        rootNodes.add(node);
      }
      libraryList.clear();
      libraryList.addAll(libMap.values());
{
        StringBuilder sb=new StringBuilder();
        Set<String> ns=new TreeSet<>();
        for (        String lib : libMap.keySet()) {
          String newName=lib.replaceAll(".+\\:","");
          if (ns.contains(newName)) {
          }
          ns.add(newName);
        }
        for (        String lib : ns) {
          sb.append(lib).append("\n");
        }
        System.out.println(sb.toString());
        System.out.println("---------------------------");
        for (        DependencyNode node : rootNodes) {
          dumpNode(node,0);
        }
      }
    }
  }
 catch (  IOException e) {
    throw new DBException("IO error while resolving dependencies",e);
  }
}
