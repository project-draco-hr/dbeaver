{
  readRequiredMeta(session.getProgressMonitor());
  return new ExecuteBatchImpl(attributes,keysReceiver,true){
    @NotNull @Override protected DBCStatement prepareStatement(    @NotNull DBCSession session,    Object[] attributeValues) throws DBCException {
      StringBuilder query=new StringBuilder(200);
      query.append("INSERT INTO ").append(getFullQualifiedName()).append(" (");
      boolean hasKey=false;
      for (int i=0; i < attributes.length; i++) {
        DBSAttributeBase attribute=attributes[i];
        if (attribute.isPseudoAttribute() || DBUtils.isNullValue(attributeValues[i])) {
          continue;
        }
        if (hasKey)         query.append(",");
        hasKey=true;
        query.append(getAttributeName(attribute));
      }
      query.append(")\nVALUES (");
      hasKey=false;
      for (int i=0; i < attributes.length; i++) {
        DBSAttributeBase attribute=attributes[i];
        if (attribute.isPseudoAttribute() || DBUtils.isNullValue(attributeValues[i])) {
          continue;
        }
        if (hasKey)         query.append(",");
        hasKey=true;
        query.append("?");
      }
      query.append(")");
      DBCStatement dbStat=session.prepareStatement(DBCStatementType.QUERY,query.toString(),false,false,keysReceiver != null);
      dbStat.setStatementSource(source);
      return dbStat;
    }
    @Override protected void bindStatement(    @NotNull DBDValueHandler[] handlers,    @NotNull DBCStatement statement,    Object[] attributeValues) throws DBCException {
      int paramIndex=0;
      for (int k=0; k < handlers.length; k++) {
        DBSAttributeBase attribute=attributes[k];
        if (attribute.isPseudoAttribute() || DBUtils.isNullValue(attributeValues[k])) {
          continue;
        }
        handlers[k].bindValueObject(statement.getSession(),statement,attribute,paramIndex++,attributeValues[k]);
      }
    }
  }
;
}
