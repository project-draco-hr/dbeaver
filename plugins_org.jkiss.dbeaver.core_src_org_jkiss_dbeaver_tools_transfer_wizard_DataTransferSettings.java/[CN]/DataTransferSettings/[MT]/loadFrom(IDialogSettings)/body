{
  IStreamDataExporterDescriptor dataExporter=null;
  String expId=dialogSettings.get("exporter");
  if (expId != null) {
    dataExporter=DBeaverCore.getInstance().getDataExportersRegistry().getDataExporter(expId);
  }
  if (dialogSettings.get("extractType") != null) {
    try {
      extractType=ExtractType.valueOf(dialogSettings.get("extractType"));
    }
 catch (    IllegalArgumentException e) {
      extractType=ExtractType.SINGLE_QUERY;
    }
  }
  try {
    segmentSize=dialogSettings.getInt("segmentSize");
  }
 catch (  NumberFormatException e) {
    segmentSize=DEFAULT_SEGMENT_SIZE;
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("formatterProfile"))) {
    formatterProfile=DBeaverCore.getInstance().getDataFormatterRegistry().getCustomProfile(dialogSettings.get("formatterProfile"));
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("lobExtractType"))) {
    try {
      lobExtractType=LobExtractType.valueOf(dialogSettings.get("lobExtractType"));
    }
 catch (    IllegalArgumentException e) {
      lobExtractType=LobExtractType.SKIP;
    }
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("lobEncoding"))) {
    try {
      lobEncoding=LobEncoding.valueOf(dialogSettings.get("lobEncoding"));
    }
 catch (    IllegalArgumentException e) {
      lobEncoding=LobEncoding.HEX;
    }
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("outputFolder"))) {
    outputFolder=dialogSettings.get("outputFolder");
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("outputFilePattern"))) {
    outputFilePattern=dialogSettings.get("outputFilePattern");
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("outputEncoding"))) {
    outputEncoding=dialogSettings.get("outputEncoding");
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("outputEncodingBOM"))) {
    outputEncodingBOM=dialogSettings.getBoolean("outputEncodingBOM");
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("compressResults"))) {
    compressResults=dialogSettings.getBoolean("compressResults");
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("openNewConnections"))) {
    openNewConnections=dialogSettings.getBoolean("openNewConnections");
  }
  if (!CommonUtils.isEmpty(dialogSettings.get("queryRowCount"))) {
    queryRowCount=dialogSettings.getBoolean("queryRowCount");
  }
  try {
    maxJobCount=dialogSettings.getInt("maxJobCount");
  }
 catch (  NumberFormatException e) {
    maxJobCount=DEFAULT_THREADS_NUM;
  }
  if (dialogSettings.get("openFolderOnFinish") != null) {
    openFolderOnFinish=dialogSettings.getBoolean("openFolderOnFinish");
  }
  IDialogSettings[] expSections=dialogSettings.getSections();
  if (expSections != null && expSections.length > 0) {
    for (    IDialogSettings expSection : expSections) {
      expId=expSection.getName();
      IStreamDataExporterDescriptor exporter=DBeaverCore.getInstance().getDataExportersRegistry().getDataExporter(expId);
      if (exporter != null) {
        Map<Object,Object> expProps=new HashMap<Object,Object>();
        exporterPropsHistory.put(exporter,expProps);
        for (        IPropertyDescriptor prop : exporter.getProperties()) {
          Object value=expSection.get(prop.getId().toString());
          if (value != null) {
            if ("extractImages".equals(prop.getId())) {
              value=Boolean.parseBoolean((String)value);
            }
            expProps.put(prop.getId(),value);
          }
        }
      }
    }
  }
  setExporterDescriptor(dataExporter);
}
