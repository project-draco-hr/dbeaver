{
  dialogSettings.put("maxJobCount",maxJobCount);
  for (  Map.Entry<Class,NodeSettings> entry : nodeSettings.entrySet()) {
    IDialogSettings nodeSection=dialogSettings.addNewSection(entry.getKey().getSimpleName());
    entry.getValue().settings.saveSettings(nodeSection);
  }
  if (producer != null) {
    dialogSettings.put("producer",producer.getId());
  }
  if (consumer != null) {
    dialogSettings.put("consumer",consumer.getId());
  }
  if (processor != null) {
    dialogSettings.put("processor",processor.getId());
  }
  IDialogSettings processorsSection=DialogSettings.getOrCreateSection(dialogSettings,"processors");
  for (  DataTransferProcessorDescriptor procDescriptor : processorPropsHistory.keySet()) {
    IDialogSettings procSettings=DialogSettings.getOrCreateSection(processorsSection,procDescriptor.getId());
    procSettings.put("@node",procDescriptor.getNode().getId());
    Map<Object,Object> props=processorPropsHistory.get(procDescriptor);
    if (props != null) {
      StringBuilder propNames=new StringBuilder();
      for (      Map.Entry<Object,Object> prop : props.entrySet()) {
        propNames.append(prop.getKey()).append(',');
      }
      procSettings.put("@propNames",propNames.toString());
      for (      Map.Entry<Object,Object> prop : props.entrySet()) {
        procSettings.put(CommonUtils.toString(prop.getKey()),CommonUtils.toString(prop.getValue()));
      }
    }
  }
}
