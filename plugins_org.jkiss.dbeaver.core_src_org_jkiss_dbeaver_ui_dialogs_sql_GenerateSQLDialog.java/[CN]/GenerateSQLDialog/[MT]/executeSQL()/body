{
  final String jobName=getShell().getText();
  final String[] scriptLines=generateSQLScript();
  DataSourceJob job=new DataSourceJob(jobName,null,executionContext){
    @Override protected IStatus run(    DBRProgressMonitor monitor){
      DBCSession session=getExecutionContext().openSession(monitor,DBCExecutionPurpose.UTIL,jobName);
      try {
        for (        String line : scriptLines) {
          DBCStatement statement=DBUtils.prepareStatement(session,line,false);
          try {
            statement.executeStatement();
          }
  finally {
            statement.close();
          }
        }
      }
 catch (      DBCException e) {
        return GeneralUtils.makeExceptionStatus(e);
      }
 finally {
        session.close();
      }
      return Status.OK_STATUS;
    }
  }
;
  job.addJobChangeListener(new JobChangeAdapter(){
    @Override public void done(    IJobChangeEvent event){
      if (event.getResult().isOK()) {
        if (onSuccess != null) {
          onSuccess.run();
        }
      }
    }
  }
);
  job.schedule();
}
