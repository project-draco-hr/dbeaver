{
  this.scriptFiles=scriptFiles;
  final Color bg=parent.getDisplay().getSystemColor(SWT.COLOR_INFO_BACKGROUND);
  popup=new Shell(parent,SWT.RESIZE | SWT.NO_TRIM);
  popup.setLayout(new FillLayout());
  popup.setBounds(100,100,400,200);
  Composite composite=new Composite(popup,SWT.BORDER);
  composite.setLayout(new GridLayout(1,false));
  composite.setBackground(bg);
  patternText=new Text(composite,SWT.NONE);
  patternText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  patternText.setBackground(bg);
  UIUtils.createHorizontalLine(composite);
  scriptTable=new Tree(composite,SWT.NONE);
  scriptTable.setLayoutData(new GridData(GridData.FILL_BOTH));
  scriptTable.setBackground(bg);
  UIUtils.createTreeColumn(scriptTable,SWT.LEFT,"Script");
  UIUtils.createTreeColumn(scriptTable,SWT.LEFT,"Info");
  for (  IFile scriptFile : scriptFiles) {
    final TreeItem item=new TreeItem(scriptTable,SWT.NONE);
    item.setImage(DBeaverIcons.getImage(UIIcon.SQL_SCRIPT));
    item.setText(0,scriptFile.getName());
    item.setText(1,"");
  }
  final Listener focusFilter=new Listener(){
    public void handleEvent(    Event event){
      if (event.widget != scriptTable && event.widget != patternText) {
        popup.dispose();
      }
    }
  }
;
  popup.getDisplay().addFilter(SWT.FocusIn,focusFilter);
  popup.addDisposeListener(new DisposeListener(){
    @Override public void widgetDisposed(    DisposeEvent e){
      popup.getDisplay().removeFilter(SWT.FocusIn,focusFilter);
    }
  }
);
}
