{
  this.workbenchWindow=workbenchWindow;
  this.rootFolder=rootFolder;
  Shell parent=this.workbenchWindow.getShell();
  final Color bg=parent.getDisplay().getSystemColor(SWT.COLOR_INFO_BACKGROUND);
  popup=new Shell(parent,SWT.RESIZE);
  popup.setLayout(new FillLayout());
  popup.setBounds(100,100,400,200);
  Composite composite=new Composite(popup,SWT.NONE);
  final GridLayout gl=new GridLayout(2,false);
  composite.setLayout(gl);
  composite.setBackground(bg);
  patternText=new Text(composite,SWT.NONE);
  patternText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  patternText.setBackground(bg);
  newButton=new Button(composite,SWT.PUSH | SWT.FLAT);
  newButton.setText("&New Script");
  newButton.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      popup.dispose();
      IFile scriptFile;
      try {
        scriptFile=ResourceUtils.createNewScript(rootFolder.getProject(),rootFolder,dataSourceContainer);
        NavigatorHandlerObjectOpen.openResource(scriptFile,workbenchWindow);
      }
 catch (      CoreException ex) {
        log.error(ex);
      }
    }
  }
);
  ((GridData)UIUtils.createHorizontalLine(composite).getLayoutData()).horizontalSpan=2;
  scriptTable=new Tree(composite,SWT.MULTI | SWT.FULL_SELECTION);
  final GridData gd=new GridData(GridData.FILL_BOTH);
  gd.horizontalSpan=2;
  scriptTable.setLayoutData(gd);
  scriptTable.setBackground(bg);
  scriptTable.setLinesVisible(true);
  UIUtils.createTreeColumn(scriptTable,SWT.LEFT,"Script");
  UIUtils.createTreeColumn(scriptTable,SWT.LEFT,"Info");
  scriptTable.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetDefaultSelected(    SelectionEvent e){
      List<IFile> files=new ArrayList<>();
      for (      TreeItem item : scriptTable.getSelection()) {
        if (item.getData() instanceof IFile) {
          files.add((IFile)item.getData());
        }
      }
      if (files.isEmpty()) {
        return;
      }
      popup.dispose();
      for (      IFile file : files) {
        NavigatorHandlerObjectOpen.openResource(file,ScriptSelectorShell.this.workbenchWindow);
      }
    }
  }
);
  this.patternText.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      if (e.keyCode == SWT.ARROW_DOWN) {
        scriptTable.select(scriptTable.getItem(0));
        scriptTable.setFocus();
      }
 else       if (e.keyCode == SWT.ARROW_UP) {
        scriptTable.select(scriptTable.getItem(scriptTable.getItemCount() - 1));
        scriptTable.setFocus();
      }
    }
  }
);
  final Listener focusFilter=new Listener(){
    public void handleEvent(    Event event){
      if (event.widget != scriptTable && event.widget != patternText && event.widget != newButton) {
        popup.dispose();
      }
    }
  }
;
  popup.getDisplay().addFilter(SWT.FocusIn,focusFilter);
  popup.addDisposeListener(new DisposeListener(){
    @Override public void widgetDisposed(    DisposeEvent e){
      popup.getDisplay().removeFilter(SWT.FocusIn,focusFilter);
    }
  }
);
}
