{
  final String inputClass=memento.getString(TAG_CLASS);
  final String nodePath=memento.getString(TAG_NODE);
  final String dataSourceId=memento.getString(TAG_DATA_SOURCE);
  if (nodePath == null || inputClass == null || dataSourceId == null) {
    log.error("Corrupted memento");
    return null;
  }
  final String activePageId=memento.getString(TAG_ACTIVE_PAGE);
  final String activeFolderId=memento.getString(TAG_ACTIVE_FOLDER);
  DataSourceDescriptor dataSourceContainer=null;
  ProjectRegistry projectRegistry=DBeaverCore.getInstance().getProjectRegistry();
  for (  IProject project : DBeaverCore.getInstance().getLiveProjects()) {
    DataSourceRegistry dataSourceRegistry=projectRegistry.getDataSourceRegistry(project);
    if (dataSourceRegistry != null) {
      dataSourceContainer=dataSourceRegistry.getDataSource(dataSourceId);
      if (dataSourceContainer != null) {
        break;
      }
    }
  }
  if (dataSourceContainer == null) {
    log.error("Can't find data source '" + dataSourceId + "'");
    return null;
  }
  final DBSDataSourceContainer dsObject=dataSourceContainer;
  DBRRunnableWithResult<IEditorInput> opener=new DBRRunnableWithResult<IEditorInput>(){
    private IStatus errorStatus;
    @Override public void run(    final DBRProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
      DBNDataSource dsNode=null;
      try {
        dsNode=(DBNDataSource)DBeaverCore.getInstance().getNavigatorModel().getNodeByObject(dsObject);
        dsNode.initializeNode(monitor,new DBRProcessListener(){
          @Override public void onProcessFinish(          IStatus status){
            if (!status.isOK()) {
              errorStatus=status;
              return;
            }
            try {
              DBNNode node=DBeaverCore.getInstance().getNavigatorModel().getNodeByPath(monitor,nodePath);
              if (node != null) {
                Class<?> aClass=Class.forName(inputClass);
                Constructor<?> constructor;
                for (Class nodeType=node.getClass(); ; nodeType=nodeType.getSuperclass()) {
                  try {
                    constructor=aClass.getConstructor(nodeType);
                    break;
                  }
 catch (                  NoSuchMethodException e) {
                  }
                }
                if (constructor != null) {
                  DatabaseEditorInput input=DatabaseEditorInput.class.cast(constructor.newInstance(node));
                  input.setDefaultPageId(activePageId);
                  input.setDefaultFolderId(activeFolderId);
                  result=input;
                }
 else {
                  throw new DBException("Can't create object instance [" + inputClass + "]");
                }
              }
            }
 catch (            Exception e) {
              errorStatus=new Status(IStatus.ERROR,DBeaverCore.getCorePluginID(),e.getMessage(),e);
              log.error(e);
            }
          }
        }
);
      }
 catch (      Exception e) {
        errorStatus=new Status(IStatus.ERROR,DBeaverCore.getCorePluginID(),e.getMessage(),e);
      }
      if (result == null && errorStatus != null) {
        result=new ErrorEditorInput(errorStatus,dsNode);
      }
    }
  }
;
  try {
    DBeaverUI.runInProgressService(opener);
  }
 catch (  InvocationTargetException e) {
    log.error("Error initializing database editor input",e.getTargetException());
  }
catch (  InterruptedException e) {
  }
  return opener.getResult();
}
