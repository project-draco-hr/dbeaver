{
  lastError=null;
  if (listener != null) {
    listener.onStartQuery(sqlStatement);
  }
  long startTime=System.currentTimeMillis();
  String sqlQuery=sqlStatement.getQuery();
  if (dataFilter != null && dataFilter.hasFilters()) {
    StringBuilder modifiedQuery=new StringBuilder(sqlQuery.length() + 100);
    modifiedQuery.append("SELECT * FROM (\n");
    modifiedQuery.append(sqlQuery);
    modifiedQuery.append("\n) ").append(NESTED_QUERY_AlIAS);
    if (dataFilter.hasConditions()) {
      modifiedQuery.append(" WHERE ");
      dataFilter.appendConditionString(session.getDataSource(),NESTED_QUERY_AlIAS,modifiedQuery);
    }
    if (dataFilter.hasOrdering()) {
      modifiedQuery.append(" ORDER BY ");
      dataFilter.appendOrderString(session.getDataSource(),NESTED_QUERY_AlIAS,modifiedQuery);
    }
    sqlQuery=modifiedQuery.toString();
  }
  curResult=new SQLQueryResult(sqlStatement);
  if (firstRow > 0) {
    curResult.setRowOffset(firstRow);
  }
  try {
    if (!connectionInvalidated && session.getDataSource().getContainer().getPreferenceStore().getBoolean(PrefConstants.STATEMENT_INVALIDATE_BEFORE_EXECUTE)) {
      session.getDataSource().invalidateContext(session.getProgressMonitor());
      connectionInvalidated=true;
    }
    boolean hasParameters=false;
    if (!CommonUtils.isEmpty(sqlStatement.getParameters())) {
      List<SQLStatementParameter> unresolvedParams=new ArrayList<SQLStatementParameter>();
      for (      SQLStatementParameter param : sqlStatement.getParameters()) {
        if (!param.isResolved()) {
          unresolvedParams.add(param);
        }
      }
      hasParameters=CommonUtils.isEmpty(unresolvedParams) || bindStatementParameters(session,unresolvedParams);
    }
    curStatement=DBUtils.prepareStatement(session,hasParameters ? DBCStatementType.QUERY : DBCStatementType.SCRIPT,sqlQuery,firstRow,maxRows);
    curStatement.setSource(source);
    if (hasParameters) {
      for (      SQLStatementParameter param : sqlStatement.getParameters()) {
        if (param.isResolved()) {
          param.getValueHandler().bindValueObject(session,curStatement,param,param.getIndex(),param.getValue());
        }
      }
    }
    if (!CommonUtils.isEmpty(sqlStatement.getParameters())) {
      List<SQLStatementParameter> unresolvedParams=new ArrayList<SQLStatementParameter>();
      for (      SQLStatementParameter param : sqlStatement.getParameters()) {
        if (!param.isResolved()) {
          unresolvedParams.add(param);
        }
      }
      if (!CommonUtils.isEmpty(unresolvedParams)) {
        if (bindStatementParameters(session,unresolvedParams)) {
          for (          SQLStatementParameter param : sqlStatement.getParameters()) {
            if (param.isResolved()) {
              param.getValueHandler().bindValueObject(session,curStatement,param,param.getIndex(),param.getValue());
            }
          }
        }
      }
    }
    try {
      boolean hasResultSet=curStatement.executeStatement();
      curResult.setHasResultSet(hasResultSet);
      statistics.addExecuteTime(System.currentTimeMillis() - startTime);
      statistics.addStatementsCount();
      if (hasResultSet && fetchResults) {
        fetchQueryData(session,curStatement.openResultSet(),maxRows,keepResults,0,statistics);
      }
      if (!hasResultSet) {
        long updateCount=-1;
        try {
          updateCount=curStatement.getUpdateRowCount();
          if (updateCount >= 0) {
            curResult.setUpdateCount(updateCount);
            statistics.addRowsUpdated(updateCount);
          }
        }
 catch (        DBCException e) {
          log.warn("Can't obtain update count",e);
        }
        if (fetchResults) {
          fetchExecutionResult(session,statistics);
        }
      }
    }
  finally {
      if (!keepResults) {
        closeStatement();
      }
      if (!CommonUtils.isEmpty(sqlStatement.getParameters())) {
        for (        SQLStatementParameter param : sqlStatement.getParameters()) {
          if (param.isResolved()) {
            param.getValueHandler().releaseValueObject(param.getValue());
          }
        }
      }
    }
  }
 catch (  Throwable ex) {
    curResult.setError(ex);
    lastError=ex;
  }
  curResult.setQueryTime(System.currentTimeMillis() - startTime);
  if (listener != null) {
    listener.onEndQuery(curResult);
  }
  return true;
}
