{
  Label pathLabel=new Label(basicInfoComposite,SWT.NONE);
  pathLabel.setText(PATH_TITLE);
  GridData gd=new GridData();
  gd.verticalAlignment=SWT.TOP;
  pathLabel.setLayoutData(gd);
  Text pathValueText=new Text(basicInfoComposite,SWT.WRAP | SWT.READ_ONLY);
  String pathString=TextProcessor.process(resource.getFullPath().toString());
  pathValueText.setText(pathString);
  gd=new GridData();
  gd.widthHint=convertWidthInCharsToPixels(MAX_VALUE_WIDTH);
  gd.grabExcessHorizontalSpace=true;
  gd.horizontalAlignment=GridData.FILL;
  pathValueText.setLayoutData(gd);
  pathValueText.setBackground(pathValueText.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
  Label typeTitle=new Label(basicInfoComposite,SWT.LEFT);
  typeTitle.setText(TYPE_TITLE);
  Text typeValue=new Text(basicInfoComposite,SWT.LEFT | SWT.READ_ONLY);
  typeValue.setText(getTypeString(resource,getContentDescription(resource)));
  typeValue.setBackground(typeValue.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
  if (resource.isLinked() && !resource.isVirtual()) {
    Label locationTitle=new Label(basicInfoComposite,SWT.LEFT);
    locationTitle.setText(LOCATION_TITLE);
    gd=new GridData();
    gd.verticalAlignment=SWT.TOP;
    locationTitle.setLayoutData(gd);
    Composite locationComposite=new Composite(basicInfoComposite,SWT.NULL);
    GridLayout layout=new GridLayout();
    layout.numColumns=2;
    layout.marginWidth=0;
    layout.marginHeight=0;
    locationComposite.setLayout(layout);
    gd=new GridData();
    gd.widthHint=convertWidthInCharsToPixels(MAX_VALUE_WIDTH);
    gd.grabExcessHorizontalSpace=true;
    gd.verticalAlignment=SWT.TOP;
    gd.horizontalAlignment=GridData.FILL;
    locationComposite.setLayoutData(gd);
    Text locationValue=new Text(locationComposite,SWT.WRAP | SWT.READ_ONLY);
    String locationStr=TextProcessor.process(getLocationText(resource));
    locationValue.setText(locationStr);
    gd=new GridData();
    gd.widthHint=convertWidthInCharsToPixels(MAX_VALUE_WIDTH);
    gd.grabExcessHorizontalSpace=true;
    gd.verticalAlignment=SWT.TOP;
    gd.horizontalAlignment=GridData.FILL;
    locationValue.setLayoutData(gd);
    locationValue.setBackground(locationValue.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
    Label resolvedLocationTitle=new Label(basicInfoComposite,SWT.LEFT);
    resolvedLocationTitle.setText(RESOLVED_LOCATION_TITLE);
    gd=new GridData();
    gd.verticalAlignment=SWT.TOP;
    resolvedLocationTitle.setLayoutData(gd);
    resolvedLocationValue=new Text(basicInfoComposite,SWT.WRAP | SWT.READ_ONLY);
    resolvedLocationValue.setText(getResolvedLocationText(resource));
    gd=new GridData();
    gd.widthHint=convertWidthInCharsToPixels(MAX_VALUE_WIDTH);
    gd.grabExcessHorizontalSpace=true;
    gd.horizontalAlignment=GridData.FILL;
    resolvedLocationValue.setLayoutData(gd);
    resolvedLocationValue.setBackground(resolvedLocationValue.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
  }
 else {
    if (!resource.isVirtual()) {
      Label locationTitle=new Label(basicInfoComposite,SWT.LEFT);
      locationTitle.setText(LOCATION_TITLE);
      gd=new GridData();
      gd.verticalAlignment=SWT.TOP;
      locationTitle.setLayoutData(gd);
      Text locationValue=new Text(basicInfoComposite,SWT.WRAP | SWT.READ_ONLY);
      String locationStr=TextProcessor.process(getLocationText(resource));
      locationValue.setText(locationStr);
      gd=new GridData();
      gd.widthHint=convertWidthInCharsToPixels(MAX_VALUE_WIDTH);
      gd.grabExcessHorizontalSpace=true;
      gd.horizontalAlignment=GridData.FILL;
      locationValue.setLayoutData(gd);
      locationValue.setBackground(locationValue.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
    }
  }
  if (resource.getType() == IResource.FILE) {
    Label sizeTitle=new Label(basicInfoComposite,SWT.LEFT);
    sizeTitle.setText(SIZE_TITLE);
    Text sizeValue=new Text(basicInfoComposite,SWT.LEFT | SWT.READ_ONLY);
    sizeValue.setText(getSizeString(resource));
    gd=new GridData();
    gd.widthHint=convertWidthInCharsToPixels(MAX_VALUE_WIDTH);
    gd.grabExcessHorizontalSpace=true;
    gd.horizontalAlignment=GridData.FILL;
    sizeValue.setLayoutData(gd);
    sizeValue.setBackground(sizeValue.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
  }
  Label timeStampLabel=new Label(basicInfoComposite,SWT.NONE);
  timeStampLabel.setText(TIMESTAMP_TITLE);
  Text timeStampValue=new Text(basicInfoComposite,SWT.READ_ONLY);
  timeStampValue.setText(getDateStringValue(resource));
  timeStampValue.setBackground(timeStampValue.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
  timeStampValue.setLayoutData(new GridData(GridData.FILL_HORIZONTAL | GridData.GRAB_HORIZONTAL));
  return basicInfoComposite;
}
