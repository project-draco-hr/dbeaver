{
  Composite propsPlaceholder=new Composite(container,SWT.BORDER);
  GridData gd=new GridData(GridData.FILL_BOTH);
  gd.horizontalSpan=2;
  propsPlaceholder.setLayoutData(gd);
  GridLayout gl=new GridLayout(1,false);
  gl.horizontalSpacing=0;
  gl.verticalSpacing=0;
  gl.marginHeight=0;
  gl.marginWidth=0;
  propsPlaceholder.setLayout(gl);
  folderComposite=new FolderComposite(propsPlaceholder,SWT.BORDER);
  folderComposite.setLayoutData(new GridData(GridData.FILL_BOTH));
  FolderInfo[] folders=collectFolders(this);
  folderComposite.setFolders(folders);
  GlobalContributorManager contributorManager=GlobalContributorManager.getInstance();
  for (  FolderInfo folder : folderComposite.getFolders()) {
    IFolder page=folder.getContents();
    if (page instanceof IDatabaseEditorContributorUser) {
      IEditorActionBarContributor contributor=((IDatabaseEditorContributorUser)page).getContributor(contributorManager);
      if (contributor != null) {
        contributorManager.addContributor(contributor,this);
        pageContributors.put(page,contributor);
      }
    }
    if (page instanceof ISaveablePart) {
      nestedSaveable.add((ISaveablePart)page);
    }
  }
  final String folderId=getEditorInput().getDefaultFolderId();
  if (folderId != null) {
    folderComposite.switchFolder(folderId);
  }
  folderComposite.addFolderListener(new IFolderListener(){
    @Override public void folderSelected(    String folderId){
      if (CommonUtils.equalObjects(curFolderId,folderId)) {
        return;
      }
synchronized (folderListeners) {
        curFolderId=folderId;
        for (        IFolderListener listener : folderListeners) {
          listener.folderSelected(folderId);
        }
      }
    }
  }
);
}
