{
  boolean recordMode=controller.isRecordMode();
  ResultSetRow curRow=controller.getCurrentRow();
  ResultSetModel model=controller.getModel();
switch (position) {
case FIRST:
    if (recordMode) {
      if (model.getRowCount() > 0) {
        controller.setCurrentRow(model.getRow(0));
      }
 else {
        controller.setCurrentRow(null);
      }
    }
 else {
      spreadsheet.shiftCursor(0,-spreadsheet.getItemCount(),false);
    }
  break;
case PREVIOUS:
if (recordMode && curRow != null && curRow.getVisualNumber() > 0) {
  controller.setCurrentRow(model.getRow(curRow.getVisualNumber() - 1));
}
 else {
  spreadsheet.shiftCursor(0,-1,false);
}
break;
case NEXT:
if (recordMode && curRow != null && curRow.getVisualNumber() < model.getRowCount() - 1) {
controller.setCurrentRow(model.getRow(curRow.getVisualNumber() + 1));
}
 else {
spreadsheet.shiftCursor(0,1,false);
}
break;
case LAST:
if (recordMode && model.getRowCount() > 0) {
controller.setCurrentRow(model.getRow(model.getRowCount() - 1));
}
 else {
spreadsheet.shiftCursor(0,spreadsheet.getItemCount(),false);
}
break;
}
if (controller.isRecordMode()) {
restoreState(curAttribute);
}
controller.updateEditControls();
controller.updateStatusMessage();
refreshData(recordMode,false);
}
