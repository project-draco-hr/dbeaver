{
  if (adapter == IPropertySheetPage.class) {
    PropertyPageStandard page=new PropertyPageStandard();
    page.setPropertySourceProvider(new IPropertySourceProvider(){
      @Nullable @Override public IPropertySource getPropertySource(      Object object){
        if (object instanceof GridCell) {
          GridCell cell=(GridCell)object;
          boolean recordMode=controller.isRecordMode();
          final DBDAttributeBinding attr=(DBDAttributeBinding)(recordMode ? cell.row : cell.col);
          final ResultSetRow row=(ResultSetRow)(recordMode ? cell.col : cell.row);
          final SpreadsheetValueController valueController=new SpreadsheetValueController(controller,attr,row,IValueController.EditType.NONE,null);
          PropertyCollector props=new PropertyCollector(valueController.getBinding().getAttribute(),false);
          props.collectProperties();
          valueController.getValueManager().contributeProperties(props,valueController);
          return new PropertySourceDelegate(props);
        }
        return null;
      }
    }
);
    return page;
  }
 else   if (adapter == IFindReplaceTarget.class) {
    return findReplaceTarget;
  }
  return null;
}
