{
  final DBDAttributeBinding attr=(DBDAttributeBinding)(controller.isRecordMode() ? rowObject : colObject);
  final ResultSetRow row=(ResultSetRow)(controller.isRecordMode() ? colObject : rowObject);
  controller.fillContextMenu(manager,attr,row);
  if (attr != null && row != null && row.isChanged()) {
    IMenuManager editMenu=manager.findMenuUsingPath(IResultSetController.MENU_GROUP_EDIT);
    if (editMenu != null) {
{
        Action resetValueAction=new Action(CoreMessages.controls_resultset_viewer_action_reset_value){
          @Override public void run(){
            resetCellValue(attr,row,false);
          }
        }
;
        resetValueAction.setAccelerator(SWT.ESC);
        editMenu.add(resetValueAction);
      }
{
        final List<Object> selectedColumns=spreadsheet.getColumnSelection();
        if (!controller.isRecordMode() && !selectedColumns.isEmpty()) {
          String hideTitle;
          if (selectedColumns.size() == 1) {
            DBDAttributeBinding columnToHide=(DBDAttributeBinding)selectedColumns.get(0);
            hideTitle="Hide column '" + columnToHide.getName() + "'";
          }
 else {
            hideTitle="Hide selected columns (" + selectedColumns.size() + ")";
          }
          editMenu.add(new Action(hideTitle){
            @Override public void run(){
              ResultSetModel model=controller.getModel();
              if (selectedColumns.size() >= model.getVisibleAttributeCount()) {
                UIUtils.showMessageBox(getControl().getShell(),"Hide columns","Can't hide all result columns, at least one column must be visible",SWT.ERROR);
              }
 else {
                int[] columnIndexes=new int[selectedColumns.size()];
                for (int i=0, selectedColumnsSize=selectedColumns.size(); i < selectedColumnsSize; i++) {
                  columnIndexes[i]=model.getVisibleAttributeIndex((DBDAttributeBinding)selectedColumns.get(i));
                }
                Arrays.sort(columnIndexes);
                for (int i=columnIndexes.length; i > 0; i--) {
                  model.setAttributeVisibility(model.getVisibleAttribute(columnIndexes[i - 1]),false);
                }
                controller.redrawData(true);
              }
            }
          }
);
        }
      }
    }
  }
}
