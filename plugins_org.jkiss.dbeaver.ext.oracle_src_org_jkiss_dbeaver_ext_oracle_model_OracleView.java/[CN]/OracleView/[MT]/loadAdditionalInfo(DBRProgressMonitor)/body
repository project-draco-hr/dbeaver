{
  if (!isPersisted()) {
    additionalInfo.loaded=true;
    return;
  }
  JDBCSession session=getDataSource().getDefaultContext(true).openSession(monitor,DBCExecutionPurpose.META,"Load table status");
  try {
    try (JDBCPreparedStatement dbStat=session.prepareStatement("SELECT TEXT,TYPE_TEXT,OID_TEXT,VIEW_TYPE_OWNER,VIEW_TYPE,SUPERVIEW_NAME\n" + "FROM SYS.ALL_VIEWS WHERE OWNER=? AND VIEW_NAME=?")){
      dbStat.setString(1,getContainer().getName());
      dbStat.setString(2,getName());
      try (JDBCResultSet dbResult=dbStat.executeQuery()){
        if (dbResult.next()) {
          additionalInfo.setText(JDBCUtils.safeGetString(dbResult,"TEXT"));
          additionalInfo.setTypeText(JDBCUtils.safeGetStringTrimmed(dbResult,"TYPE_TEXT"));
          additionalInfo.setOidText(JDBCUtils.safeGetStringTrimmed(dbResult,"OID_TEXT"));
          additionalInfo.typeOwner=JDBCUtils.safeGetStringTrimmed(dbResult,"VIEW_TYPE_OWNER");
          additionalInfo.typeName=JDBCUtils.safeGetStringTrimmed(dbResult,"VIEW_TYPE");
          String superViewName=JDBCUtils.safeGetString(dbResult,"SUPERVIEW_NAME");
          if (!CommonUtils.isEmpty(superViewName)) {
            additionalInfo.setSuperView(getContainer().getView(monitor,superViewName));
          }
        }
        additionalInfo.loaded=true;
      }
     }
   }
 catch (  SQLException e) {
    throw new DBCException(e,session.getDataSource());
  }
 finally {
    session.close();
  }
}
