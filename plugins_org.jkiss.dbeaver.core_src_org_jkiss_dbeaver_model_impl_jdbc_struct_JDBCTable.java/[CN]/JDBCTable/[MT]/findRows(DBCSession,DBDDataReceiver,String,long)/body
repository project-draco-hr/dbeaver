{
  try {
    List<DBDAttributeConstraint> constraints=new ArrayList<DBDAttributeConstraint>();
    for (    DBSEntityAttribute attribute : getAttributes(session.getProgressMonitor())) {
      if ((flags & FLAG_FAST_SEARCH) != 0) {
        if (!DBUtils.isIndexedAttribute(session.getProgressMonitor(),attribute)) {
          continue;
        }
      }
      DBCLogicalOperator operator;
      Object value;
switch (attribute.getDataKind()) {
case NUMERIC:
        if ((flags & FLAG_SEARCH_NUMBERS) == 0) {
          continue;
        }
      operator=DBCLogicalOperator.EQUALS;
    try {
      value=new Integer(searchString);
    }
 catch (    NumberFormatException e) {
      try {
        value=new Long(searchString);
      }
 catch (      NumberFormatException e1) {
        try {
          value=new Double(searchString);
        }
 catch (        NumberFormatException e2) {
          try {
            value=new BigDecimal(searchString);
          }
 catch (          Exception e3) {
            value=searchString;
          }
        }
      }
    }
  break;
case LOB:
if ((flags & FLAG_SEARCH_LOBS) == 0) {
  continue;
}
case STRING:
operator=DBCLogicalOperator.LIKE;
value="%" + searchString + "%";
break;
default :
continue;
}
DBDAttributeConstraint constraint=new DBDAttributeConstraint(attribute,constraints.size());
constraint.setOperator(operator);
constraint.setValue(value);
constraints.add(constraint);
}
DBDDataFilter filter=new DBDDataFilter(constraints);
filter.setAnyConstraint(true);
return readData(session,dataReceiver,filter,-1,-1,0);
}
 catch (DBException e) {
throw new DBCException("Error finding rows",e);
}
}
