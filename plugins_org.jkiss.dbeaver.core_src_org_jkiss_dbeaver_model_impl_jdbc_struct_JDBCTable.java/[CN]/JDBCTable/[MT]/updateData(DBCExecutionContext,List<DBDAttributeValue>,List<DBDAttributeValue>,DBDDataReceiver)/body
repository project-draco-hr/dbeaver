{
  readRequiredMeta(context.getProgressMonitor());
  StringBuilder query=new StringBuilder();
  query.append("UPDATE ").append(getFullQualifiedName()).append(" SET ");
  boolean hasKey=false;
  for (  DBDAttributeValue attribute : updateAttributes) {
    if (hasKey)     query.append(",");
    hasKey=true;
    query.append(DBUtils.getQuotedIdentifier(getDataSource(),attribute.getAttribute().getName())).append("=?");
  }
  query.append(" WHERE ");
  hasKey=false;
  for (  DBDAttributeValue attribute : keyAttributes) {
    if (hasKey)     query.append(" AND ");
    hasKey=true;
    query.append(DBUtils.getQuotedIdentifier(getDataSource(),attribute.getAttribute().getName())).append("=?");
  }
  DBCStatement dbStat=context.prepareStatement(DBCStatementType.QUERY,query.toString(),false,false,keysReceiver != null);
  try {
    dbStat.setDataContainer(this);
    List<DBDAttributeValue> allAttribute=new ArrayList<DBDAttributeValue>(updateAttributes.size() + keyAttributes.size());
    allAttribute.addAll(updateAttributes);
    allAttribute.addAll(keyAttributes);
    for (int i=0; i < allAttribute.size(); i++) {
      DBDAttributeValue attribute=allAttribute.get(i);
      DBDValueHandler valueHandler=DBUtils.findValueHandler(context,attribute.getAttribute());
      valueHandler.bindValueObject(context,dbStat,attribute.getAttribute(),i,attribute.getValue());
    }
    dbStat.executeStatement();
    long rowCount=dbStat.getUpdateRowCount();
    if (keysReceiver != null) {
      readKeys(context,dbStat,keysReceiver);
    }
    return rowCount;
  }
  finally {
    dbStat.close();
  }
}
