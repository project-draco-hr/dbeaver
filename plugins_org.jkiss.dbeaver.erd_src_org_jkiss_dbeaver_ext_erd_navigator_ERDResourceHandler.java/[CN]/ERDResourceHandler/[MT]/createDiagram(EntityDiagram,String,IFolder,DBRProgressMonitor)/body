{
  if (folder == null) {
    try {
      folder=getDiagramsFolder(DBeaverCore.getInstance().getProjectRegistry().getActiveProject(),true);
    }
 catch (    CoreException e) {
      throw new DBException("Can't obtain folder for diagram",e);
    }
  }
  if (folder == null) {
    throw new DBException("Can't detect folder for diagram");
  }
  final IFile file=ContentUtils.getUniqueFile(folder,CommonUtils.escapeFileName(title),ERD_EXT);
  try {
    DBRRunnableWithProgress runnable=new DBRRunnableWithProgress(){
      @Override public void run(      DBRProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
        try {
          EntityDiagram newDiagram=copyFrom == null ? new EntityDiagram(null,"<Diagram>") : copyFrom.copy();
          newDiagram.setName(title);
          newDiagram.setLayoutManualAllowed(true);
          newDiagram.setLayoutManualDesired(true);
          ByteArrayOutputStream buffer=new ByteArrayOutputStream();
          DiagramLoader.save(null,newDiagram,false,buffer);
          InputStream data=new ByteArrayInputStream(buffer.toByteArray());
          file.create(data,true,monitor.getNestedMonitor());
        }
 catch (        Exception e) {
          throw new InvocationTargetException(e);
        }
      }
    }
;
    if (monitor == null) {
      DBeaverUI.runInProgressService(runnable);
    }
 else {
      runnable.run(monitor);
    }
  }
 catch (  InvocationTargetException e) {
    throw new DBException(e.getTargetException());
  }
catch (  InterruptedException e) {
  }
  return file;
}
