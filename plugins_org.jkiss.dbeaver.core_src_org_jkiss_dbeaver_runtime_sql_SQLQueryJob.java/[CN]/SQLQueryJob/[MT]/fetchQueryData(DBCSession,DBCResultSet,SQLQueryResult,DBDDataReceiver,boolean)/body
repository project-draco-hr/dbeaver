{
  if (dataReceiver == null) {
    return false;
  }
  if (resultSet == null) {
    return false;
  }
  boolean keepCursor=keepStatementOpen();
  if (keepCursor) {
    curResultSets.add(resultSet);
  }
  DBRProgressMonitor monitor=session.getProgressMonitor();
  monitor.subTask("Fetch result set");
  long rowCount=0;
  dataReceiver.fetchStart(session,resultSet,rsOffset,rsMaxRows);
  try {
    String sourceName=null;
    if (result != null) {
      final String queryTitle=result.getStatement().getQueryTitle();
      if (!CommonUtils.isEmpty(queryTitle)) {
        sourceName=queryTitle;
      }
 else {
        DBCResultSetMetaData rsMeta=resultSet.getMeta();
        for (        DBCAttributeMetaData attr : rsMeta.getAttributes()) {
          String entityName=attr.getEntityName();
          if (!CommonUtils.isEmpty(entityName)) {
            if (sourceName == null) {
              sourceName=entityName;
            }
 else             if (!sourceName.equals(entityName)) {
              sourceName+="(+)";
              break;
            }
          }
        }
      }
      if (CommonUtils.isEmpty(sourceName)) {
        sourceName="Result";
      }
      result.setResultSetName(sourceName);
    }
    long fetchStartTime=System.currentTimeMillis();
    while ((!hasLimits() || rowCount < rsMaxRows) && resultSet.nextRow()) {
      if (monitor.isCanceled()) {
        break;
      }
      rowCount++;
      if (rowCount > 0 && rowCount % 100 == 0) {
        monitor.subTask(rowCount + " rows fetched");
        monitor.worked(100);
      }
      dataReceiver.fetchRow(session,resultSet);
    }
    if (updateStatistics) {
      statistics.addFetchTime(System.currentTimeMillis() - fetchStartTime);
    }
  }
  finally {
    if (!keepCursor) {
      try {
        resultSet.close();
      }
 catch (      Throwable e) {
        log.error("Error while closing resultset",e);
      }
    }
    try {
      dataReceiver.fetchEnd(session,resultSet);
    }
 catch (    Throwable e) {
      log.error("Error while handling end of result set fetch",e);
    }
    dataReceiver.close();
  }
  if (result != null) {
    result.setRowCount(rowCount);
  }
  if (updateStatistics) {
    statistics.setRowsFetched(rowCount);
  }
  monitor.subTask(rowCount + " rows fetched");
  return true;
}
