{
  int depth=attr.getLevel();
  int rootIndex;
  if (depth == 0) {
    rootIndex=attr.getAttributeIndex();
  }
 else {
    rootIndex=attr.getTopParent().getAttributeIndex();
  }
  Object rootValue=row.values[rootIndex];
  Object ownerValue=depth > 0 ? rootValue : null;
{
    for (int i=0; i < depth; i++) {
      if (ownerValue == null) {
        log.warn("Null owner value");
        return false;
      }
      if (i == depth - 1) {
        break;
      }
      DBDAttributeBinding ownerAttr=attr.getParent(depth - i - 1);
      if (ownerValue instanceof DBDStructure) {
        try {
          ownerValue=((DBDStructure)ownerValue).getAttributeValue(ownerAttr.getAttribute());
        }
 catch (        DBCException e) {
          log.warn("Error getting field [" + ownerAttr.getAttributeName() + "] value",e);
          return false;
        }
      }
    }
  }
  if (ownerValue != null || (value instanceof DBDValue && value == rootValue) || !CommonUtils.equalObjects(rootValue,value)) {
    if (ownerValue == null && DBUtils.isNullValue(rootValue) && DBUtils.isNullValue(value)) {
      return false;
    }
    if (row.state == RowData.STATE_NORMAL) {
      boolean cellWasEdited=row.oldValues != null && row.changedValues != null && row.changedValues[rootIndex];
      Object oldOldValue=!cellWasEdited ? null : row.oldValues[rootIndex];
      if (cellWasEdited && !CommonUtils.equalObjects(rootValue,oldOldValue)) {
        releaseValue(rootValue);
      }
 else {
        if (row.oldValues == null || row.changedValues == null) {
          row.oldValues=new Object[row.values.length];
          row.changedValues=new boolean[row.values.length];
        }
        row.oldValues[rootIndex]=rootValue;
        row.changedValues[rootIndex]=true;
      }
      if (row.state == RowData.STATE_NORMAL && !cellWasEdited) {
        changesCount++;
      }
    }
    if (ownerValue != null) {
      if (ownerValue instanceof DBDStructure) {
        try {
          ((DBDStructure)ownerValue).setAttributeValue(attr.getAttribute(),value);
        }
 catch (        DBCException e) {
          log.error("Error setting [" + attr.getAttributeName() + "] value",e);
        }
      }
 else {
        log.warn("Value [" + ownerValue + "] edit is not supported");
      }
    }
 else {
      row.values[rootIndex]=value;
    }
    return true;
  }
  return false;
}
