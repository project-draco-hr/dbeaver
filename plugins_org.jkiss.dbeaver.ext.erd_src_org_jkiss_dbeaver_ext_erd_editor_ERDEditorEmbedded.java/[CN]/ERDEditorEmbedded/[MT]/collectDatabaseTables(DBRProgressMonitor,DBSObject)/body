{
  Set<DBSEntity> result=new LinkedHashSet<>();
  if (root instanceof DBSObjectContainer) {
    monitor.beginTask("Load '" + root.getName() + "' content",3);
    DBSObjectContainer objectContainer=(DBSObjectContainer)root;
    try {
      objectContainer.cacheStructure(monitor,DBSObjectContainer.STRUCT_ENTITIES | DBSObjectContainer.STRUCT_ASSOCIATIONS | DBSObjectContainer.STRUCT_ATTRIBUTES);
    }
 catch (    DBException e) {
      log.error("Error caching structure",e);
    }
    Collection<? extends DBSObject> entities=objectContainer.getChildren(monitor);
    if (entities != null) {
      Class<? extends DBSObject> childType=objectContainer.getChildType(monitor);
      DBSObjectFilter objectFilter=objectContainer.getDataSource().getContainer().getObjectFilter(childType,objectContainer,true);
      for (      DBSObject entity : entities) {
        if (entity instanceof DBSEntity) {
          if (objectFilter != null && objectFilter.isEnabled() && !objectFilter.matches(entity.getName())) {
            continue;
          }
          final DBSEntity entity1=(DBSEntity)entity;
          if (entity1.getEntityType() == DBSEntityType.TABLE || entity1.getEntityType() == DBSEntityType.CLASS || entity1.getEntityType() == DBSEntityType.VIRTUAL_ENTITY) {
            result.add(entity1);
          }
        }
      }
    }
    monitor.done();
  }
 else   if (root instanceof DBSEntity) {
    monitor.beginTask("Load '" + root.getName() + "' relations",3);
    DBSEntity rootTable=(DBSEntity)root;
    result.add(rootTable);
    try {
      monitor.subTask("Read foreign keys");
      Collection<? extends DBSEntityAssociation> fks=rootTable.getAssociations(monitor);
      if (fks != null) {
        for (        DBSEntityAssociation fk : fks) {
          result.add(fk.getAssociatedEntity());
        }
      }
      monitor.worked(1);
    }
 catch (    DBException e) {
      log.warn("Can't load table foreign keys",e);
    }
    if (monitor.isCanceled()) {
      return result;
    }
    try {
      monitor.subTask("Read references");
      Collection<? extends DBSEntityAssociation> refs=rootTable.getReferences(monitor);
      if (refs != null) {
        for (        DBSEntityAssociation ref : refs) {
          result.add(ref.getParentObject());
        }
      }
      monitor.worked(1);
    }
 catch (    DBException e) {
      log.warn("Can't load table references",e);
    }
    if (monitor.isCanceled()) {
      return result;
    }
    try {
      monitor.subTask("Read associations");
      List<DBSEntity> secondLevelEntities=new ArrayList<>();
      for (      DBSEntity entity : result) {
        if (entity != rootTable && entity.getEntityType() == DBSEntityType.ASSOCIATION) {
          Collection<? extends DBSEntityAssociation> fks=entity.getAssociations(monitor);
          if (fks != null) {
            for (            DBSEntityAssociation association : fks) {
              if (association.getConstraintType() != DBSEntityConstraintType.INHERITANCE) {
                secondLevelEntities.add(association.getAssociatedEntity());
              }
            }
          }
        }
      }
      result.addAll(secondLevelEntities);
      monitor.worked(1);
    }
 catch (    DBException e) {
      log.warn("Can't load table references",e);
    }
    monitor.done();
  }
  return result;
}
