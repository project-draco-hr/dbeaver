{
switch (localName) {
case TAG_CONTAINER:
    if (curContainer == null) {
      curContainer=DBVModel.this;
    }
 else {
      DBVContainer container=new DBVContainer(curContainer,atts.getValue(ATTR_NAME));
      curContainer.addContainer(container);
      curContainer=container;
    }
  break;
case TAG_ENTITY:
curEntity=new DBVEntity(curContainer,atts.getValue(ATTR_NAME),atts.getValue(ATTR_DESCRIPTION));
curContainer.addEntity(curEntity);
break;
case TAG_PROPERTY:
if (curEntity != null) {
curEntity.setProperty(atts.getValue(ATTR_NAME),atts.getValue(ATTR_VALUE));
}
break;
case TAG_CONSTRAINT:
if (curEntity != null) {
curConstraint=new DBVEntityConstraint(curEntity,DBSEntityConstraintType.VIRTUAL_KEY,atts.getValue(ATTR_NAME));
curEntity.addConstraint(curConstraint);
}
break;
case TAG_ATTRIBUTE:
if (curConstraint != null) {
curConstraint.addAttribute(atts.getValue(ATTR_NAME));
}
 else if (curAttribute != null) {
DBVEntityAttribute childAttribute=new DBVEntityAttribute(curEntity,curAttribute,atts.getValue(ATTR_NAME));
curAttribute.addChild(childAttribute);
curAttribute=childAttribute;
}
 else if (curEntity != null) {
curAttribute=new DBVEntityAttribute(curEntity,null,atts.getValue(ATTR_NAME));
curEntity.addVirtualAttribute(curAttribute);
}
break;
case TAG_TRANSFORM:
curTransformSettings=new DBVTransformSettings();
if (curAttribute != null) {
curAttribute.setTransformSettings(curTransformSettings);
}
 else if (curEntity != null) {
curEntity.setTransformSettings(curTransformSettings);
}
break;
case TAG_INCLUDE:
case TAG_EXCLUDE:
String transformerId=atts.getValue(ATTR_ID);
if (curTransformSettings != null && !CommonUtils.isEmpty(transformerId)) {
final DBDAttributeTransformerDescriptor transformer=dataSourceContainer.getApplication().getValueHandlerRegistry().getTransformer(transformerId);
if (transformer == null) {
log.warn("Transformer '" + transformerId + "' not found");
}
 else {
curTransformSettings.enableTransformer(transformer,TAG_INCLUDE.equals(localName));
}
}
break;
case TAG_COLOR:
if (curEntity != null) {
try {
curColor=new DBVColorOverride(atts.getValue(ATTR_NAME),DBCLogicalOperator.valueOf(atts.getValue(ATTR_OPERATOR)),null,atts.getValue(ATTR_FOREGROUND),atts.getValue(ATTR_BACKGROUND));
curEntity.addColorOverride(curColor);
}
 catch (Throwable e) {
log.warn("Error reading color settings",e);
}
}
break;
case TAG_VALUE:
if (curColor != null) {
colorValue=true;
}
break;
}
}
