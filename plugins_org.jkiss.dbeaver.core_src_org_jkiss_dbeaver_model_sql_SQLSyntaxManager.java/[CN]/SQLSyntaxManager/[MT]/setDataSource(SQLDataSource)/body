{
  this.unassigned=dataSource == null;
  this.statementDelimiters.clear();
  if (dataSource == null) {
    sqlDialect=new BasicSQLDialect();
    quoteSymbol=null;
    structSeparator=SQLConstants.STRUCT_SEPARATOR;
    catalogSeparator=String.valueOf(SQLConstants.STRUCT_SEPARATOR);
    escapeChar='\\';
    statementDelimiters.add(SQLConstants.DEFAULT_STATEMENT_DELIMITER);
  }
 else {
    sqlDialect=dataSource.getSQLDialect();
    quoteSymbol=sqlDialect.getIdentifierQuoteString();
    structSeparator=sqlDialect.getStructSeparator();
    catalogSeparator=sqlDialect.getCatalogSeparator();
    sqlDialect.getSearchStringEscape();
    escapeChar='\\';
    if (!dataSource.getContainer().getPreferenceStore().getBoolean(DBeaverPreferences.SCRIPT_IGNORE_NATIVE_DELIMITER)) {
      statementDelimiters.add(sqlDialect.getScriptDelimiter().toLowerCase());
    }
    String extraDelimiters=dataSource.getContainer().getPreferenceStore().getString(DBeaverPreferences.SCRIPT_STATEMENT_DELIMITER);
    StringTokenizer st=new StringTokenizer(extraDelimiters," \t,");
    while (st.hasMoreTokens()) {
      statementDelimiters.add(st.nextToken());
    }
  }
}
