{
  getShell().setText(CoreMessages.controls_resultset_filter_title);
  getShell().setImage(DBIcon.FILTER.getImage());
  Composite composite=(Composite)super.createDialogArea(parent);
  TabFolder tabFolder=new TabFolder(composite,SWT.NONE);
  tabFolder.setLayoutData(new GridData(GridData.FILL_BOTH));
  TableColumn criteriaColumn;
{
    Composite columnsGroup=UIUtils.createPlaceholder(tabFolder,1);
    columnsViewer=CheckboxTableViewer.newCheckList(columnsGroup,SWT.SINGLE | SWT.FULL_SELECTION | SWT.CHECK);
    columnsViewer.setContentProvider(new ListContentProvider());
    columnsViewer.setLabelProvider(new ColumnLabelProvider());
    columnsViewer.setCheckStateProvider(new CheckStateProvider());
    final Table columnsTable=columnsViewer.getTable();
    GridData gd=new GridData(GridData.FILL_BOTH);
    gd.heightHint=300;
    columnsTable.setLayoutData(gd);
    columnsTable.setHeaderVisible(true);
    columnsTable.setLinesVisible(true);
    UIUtils.createTableColumn(columnsTable,SWT.LEFT,CoreMessages.controls_resultset_filter_column_name);
    UIUtils.createTableColumn(columnsTable,SWT.LEFT,"???");
    UIUtils.createTableColumn(columnsTable,SWT.LEFT,CoreMessages.controls_resultset_filter_column_order);
    criteriaColumn=UIUtils.createTableColumn(columnsTable,SWT.LEFT,CoreMessages.controls_resultset_filter_column_criteria);
    final TableEditor tableEditor=new TableEditor(columnsTable);
    tableEditor.horizontalAlignment=SWT.CENTER;
    tableEditor.verticalAlignment=SWT.TOP;
    tableEditor.grabHorizontal=true;
    tableEditor.minimumWidth=50;
    columnsViewer.addCheckStateListener(new ICheckStateListener(){
      @Override public void checkStateChanged(      CheckStateChangedEvent event){
        dataFilter.getConstraint((DBDAttributeBinding)event.getElement()).setVisible(event.getChecked());
      }
    }
);
    ColumnsMouseListener mouseListener=new ColumnsMouseListener(tableEditor,columnsTable);
    columnsTable.addMouseListener(mouseListener);
    columnsTable.addTraverseListener(new UIUtils.ColumnTextEditorTraverseListener(columnsTable,tableEditor,3,mouseListener));
{
      Composite controlGroup=new Composite(columnsGroup,SWT.NONE);
      controlGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
      controlGroup.setLayout(new FillLayout());
      final Button moveUpButton=UIUtils.createPushButton(controlGroup,"Move Up",null);
      moveUpButton.addSelectionListener(new SelectionAdapter(){
        @Override public void widgetSelected(        SelectionEvent e){
        }
      }
);
      moveUpButton.setEnabled(false);
      final Button moveDownButton=UIUtils.createPushButton(controlGroup,"Move Down",null);
      moveDownButton.addSelectionListener(new SelectionAdapter(){
        @Override public void widgetSelected(        SelectionEvent e){
        }
      }
);
      moveDownButton.setEnabled(false);
      Button showAllButton=UIUtils.createPushButton(controlGroup,"Show All",null);
      Button showNoneButton=UIUtils.createPushButton(controlGroup,"Show None",null);
      Button resetButton=UIUtils.createPushButton(controlGroup,"Reset",null);
      columnsViewer.addSelectionChangedListener(new ISelectionChangedListener(){
        @Override public void selectionChanged(        SelectionChangedEvent event){
          int selectionIndex=columnsViewer.getTable().getSelectionIndex();
          moveUpButton.setEnabled(selectionIndex > 0);
          moveDownButton.setEnabled(selectionIndex >= 0 && selectionIndex < columnsViewer.getTable().getItemCount() - 1);
        }
      }
);
    }
    TabItem libsTab=new TabItem(tabFolder,SWT.NONE);
    libsTab.setText(CoreMessages.controls_resultset_filter_group_columns);
    libsTab.setToolTipText("Set criteria and order for individual column(s)");
    libsTab.setControl(columnsGroup);
  }
  createCustomFilters(tabFolder);
  columnsViewer.setInput(resultSetViewer.getModel().getColumns());
  UIUtils.packColumns(columnsViewer.getTable());
  if (criteriaColumn.getWidth() < 200) {
    criteriaColumn.setWidth(200);
  }
  if (!resultSetViewer.supportsDataFilter()) {
    Label warnLabel=new Label(composite,SWT.NONE);
    warnLabel.setText(CoreMessages.controls_resultset_filter_warning_custom_order_disabled);
    warnLabel.setForeground(parent.getDisplay().getSystemColor(SWT.COLOR_RED));
  }
  return parent;
}
