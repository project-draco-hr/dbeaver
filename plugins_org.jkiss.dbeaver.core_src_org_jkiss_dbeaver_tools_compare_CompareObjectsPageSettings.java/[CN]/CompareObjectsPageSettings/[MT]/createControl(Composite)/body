{
  initializeDialogUnits(parent);
  Composite composite=new Composite(parent,SWT.NULL);
  GridLayout gl=new GridLayout();
  gl.marginHeight=0;
  gl.marginWidth=0;
  composite.setLayout(gl);
  composite.setLayoutData(new GridData(GridData.FILL_BOTH));
  final CompareObjectsSettings settings=getWizard().getSettings();
{
    Group sourceSettings=new Group(composite,SWT.NONE);
    sourceSettings.setText("Objects");
    gl=new GridLayout(1,false);
    sourceSettings.setLayout(gl);
    sourceSettings.setLayoutData(new GridData(GridData.FILL_BOTH));
    nodesTable=new Table(sourceSettings,SWT.SINGLE | SWT.FULL_SELECTION | SWT.BORDER);
    nodesTable.setLayoutData(new GridData(GridData.FILL_BOTH));
    nodesTable.setHeaderVisible(true);
    UIUtils.createTableColumn(nodesTable,SWT.LEFT,"Name");
    UIUtils.createTableColumn(nodesTable,SWT.LEFT,"Type");
    UIUtils.createTableColumn(nodesTable,SWT.LEFT,"Full qualified name");
    for (    DBNDatabaseNode node : settings.getNodes()) {
      TableItem item=new TableItem(nodesTable,SWT.NONE);
      item.setImage(DBeaverIcons.getImage(node.getNodeIconDefault()));
      item.setText(0,node.getNodeName());
      item.setText(1,node.getNodeType());
      item.setText(2,node.getNodeFullName());
    }
  }
{
    Group compareSettings=new Group(composite,SWT.NONE);
    compareSettings.setText("Compare settings");
    compareSettings.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    compareSettings.setLayout(new GridLayout(1,false));
    skipSystemObjects=UIUtils.createCheckbox(compareSettings,"Skip system objects",settings.isSkipSystemObjects());
    skipSystemObjects.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        settings.setSkipSystemObjects(skipSystemObjects.getSelection());
      }
    }
);
    compareLazyProperties=UIUtils.createCheckbox(compareSettings,"Compare expensive properties",settings.isCompareLazyProperties());
    compareLazyProperties.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        settings.setCompareLazyProperties(compareLazyProperties.getSelection());
      }
    }
);
    compareOnlyStructure=UIUtils.createCheckbox(compareSettings,"Compare only structure (ignore properties)",settings.isCompareOnlyStructure());
    compareOnlyStructure.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        settings.setCompareOnlyStructure(compareOnlyStructure.getSelection());
      }
    }
);
  }
  setControl(composite);
}
