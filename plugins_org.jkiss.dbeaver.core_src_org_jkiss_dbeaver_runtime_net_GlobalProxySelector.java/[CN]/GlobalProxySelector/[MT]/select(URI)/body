{
  String scheme=uri.getScheme();
  if (CommonUtils.isEmpty(scheme)) {
    return parent.select(uri);
  }
  if (scheme.startsWith("http")) {
  }
  if (SocksConstants.SOCKET_SCHEME.equals(scheme)) {
    DBCExecutionContext activeContext=DBExecUtils.findConnectionContext(uri.getHost(),uri.getPort(),uri.getPath());
    if (activeContext != null) {
      List<Proxy> proxies=null;
      DBPDataSourceContainer container=activeContext.getDataSource().getContainer();
      for (      DBWHandlerConfiguration networkHandler : container.getConnectionConfiguration().getDeclaredHandlers()) {
        if (networkHandler.isEnabled() && networkHandler.getType() == DBWHandlerType.PROXY) {
          Map<String,String> proxyProps=networkHandler.getProperties();
          String proxyHost=proxyProps.get(SocksConstants.PROP_HOST);
          String proxyPort=proxyProps.get(SocksConstants.PROP_PORT);
          if (!CommonUtils.isEmpty(proxyHost)) {
            int portNumber=SocksConstants.DEFAULT_SOCKS_PORT;
            if (!CommonUtils.isEmpty(proxyPort)) {
              try {
                portNumber=Integer.parseInt(proxyPort);
              }
 catch (              NumberFormatException e) {
                log.warn("Bad proxy port number",e);
              }
            }
            InetSocketAddress proxyAddr=new InetSocketAddress(proxyHost,portNumber);
            Proxy proxy=new Proxy(Proxy.Type.SOCKS,proxyAddr);
            if (proxies == null) {
              proxies=new ArrayList<>();
            }
            proxies.add(proxy);
            log.debug("Use SOCKS proxy [" + proxyAddr + "]");
          }
        }
      }
      if (proxies != null) {
        return proxies;
      }
    }
  }
  return parent.select(uri);
}
