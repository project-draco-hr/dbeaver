{
  model.setUpdateInProgress(true);
  updateStats=new DBCStatistics();
  insertStats=new DBCStatistics();
  deleteStats=new DBCStatistics();
  try {
    error=executeStatements(monitor);
  }
  finally {
    model.setUpdateInProgress(false);
  }
  if (!generateScript) {
    DBeaverUI.syncExec(new Runnable(){
      @Override public void run(){
        boolean rowsChanged=false;
        if (DataUpdaterJob.this.autocommit || error == null) {
          rowsChanged=reflectChanges();
        }
        if (!viewer.getControl().isDisposed()) {
          viewer.redrawData(rowsChanged);
          viewer.updateEditControls();
          if (error == null) {
            viewer.setStatus(NLS.bind(CoreMessages.controls_resultset_viewer_status_inserted_,new Object[]{DataUpdaterJob.this.insertStats.getRowsUpdated(),DataUpdaterJob.this.deleteStats.getRowsUpdated(),DataUpdaterJob.this.updateStats.getRowsUpdated()}));
          }
 else {
            UIUtils.showErrorDialog(viewer.getSite().getShell(),"Data error","Error synchronizing data with database",error);
            viewer.setStatus(GeneralUtils.getFirstMessage(error),true);
          }
        }
        viewer.fireResultSetChange();
      }
    }
);
    if (this.listener != null) {
      this.listener.onUpdate(error == null);
    }
  }
  return Status.OK_STATUS;
}
