{
  String pomURL=localVersion.getArtifact().getFileURL(localVersion.getVersion(),MavenArtifact.FILE_POM);
  monitor.subTask("Load POM " + localVersion);
  Document pomDocument;
  try (InputStream mdStream=RuntimeUtils.openConnectionStream(pomURL)){
    pomDocument=XMLUtils.parseDocument(mdStream);
  }
 catch (  XMLException e) {
    throw new IOException("Error parsing POM",e);
  }
  Element root=pomDocument.getDocumentElement();
  name=XMLUtils.getChildElementBody(root,"name");
  url=XMLUtils.getChildElementBody(root,"url");
  version=XMLUtils.getChildElementBody(root,"version");
  description=XMLUtils.getChildElementBody(root,"description");
{
    Element parentElement=XMLUtils.getChildElement(root,"parent");
    if (parentElement != null) {
      String parentGroupId=XMLUtils.getChildElementBody(parentElement,"groupId");
      String parentArtifactId=XMLUtils.getChildElementBody(parentElement,"artifactId");
      String parentVersion=XMLUtils.getChildElementBody(parentElement,"version");
      if (parentGroupId == null || parentArtifactId == null || parentVersion == null) {
        log.error("Broken parent reference: " + parentGroupId + ":"+ parentArtifactId+ ":"+ parentVersion);
      }
 else {
        parentReference=new MavenArtifactReference(parentGroupId,parentArtifactId,parentVersion);
        if (this.version == null) {
          this.version=parentReference.getVersion();
        }
        MavenArtifact parentArtifact=MavenRegistry.getInstance().findArtifact(parentReference);
        if (parentArtifact == null) {
          log.error("Artifact [" + this + "] parent ["+ parentReference+ "] not found");
        }
 else {
          parent=parentArtifact.resolveVersion(monitor,parentReference.getVersion(),false);
        }
      }
    }
  }
{
    Element propsElement=XMLUtils.getChildElement(root,"properties");
    if (propsElement != null) {
      for (      Element prop : XMLUtils.getChildElementList(propsElement)) {
        properties.put(prop.getTagName(),XMLUtils.getElementBody(prop));
      }
    }
  }
{
    Element licensesElement=XMLUtils.getChildElement(root,"licenses");
    if (licensesElement != null) {
      for (      Element prop : XMLUtils.getChildElementList(licensesElement,"license")) {
        licenses.add(new MavenArtifactLicense(XMLUtils.getChildElementBody(prop,"name"),XMLUtils.getChildElementBody(prop,"url")));
      }
    }
  }
{
    Element dmElement=XMLUtils.getChildElement(root,"dependencyManagement");
    if (dmElement != null) {
      dependencyManagement=parseDependencies(monitor,dmElement);
    }
    dependencies=parseDependencies(monitor,root);
  }
  monitor.worked(1);
}
