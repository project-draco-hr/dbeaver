{
  setName(JDBCUtils.safeGetString(dbResult,"attname"));
  setOrdinalPosition(JDBCUtils.safeGetInt(dbResult,"attnum"));
  setRequired(JDBCUtils.safeGetBoolean(dbResult,"attnotnull"));
  final int typeId=JDBCUtils.safeGetInt(dbResult,"atttypid");
  dataType=getTable().getDatabase().getDataType(typeId);
  if (dataType == null) {
    throw new DBException("Attribute data type '" + typeId + "' not found");
  }
  setTypeName(dataType.getTypeName());
  setValueType(dataType.getTypeID());
  setDefaultValue(JDBCUtils.safeGetString(dbResult,"def_value"));
  int typeMod=JDBCUtils.safeGetInt(dbResult,"atttypmod");
  int maxLength=PostgreUtils.getAttributePrecision(typeId,typeMod);
  if (maxLength <= 0) {
    maxLength=PostgreUtils.getDisplaySize(typeId,typeMod);
  }
  if (maxLength >= 0) {
    setMaxLength(maxLength);
  }
  setPrecision(maxLength);
  setScale(PostgreUtils.getScale(typeId,typeMod));
  this.description=JDBCUtils.safeGetString(dbResult,"description");
  this.arrayDim=JDBCUtils.safeGetInt(dbResult,"attndims");
  this.inheritorsCount=JDBCUtils.safeGetInt(dbResult,"attinhcount");
  setPersisted(true);
}
