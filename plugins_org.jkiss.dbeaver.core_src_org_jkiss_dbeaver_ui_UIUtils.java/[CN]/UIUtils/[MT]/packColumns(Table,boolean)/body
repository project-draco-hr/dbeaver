{
  table.setRedraw(false);
  try {
    int totalWidth=0;
    final TableColumn[] columns=table.getColumns();
    for (    TableColumn column : columns) {
      column.pack();
      totalWidth+=column.getWidth();
    }
    final Rectangle clientArea=table.getBounds();
    if (clientArea.width > 0 && totalWidth > clientArea.width) {
      for (      TableColumn column : columns) {
        int colWidth=column.getWidth();
        if (colWidth > totalWidth / 3) {
          column.setWidth(totalWidth / 3);
          totalWidth-=colWidth;
          totalWidth+=column.getWidth();
        }
      }
      int extraSpace=totalWidth - clientArea.width;
      GC gc=new GC(table);
      try {
        for (        TableColumn tc : columns) {
          double ratio=(double)tc.getWidth() / totalWidth;
          int newWidth=(int)(tc.getWidth() - extraSpace * ratio);
          int minWidth=gc.stringExtent(tc.getText()).x;
          minWidth+=5;
          if (newWidth < minWidth) {
            newWidth=minWidth;
          }
          tc.setWidth(newWidth);
        }
      }
  finally {
        gc.dispose();
      }
    }
    if (fit && totalWidth < clientArea.width) {
      int sbWidth=0;
      if (table.getVerticalBar() != null) {
        sbWidth=table.getVerticalBar().getSize().x;
      }
      if (columns.length > 0) {
        float extraSpace=(clientArea.width - totalWidth - sbWidth) / columns.length;
        for (        TableColumn tc : columns) {
          tc.setWidth((int)(tc.getWidth() + extraSpace));
        }
      }
    }
  }
  finally {
    table.setRedraw(true);
  }
}
