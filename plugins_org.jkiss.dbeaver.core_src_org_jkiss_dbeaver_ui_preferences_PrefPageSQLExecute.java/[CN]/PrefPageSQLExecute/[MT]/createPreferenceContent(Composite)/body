{
  Composite composite=UIUtils.createPlaceholder(parent,1);
{
    Composite commonGroup=UIUtils.createControlGroup(composite,CoreMessages.pref_page_sql_editor_group_common,2,GridData.FILL_HORIZONTAL,0);
{
      invalidateBeforeExecuteCheck=UIUtils.createLabelCheckbox(commonGroup,CoreMessages.pref_page_sql_editor_label_invalidate_before_execute,false);
      UIUtils.createControlLabel(commonGroup,CoreMessages.pref_page_sql_editor_label_sql_timeout);
      executeTimeoutText=new Spinner(commonGroup,SWT.BORDER);
      executeTimeoutText.setSelection(0);
      executeTimeoutText.setDigits(0);
      executeTimeoutText.setIncrement(1);
      executeTimeoutText.setMinimum(1);
      executeTimeoutText.setMaximum(100000);
    }
  }
{
    Composite paramsGroup=UIUtils.createControlGroup(composite,"Parameters",2,GridData.FILL_HORIZONTAL,0);
    enableSQLParameters=UIUtils.createLabelCheckbox(paramsGroup,CoreMessages.pref_page_sql_editor_checkbox_enable_sql_parameters,true);
    enableSQLAnonymousParameters=UIUtils.createLabelCheckbox(paramsGroup,CoreMessages.pref_page_sql_editor_checkbox_enable_sql_anonymous_parameters,false);
    anonymousParameterMarkText=UIUtils.createLabelText(paramsGroup,CoreMessages.pref_page_sql_editor_text_anonymous_parameter_mark,"",SWT.BORDER,new GridData(32,SWT.DEFAULT));
    anonymousParameterMarkText.setTextLimit(1);
  }
{
    Composite scriptsGroup=UIUtils.createControlGroup(composite,CoreMessages.pref_page_sql_editor_group_scripts,2,GridData.FILL_HORIZONTAL,0);
{
      UIUtils.createControlLabel(scriptsGroup,CoreMessages.pref_page_sql_editor_label_commit_type);
      commitTypeCombo=new Combo(scriptsGroup,SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY);
      commitTypeCombo.add(CoreMessages.pref_page_sql_editor_combo_item_script_end,SQLScriptCommitType.AT_END.ordinal());
      commitTypeCombo.add(CoreMessages.pref_page_sql_editor_combo_item_each_line_autocommit,SQLScriptCommitType.AUTOCOMMIT.ordinal());
      commitTypeCombo.add(CoreMessages.pref_page_sql_editor_combo_item_each_spec_line,SQLScriptCommitType.NLINES.ordinal());
      commitTypeCombo.add(CoreMessages.pref_page_sql_editor_combo_item_no_commit,SQLScriptCommitType.NO_COMMIT.ordinal());
    }
{
      UIUtils.createControlLabel(scriptsGroup,CoreMessages.pref_page_sql_editor_label_commit_after_line);
      commitLinesText=new Spinner(scriptsGroup,SWT.BORDER);
      commitLinesText.setSelection(0);
      commitLinesText.setDigits(0);
      commitLinesText.setIncrement(1);
      commitLinesText.setMinimum(1);
      commitLinesText.setMaximum(1024 * 1024);
    }
{
      UIUtils.createControlLabel(scriptsGroup,CoreMessages.pref_page_sql_editor_label_error_handling);
      errorHandlingCombo=new Combo(scriptsGroup,SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY);
      errorHandlingCombo.add(CoreMessages.pref_page_sql_editor_combo_item_stop_rollback,SQLScriptErrorHandling.STOP_ROLLBACK.ordinal());
      errorHandlingCombo.add(CoreMessages.pref_page_sql_editor_combo_item_stop_commit,SQLScriptErrorHandling.STOP_COMMIT.ordinal());
      errorHandlingCombo.add(CoreMessages.pref_page_sql_editor_combo_item_ignore,SQLScriptErrorHandling.IGNORE.ordinal());
    }
    fetchResultSetsCheck=UIUtils.createLabelCheckbox(scriptsGroup,CoreMessages.pref_page_sql_editor_checkbox_fetch_resultsets,false);
    statementDelimiterText=UIUtils.createLabelText(scriptsGroup,CoreMessages.pref_page_sql_editor_text_statement_delimiter,"",SWT.BORDER,new GridData(32,SWT.DEFAULT));
    statementDelimiterText.setTextLimit(1);
    ignoreNativeDelimiter=UIUtils.createLabelCheckbox(scriptsGroup,CoreMessages.pref_page_sql_editor_checkbox_ignore_native_delimiter,false);
  }
  return composite;
}
