{
  Composite composite=UIUtils.createPlaceholder(parent,1);
  Composite filterSettings=UIUtils.createPlaceholder(composite,2,5);
  Group groupObjects=UIUtils.createControlGroup(filterSettings,CoreMessages.pref_page_query_manager_group_object_types,1,GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING,170);
  checkObjectTypeSessions=UIUtils.createCheckbox(groupObjects,CoreMessages.pref_page_query_manager_checkbox_sessions,false);
  checkObjectTypeTxn=UIUtils.createCheckbox(groupObjects,CoreMessages.pref_page_query_manager_checkbox_transactions,false);
  checkObjectTypeQueries=UIUtils.createCheckbox(groupObjects,CoreMessages.pref_page_query_manager_checkbox_queries,false);
  Group groupQueryTypes=UIUtils.createControlGroup(filterSettings,CoreMessages.pref_page_query_manager_group_query_types,1,GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING,170);
  checkQueryTypeUser=UIUtils.createCheckbox(groupQueryTypes,CoreMessages.pref_page_query_manager_checkbox_user_queries,false);
  checkQueryTypeScript=UIUtils.createCheckbox(groupQueryTypes,CoreMessages.pref_page_query_manager_checkbox_user_scripts,false);
  checkQueryTypeUtil=UIUtils.createCheckbox(groupQueryTypes,CoreMessages.pref_page_query_manager_checkbox_utility_functions,false);
  checkQueryTypeMeta=UIUtils.createCheckbox(groupQueryTypes,CoreMessages.pref_page_query_manager_checkbox_metadata_read,false);
  checkQueryTypeDDL=UIUtils.createCheckbox(groupQueryTypes,CoreMessages.pref_page_query_manager_checkbox_metadata_write,false);
{
    Group viewSettings=UIUtils.createControlGroup(composite,CoreMessages.pref_page_query_manager_group_settings,2,GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING,0);
    textEntriesPerPage=UIUtils.createLabelText(viewSettings,CoreMessages.pref_page_query_manager_label_entries_per_page,"",SWT.BORDER,new GridData(50,SWT.DEFAULT));
  }
{
    Group storageSettings=UIUtils.createControlGroup(composite,CoreMessages.pref_page_query_manager_group_storage,2,GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING,0);
    checkStoreLog=UIUtils.createCheckbox(storageSettings,CoreMessages.pref_page_query_manager_checkbox_store_log_file,false);
    GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);
    gd.horizontalSpan=2;
    checkStoreLog.setLayoutData(gd);
    checkStoreLog.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        UIUtils.enableWithChildren(textOutputFolder.getParent(),checkStoreLog.getSelection());
      }
    }
);
    textOutputFolder=UIUtils.createOutputFolderChooser(storageSettings,CoreMessages.pref_page_query_manager_logs_folder,null);
    textHistoryDays=UIUtils.createLabelText(storageSettings,CoreMessages.pref_page_query_manager_label_days_to_store_log,"",SWT.BORDER,new GridData(50,SWT.DEFAULT));
    textHistoryDays.setEnabled(false);
  }
  performDefaults();
  return composite;
}
