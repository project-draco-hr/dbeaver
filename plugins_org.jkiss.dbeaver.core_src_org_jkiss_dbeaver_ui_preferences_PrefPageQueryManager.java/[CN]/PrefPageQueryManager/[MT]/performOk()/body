{
  List<String> objectTypes=new ArrayList<String>();
  List<String> queryTypes=new ArrayList<String>();
  if (checkObjectTypeSessions.getSelection())   objectTypes.add(QMConstants.OBJECT_TYPE_SESSION);
  if (checkObjectTypeTxn.getSelection())   objectTypes.add(QMConstants.OBJECT_TYPE_TRANSACTION);
  if (checkObjectTypeScripts.getSelection())   objectTypes.add(QMConstants.OBJECT_TYPE_SCRIPT);
  if (checkObjectTypeQueries.getSelection())   objectTypes.add(QMConstants.OBJECT_TYPE_QUERY);
  if (checkQueryTypeUser.getSelection())   queryTypes.add(DBCExecutionPurpose.USER.name());
  if (checkQueryTypeScript.getSelection())   queryTypes.add(DBCExecutionPurpose.USER_SCRIPT.name());
  if (checkQueryTypeUtil.getSelection())   queryTypes.add(DBCExecutionPurpose.UTIL.name());
  if (checkQueryTypeMeta.getSelection())   queryTypes.add(DBCExecutionPurpose.META.name());
  if (checkQueryTypeDDL.getSelection())   queryTypes.add(DBCExecutionPurpose.DDL.name());
  if (checkQueryTypeOther.getSelection())   queryTypes.add(DBCExecutionPurpose.OTHER.name());
  Integer historyDays=UIUtils.getTextInteger(textHistoryDays);
  Integer entriesPerPage=UIUtils.getTextInteger(textEntriesPerPage);
  IPreferenceStore store=DBeaverCore.getInstance().getGlobalPreferenceStore();
  store.setValue(QMConstants.PROP_OBJECT_TYPES,CommonUtils.makeString(objectTypes,','));
  store.setValue(QMConstants.PROP_QUERY_TYPES,CommonUtils.makeString(queryTypes,','));
  if (historyDays != null) {
    store.setValue(QMConstants.PROP_HISTORY_DAYS,historyDays);
  }
  if (entriesPerPage != null) {
    store.setValue(QMConstants.PROP_ENTRIES_PER_PAGE,entriesPerPage);
  }
  RuntimeUtils.savePreferenceStore(store);
  return super.performOk();
}
