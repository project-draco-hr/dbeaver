{
  if (!dataSourceContainer.isConnected()) {
    throw new DBException(CoreMessages.editors_sql_status_not_connected_to_database);
  }
  List<CommandQueue> commandQueues=getCommandQueues();
  for (  CommandQueue queue : commandQueues) {
    for (    CommandInfo cmd : queue.commands) {
      cmd.command.validateCommand();
    }
  }
  List<DBECommand> executedCommands=new ArrayList<DBECommand>();
  try {
    for (    CommandQueue queue : commandQueues) {
      for (int i=0; i < queue.commands.size(); i++) {
        if (monitor.isCanceled()) {
          break;
        }
        CommandInfo cmd=queue.commands.get(i);
        while (cmd.mergedBy != null) {
          cmd=cmd.mergedBy;
        }
        if (!cmd.executed) {
          IDatabasePersistAction[] persistActions=cmd.command.getPersistActions();
          if (!CommonUtils.isEmpty(persistActions)) {
            cmd.persistActions=new ArrayList<PersistInfo>(persistActions.length);
            for (            IDatabasePersistAction action : persistActions) {
              cmd.persistActions.add(new PersistInfo(action));
            }
          }
          if (!CommonUtils.isEmpty(cmd.persistActions)) {
            DBCExecutionContext context=openCommandPersistContext(monitor,dataSourceContainer.getDataSource(),cmd.command);
            try {
              DBException error=null;
              for (              PersistInfo persistInfo : cmd.persistActions) {
                IDatabasePersistAction.ActionType actionType=persistInfo.action.getType();
                if (persistInfo.executed && actionType == IDatabasePersistAction.ActionType.NORMAL) {
                  continue;
                }
                if (monitor.isCanceled()) {
                  break;
                }
                try {
                  if (error == null || actionType == IDatabasePersistAction.ActionType.FINALIZER) {
                    queue.objectManager.executePersistAction(context,cmd.command,persistInfo.action);
                  }
                  persistInfo.executed=true;
                }
 catch (                DBException e) {
                  persistInfo.error=e;
                  persistInfo.executed=false;
                  if (actionType != IDatabasePersistAction.ActionType.OPTIONAL) {
                    error=e;
                  }
                }
              }
              if (error != null) {
                throw error;
              }
            }
  finally {
              closePersistContext(context);
            }
            cmd.executed=true;
          }
        }
        if (cmd.executed) {
synchronized (commands) {
            commands.remove(cmd);
          }
        }
        if (!executedCommands.contains(cmd.command)) {
          executedCommands.add(cmd.command);
        }
      }
    }
    commands.clear();
    userParams.clear();
  }
  finally {
    try {
      for (      DBECommand cmd : executedCommands) {
        cmd.updateModel();
      }
    }
 catch (    Exception e) {
      log.warn("Error updating model",e);
    }
    clearCommandQueues();
    clearUndidCommands();
    for (    DBECommandListener listener : getListeners()) {
      listener.onSave();
    }
  }
}
