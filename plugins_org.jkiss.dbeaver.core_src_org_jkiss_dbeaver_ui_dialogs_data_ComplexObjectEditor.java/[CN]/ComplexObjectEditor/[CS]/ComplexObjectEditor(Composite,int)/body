{
  super(parent,style | SWT.SINGLE | SWT.FULL_SELECTION);
  final Tree treeControl=super.getTree();
  treeControl.setHeaderVisible(true);
  treeControl.setLinesVisible(true);
  treeControl.addControlListener(new ControlAdapter(){
    private boolean packing=false;
    @Override public void controlResized(    ControlEvent e){
      if (!packing) {
        packing=true;
        UIUtils.packColumns(treeControl,true,new float[]{0.2f,0.8f});
        if (treeControl.getColumn(0).getWidth() < 100) {
          treeControl.getColumn(0).setWidth(100);
        }
        treeControl.removeControlListener(this);
      }
    }
  }
);
  ColumnViewerToolTipSupport.enableFor(this,ToolTip.NO_RECREATE);
  TreeViewerColumn column=new TreeViewerColumn(this,SWT.NONE);
  column.getColumn().setWidth(200);
  column.getColumn().setMoveable(true);
  column.getColumn().setText(CoreMessages.ui_properties_name);
  column.setLabelProvider(new PropsLabelProvider(true));
  column=new TreeViewerColumn(this,SWT.NONE);
  column.getColumn().setWidth(120);
  column.getColumn().setMoveable(true);
  column.getColumn().setText(CoreMessages.ui_properties_value);
  column.setLabelProvider(new PropsLabelProvider(false));
  super.setContentProvider(new StructContentProvider());
}
