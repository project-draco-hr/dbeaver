{
  if (this.loadingJob != null) {
    try {
      loadingJob.join();
    }
 catch (    InterruptedException e) {
    }
    if (loadingJob != null) {
      log.warn("Can't start new loading service because old one still running");
      return;
    }
    return;
  }
  getListPropertySource();
  clearLazyCache();
  this.lazyLoadCanceled=false;
  if (lazy) {
synchronized (this) {
      this.loadingJob=createLoadService();
      this.loadingJob.addJobChangeListener(new JobChangeAdapter(){
        @Override public void done(        IJobChangeEvent event){
          loadingJob=null;
        }
      }
);
      this.loadingJob.schedule(LAZY_LOAD_DELAY);
    }
  }
 else {
    final LoadingJob<Collection<OBJECT_TYPE>> loadService=createLoadService();
    loadService.syncRun();
  }
}
