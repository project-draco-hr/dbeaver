{
  if (collectedSet.containsKey(item)) {
    log.warn("Cycled object tree: " + item);
    return;
  }
  collectedSet.put(item,Boolean.TRUE);
  ITreeContentProvider contentProvider=(ITreeContentProvider)itemsViewer.getContentProvider();
  if (!contentProvider.hasChildren(item)) {
    return;
  }
  Object[] children=contentProvider.getChildren(item);
  if (!ArrayUtils.isEmpty(children)) {
    for (    Object child : children) {
      OBJECT_TYPE childItem=(OBJECT_TYPE)child;
      Object objectValue=getObjectValue(childItem);
      if (objectValue != null) {
        if (!classList.contains(objectValue.getClass())) {
          classList.add(objectValue.getClass());
        }
      }
      collectItemClasses(childItem,classList,collectedSet);
    }
  }
}
