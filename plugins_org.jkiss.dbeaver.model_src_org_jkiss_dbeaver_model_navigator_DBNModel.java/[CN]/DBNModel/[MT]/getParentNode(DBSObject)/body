{
  DBNDatabaseNode node=getNodeByObject(object);
  if (node != null) {
    if (node.getParentNode() instanceof DBNDatabaseNode) {
      return (DBNDatabaseNode)node.getParentNode();
    }
 else {
      log.error("Object's " + object.getName() + "' parent node is not a database node: "+ node.getParentNode());
      return null;
    }
  }
  List<DBSObject> path=new ArrayList<>();
  for (DBSObject item=object.getParentObject(); item != null; item=item.getParentObject()) {
    path.add(0,item);
  }
  for (int i=0; i < path.size(); i++) {
    DBSObject item=path.get(i);
    node=getNodeByObject(item);
    if (node == null) {
      return null;
    }
    List<? extends DBNDatabaseNode> children=node.getChildNodes();
    if (CommonUtils.isEmpty(children)) {
      return null;
    }
    if (item == object.getParentObject()) {
      for (      DBNDatabaseNode child : children) {
        if (child instanceof DBNDatabaseFolder) {
          Class<?> itemsClass=((DBNDatabaseFolder)child).getChildrenClass();
          if (itemsClass != null && itemsClass.isAssignableFrom(object.getClass())) {
            return child;
          }
        }
      }
    }
  }
  return null;
}
