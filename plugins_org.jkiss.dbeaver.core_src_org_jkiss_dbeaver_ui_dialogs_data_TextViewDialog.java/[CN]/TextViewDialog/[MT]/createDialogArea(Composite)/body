{
  Composite dialogGroup=(Composite)super.createDialogArea(parent);
  boolean isForeignKey=super.isForeignKey();
  Label label=new Label(dialogGroup,SWT.NONE);
  label.setText(CoreMessages.dialog_data_label_value);
  boolean readOnly=getValueController().isReadOnly();
  boolean useHex=!isForeignKey;
  long maxSize=getValueController().getValueType().getMaxLength();
  if (useHex) {
    editorContainer=new CTabFolder(dialogGroup,SWT.FLAT | SWT.TOP);
    editorContainer.setLayoutData(new GridData(GridData.FILL_BOTH));
    lengthLabel=new Label(editorContainer,SWT.RIGHT);
    lengthLabel.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    editorContainer.setTopRight(lengthLabel,SWT.FILL);
  }
  int selectedType=0;
  if (getDialogSettings().get(VALUE_TYPE_SELECTOR) != null) {
    selectedType=getDialogSettings().getInt(VALUE_TYPE_SELECTOR);
  }
{
    int style=SWT.NONE;
    if (readOnly) {
      style|=SWT.READ_ONLY;
    }
    if (useHex) {
      style|=SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL| SWT.WRAP;
    }
 else {
      style|=SWT.BORDER;
    }
    textEdit=new Text(useHex ? editorContainer : dialogGroup,style);
    if (maxSize > 0) {
      textEdit.setTextLimit((int)maxSize);
    }
    if (readOnly) {
      textEdit.setBackground(getShell().getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND));
    }
    GridData gd=new GridData(isForeignKey ? GridData.FILL_HORIZONTAL : GridData.FILL_BOTH);
    gd.widthHint=300;
    if (!isForeignKey) {
      gd.heightHint=200;
      gd.grabExcessVerticalSpace=true;
    }
    textEdit.setLayoutData(gd);
    textEdit.setFocus();
    textEdit.setEditable(!readOnly);
    textEdit.addModifyListener(new ModifyListener(){
      @Override public void modifyText(      ModifyEvent e){
        updateValueLength();
      }
    }
);
    if (useHex) {
      CTabItem item=new CTabItem(editorContainer,SWT.NO_FOCUS);
      item.setText("Text");
      item.setImage(DBIcon.TYPE_TEXT.getImage());
      item.setControl(textEdit);
    }
  }
  Point minSize=null;
  if (useHex) {
    hexEditControl=new HexEditControl(editorContainer,readOnly ? SWT.READ_ONLY : SWT.NONE,6,8);
    GridData gd=new GridData(GridData.FILL_BOTH);
    gd.heightHint=200;
    gd.minimumWidth=hexEditControl.computeSize(SWT.DEFAULT,SWT.DEFAULT).x;
    hexEditControl.setLayoutData(gd);
    minSize=hexEditControl.computeSize(SWT.DEFAULT,SWT.DEFAULT);
    minSize.x+=50;
    minSize.y+=50;
    CTabItem item=new CTabItem(editorContainer,SWT.NO_FOCUS);
    item.setText("Hex");
    item.setImage(DBIcon.TYPE_BINARY.getImage());
    item.setControl(hexEditControl);
    if (selectedType >= editorContainer.getItemCount()) {
      selectedType=0;
    }
    editorContainer.setSelection(selectedType);
    editorContainer.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent event){
        getDialogSettings().put(VALUE_TYPE_SELECTOR,editorContainer.getSelectionIndex());
      }
    }
);
    updateValueLength();
  }
  primeEditorValue(getValueController().getValue());
  if (isForeignKey) {
    super.createEditorSelector(dialogGroup);
  }
  if (minSize != null) {
    getShell().setMinimumSize(minSize);
  }
  return dialogGroup;
}
