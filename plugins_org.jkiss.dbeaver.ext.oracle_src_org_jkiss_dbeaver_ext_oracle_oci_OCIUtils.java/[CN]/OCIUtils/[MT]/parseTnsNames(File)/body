{
  Map<String,String> aliases=new TreeMap<>();
  if (tnsnamesOra.exists()) {
    try {
      BufferedReader reader=new BufferedReader(new FileReader(tnsnamesOra));
      StringBuilder tnsDescription=new StringBuilder();
      String curAlias=null;
      String line;
      while ((line=reader.readLine()) != null) {
        if (!line.isEmpty() && !line.startsWith(" ") && !line.startsWith("\t")&& !line.startsWith("(")&& !line.startsWith("#")&& line.contains("=")) {
          final int divPos=line.indexOf("=");
          if (divPos < 0) {
            continue;
          }
          final String alias=line.substring(0,divPos);
          if (alias.equalsIgnoreCase("IFILE")) {
            String filePath=line.substring(divPos + 1).trim();
            File extFile=new File(filePath);
            if (!extFile.exists()) {
              extFile=new File(tnsnamesOra.getParent(),filePath);
            }
            aliases.putAll(parseTnsNames(extFile));
          }
 else {
            if (curAlias != null) {
              aliases.put(curAlias,getPlainTnsDescription(tnsDescription.toString()));
            }
            curAlias=alias.trim();
            tnsDescription.setLength(0);
            tnsDescription.append(line.substring(divPos + 1));
          }
        }
 else {
          if (curAlias != null) {
            tnsDescription.append(line);
          }
        }
      }
      if (curAlias != null) {
        aliases.put(curAlias,getPlainTnsDescription(tnsDescription.toString()));
      }
    }
 catch (    IOException e) {
      log.debug(e);
    }
  }
 else {
    log.debug("TNS names file '" + tnsnamesOra + "' doesn't exist");
  }
  return aliases;
}
