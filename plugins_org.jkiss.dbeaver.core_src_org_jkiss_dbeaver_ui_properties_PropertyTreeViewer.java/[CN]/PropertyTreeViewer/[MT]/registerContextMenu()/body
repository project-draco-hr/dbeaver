{
{
    MenuManager menuMgr=new MenuManager();
    menuMgr.addMenuListener(new IMenuListener(){
      @Override public void menuAboutToShow(      final IMenuManager manager){
        final IStructuredSelection selection=PropertyTreeViewer.this.getStructuredSelection();
        if (selection.isEmpty()) {
          return;
        }
        final Object object=selection.getFirstElement();
        if (object instanceof TreeNode) {
          final TreeNode prop=(TreeNode)object;
          if (prop.property != null) {
            final String stringValue=CommonUtils.toString(getPropertyValue(prop));
            if (!CommonUtils.isEmpty(stringValue)) {
              manager.add(new Action(CoreMessages.ui_properties_tree_viewer_action_copy_value){
                @Override public void run(){
                  UIUtils.setClipboardContents(Display.getDefault(),TextTransfer.getInstance(),stringValue);
                }
              }
);
            }
            if (isPropertyChanged(prop) && prop.isEditable()) {
              if (prop.propertySource instanceof IPropertySource2 && !prop.propertySource.isPropertyResettable(prop.property.getId())) {
              }
 else {
                manager.add(new ActionResetProperty(prop,false));
                if (!isCustomProperty(prop.property)) {
                  manager.add(new ActionResetProperty(prop,true));
                }
              }
            }
          }
          manager.add(new Separator());
          contributeContextMenu(manager,object,prop.category != null ? prop.category : (prop.property == null ? null : prop.property.getCategory()),prop.property);
        }
      }
    }
);
    menuMgr.setRemoveAllWhenShown(true);
    Menu menu=menuMgr.createContextMenu(getTree());
    getTree().setMenu(menu);
  }
}
