{
{
    MenuManager menuMgr=new MenuManager();
    menuMgr.addMenuListener(new IMenuListener(){
      @Override public void menuAboutToShow(      final IMenuManager manager){
        final IStructuredSelection selection=(IStructuredSelection)PropertyTreeViewer.this.getSelection();
        if (selection.isEmpty()) {
          return;
        }
        final Object object=selection.getFirstElement();
        if (object instanceof TreeNode) {
          final TreeNode prop=(TreeNode)object;
          if (prop.property != null) {
            manager.add(new Action(CoreMessages.ui_properties_tree_viewer_action_copy_value){
              @Override public void run(){
                UIUtils.setClipboardContents(Display.getDefault(),TextTransfer.getInstance(),CommonUtils.toString(getPropertyValue(prop)));
              }
            }
);
            if (isPropertyChanged(prop) && prop.isEditable()) {
              if (prop.propertySource instanceof IPropertySource2 && !((IPropertySource2)prop.propertySource).isPropertyResettable(prop.property.getId())) {
              }
 else {
                manager.add(new ActionResetProperty(prop,false));
                if (!isCustomProperty(prop.property) && prop.propertySource instanceof IPropertySourceEx) {
                  manager.add(new ActionResetProperty(prop,true));
                }
              }
            }
            manager.add(new Separator());
          }
          contributeContextMenu(manager,object,prop.category != null ? prop.category : prop.property.getCategory(),prop.property);
        }
      }
    }
);
    menuMgr.setRemoveAllWhenShown(true);
    Menu menu=menuMgr.createContextMenu(getTree());
    getTree().setMenu(menu);
  }
}
