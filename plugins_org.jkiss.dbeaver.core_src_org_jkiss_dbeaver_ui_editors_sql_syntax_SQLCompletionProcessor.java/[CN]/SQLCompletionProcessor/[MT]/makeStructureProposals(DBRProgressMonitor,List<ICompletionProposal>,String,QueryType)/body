{
  DBPDataSource dataSource=editor.getDataSource();
  if (dataSource == null) {
    return;
  }
  if (queryType != null) {
    if (wordPart.length() == 0) {
      DBSObject rootObject=null;
      if (queryType == QueryType.COLUMN && dataSource instanceof DBSObjectContainer) {
        rootObject=getTableFromAlias(monitor,(DBSObjectContainer)dataSource,null);
      }
 else       if (dataSource instanceof DBSObjectContainer) {
        DBSObject selectedObject=getSelectedObject(dataSource);
        if (selectedObject != null) {
          makeProposalsFromChildren(monitor,selectedObject,null,proposals);
        }
        rootObject=(DBSObjectContainer)dataSource;
      }
      if (rootObject != null) {
        makeProposalsFromChildren(monitor,rootObject,null,proposals);
      }
    }
 else {
      DBSObject rootObject=null;
      if (queryType == QueryType.COLUMN && dataSource instanceof DBSObjectContainer) {
        DBSObjectContainer sc=(DBSObjectContainer)dataSource;
        DBSObject selectedObject=getSelectedObject(dataSource);
        if (selectedObject instanceof DBSObjectContainer) {
          sc=(DBSObjectContainer)selectedObject;
        }
        int divPos=wordPart.indexOf(editor.getSyntaxManager().getStructSeparator());
        String tableAlias=divPos == -1 ? null : wordPart.substring(0,divPos);
        rootObject=getTableFromAlias(monitor,sc,tableAlias);
      }
      if (rootObject != null) {
        makeProposalsFromChildren(monitor,rootObject,wordPart,proposals);
      }
 else {
        makeStructureProposals(monitor,dataSource,proposals);
      }
    }
  }
 else {
    makeStructureProposals(monitor,dataSource,proposals);
  }
}
