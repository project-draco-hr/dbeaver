{
  ERDAssociation association=(ERDAssociation)getModel();
  PolylineConnection conn=(PolylineConnection)super.createFigure();
  if (association.getObject().getConstraintType() == DBSEntityConstraintType.INHERITANCE) {
    final PolygonDecoration srcDec=new PolygonDecoration();
    srcDec.setTemplate(PolygonDecoration.TRIANGLE_TIP);
    srcDec.setFill(true);
    srcDec.setBackgroundColor(getParent().getViewer().getControl().getBackground());
    srcDec.setScale(10,6);
    conn.setSourceDecoration(srcDec);
  }
  if (association.getObject().getConstraintType() == DBSEntityConstraintType.FOREIGN_KEY) {
    final PolygonDecoration dec=new PolygonDecoration();
    conn.setTargetDecoration(dec);
  }
  if (association.isLogical()) {
    conn.setLineStyle(SWT.LINE_CUSTOM);
    conn.setLineDash(new float[]{5});
  }
  ConnectionLayer cLayer=(ConnectionLayer)getLayer(LayerConstants.CONNECTION_LAYER);
  conn.setConnectionRouter(cLayer.getConnectionRouter());
  if (!CommonUtils.isEmpty(association.getInitBends())) {
    List<AbsoluteBendpoint> connBends=new ArrayList<AbsoluteBendpoint>();
    for (    Point bend : association.getInitBends()) {
      connBends.add(new AbsoluteBendpoint(bend.x,bend.y));
    }
    conn.setRoutingConstraint(connBends);
  }
 else   if (association.getPrimaryKeyEntity() == association.getForeignKeyEntity()) {
    final IFigure entityFigure=((GraphicalEditPart)getSource()).getFigure();
    final Dimension figureSize=entityFigure.getMinimumSize();
    int entityWidth=figureSize.width;
    int entityHeight=figureSize.height;
    List<RelativeBendpoint> bends=new ArrayList<RelativeBendpoint>();
{
      RelativeBendpoint bp1=new RelativeBendpoint(conn);
      bp1.setRelativeDimensions(new Dimension(entityWidth,entityHeight / 2),new Dimension(entityWidth / 2,entityHeight / 2));
      bends.add(bp1);
    }
{
      RelativeBendpoint bp2=new RelativeBendpoint(conn);
      bp2.setRelativeDimensions(new Dimension(-entityWidth,entityHeight / 2),new Dimension(entityWidth,entityHeight));
      bends.add(bp2);
    }
    conn.setRoutingConstraint(bends);
  }
  Label toolTip=new Label(getAssociation().getObject().getName() + " [" + getAssociation().getObject().getConstraintType().getName()+ "]");
  toolTip.setIcon(DBIcon.TREE_FOREIGN_KEY.getImage());
  conn.setToolTip(toolTip);
  return conn;
}
