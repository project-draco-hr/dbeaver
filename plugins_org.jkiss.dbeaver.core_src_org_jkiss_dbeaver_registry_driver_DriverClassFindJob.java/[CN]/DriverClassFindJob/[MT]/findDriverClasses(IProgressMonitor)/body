{
  java.util.List<File> libFiles=new ArrayList<>();
  java.util.List<URL> libURLs=new ArrayList<>();
  for (  DBPDriverLibrary lib : driver.getDriverLibraries()) {
    File libFile=lib.getLocalFile();
    if (libFile != null && libFile.exists() && !libFile.isDirectory() && lib.getType() == DBPDriverLibrary.FileType.jar) {
      libFiles.add(libFile);
      try {
        libURLs.add(libFile.toURI().toURL());
      }
 catch (      MalformedURLException e) {
        log.debug(e);
      }
    }
 else {
      final Collection<DriverDescriptor.DriverFileInfo> files=driver.getLibraryFiles(lib);
      if (files != null) {
        for (        DriverDescriptor.DriverFileInfo file : files) {
          if (file.getFile() != null && file.getFile().exists()) {
            libFiles.add(file.getFile());
          }
        }
      }
    }
  }
  ClassLoader findCL=new URLClassLoader(libURLs.toArray(new URL[libURLs.size()]));
  for (  File libFile : libFiles) {
    if (monitor.isCanceled()) {
      break;
    }
    findDriverClasses(monitor,findCL,libFile);
  }
}
