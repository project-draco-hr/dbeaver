{
  try (InputStream classStream=currentFile.getInputStream(current)){
    ClassReader cr=new ClassReader(classStream);
    int access=cr.getAccess();
    if (depth == 0 && ((access & Opcodes.ACC_PUBLIC) == 0 || (access & Opcodes.ACC_ABSTRACT) != 0)) {
      return false;
    }
    final String superName=cr.getSuperName();
    if (isInterface) {
      String[] interfaces=cr.getInterfaces();
      if (ArrayUtils.contains(interfaces,interfaceName)) {
        return true;
      }
 else       if (!CommonUtils.isEmpty(superName) && !superName.equals(OBJECT_CLASS_NAME)) {
        JarEntry jarEntry=currentFile.getJarEntry(superName + CLASS_FILE_EXT);
        if (jarEntry != null) {
          return implementsInterface(currentFile,jarEntry,depth + 1);
        }
      }
      for (      String intName : interfaces) {
        JarEntry jarEntry=currentFile.getJarEntry(intName + CLASS_FILE_EXT);
        if (jarEntry != null) {
          if (implementsInterface(currentFile,jarEntry,depth + 1)) {
            return true;
          }
        }
      }
    }
 else     if (superName != null) {
      if (interfaceName.equals(superName)) {
        return true;
      }
      JarEntry jarEntry=currentFile.getJarEntry(superName + CLASS_FILE_EXT);
      if (jarEntry != null) {
        if (implementsInterface(currentFile,jarEntry,depth + 1)) {
          return true;
        }
      }
    }
  }
   return false;
}
