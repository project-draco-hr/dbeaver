{
  final IWorkbenchWindow workbenchWindow=HandlerUtil.getActiveWorkbenchWindow(event);
  final ISelection selection=HandlerUtil.getCurrentSelection(event);
  if (!(selection instanceof IStructuredSelection)) {
    return null;
  }
  IStructuredSelection ss=(IStructuredSelection)selection;
  final List<IDataTransferProducer> producers=new ArrayList<>();
  final List<IDataTransferConsumer> consumers=new ArrayList<>();
  for (Iterator<?> iter=ss.iterator(); iter.hasNext(); ) {
    Object object=iter.next();
    IDataTransferNode node=adaptTransferNode(object);
    if (node instanceof IDataTransferProducer) {
      producers.add((IDataTransferProducer)node);
    }
 else     if (node instanceof IDataTransferConsumer) {
      consumers.add((IDataTransferConsumer)node);
    }
  }
  if (!consumers.isEmpty()) {
    for (    IDataTransferConsumer consumer : consumers) {
      IDataTransferProducer producer=chooseProducer(event,consumer);
      if (producer == null) {
        return null;
      }
      producers.add(producer);
    }
  }
  if (!producers.isEmpty() || !consumers.isEmpty()) {
    ActiveWizardDialog dialog=new ActiveWizardDialog(workbenchWindow,new DataTransferWizard(producers.toArray(new IDataTransferProducer[producers.size()]),consumers.toArray(new IDataTransferConsumer[consumers.size()])));
    dialog.open();
  }
  return null;
}
