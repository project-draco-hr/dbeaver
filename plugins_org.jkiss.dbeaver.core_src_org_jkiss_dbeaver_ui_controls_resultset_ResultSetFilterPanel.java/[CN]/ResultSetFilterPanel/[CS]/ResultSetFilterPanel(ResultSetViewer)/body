{
  super(rsv.getControl(),SWT.NONE);
  this.viewer=rsv;
  this.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  GridLayout gl=new GridLayout(4,false);
  gl.marginHeight=3;
  gl.marginWidth=3;
  this.setLayout(gl);
  Button sourceQueryButton=new Button(this,SWT.PUSH | SWT.NO_FOCUS);
  sourceQueryButton.setImage(DBeaverIcons.getImage(UIIcon.SQL_TEXT));
  sourceQueryButton.setText("SQL");
  sourceQueryButton.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      DBCStatistics statistics=viewer.getModel().getStatistics();
      String queryText=statistics == null ? null : statistics.getQueryText();
      if (queryText == null || queryText.isEmpty()) {
        queryText="<empty>";
      }
      ViewSQLDialog dialog=new ViewSQLDialog(viewer.getSite(),viewer.getExecutionContext(),"Query Text",DBeaverIcons.getImage(UIIcon.SQL_TEXT),queryText);
      dialog.setEnlargeViewPanel(false);
      dialog.setWordWrap(true);
      dialog.open();
    }
  }
);
  Button customizeButton=new Button(this,SWT.PUSH | SWT.NO_FOCUS);
  customizeButton.setImage(DBeaverIcons.getImage(UIIcon.FILTER));
  customizeButton.setText("Filters");
  customizeButton.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      new FilterSettingsDialog(viewer).open();
    }
  }
);
  this.filtersText=new Combo(this,SWT.BORDER | SWT.DROP_DOWN);
  this.filtersText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  this.filtersText.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      setCustomDataFilter();
    }
  }
);
{
    UIUtils.addFocusTracker(viewer.getSite(),UIUtils.INLINE_WIDGET_EDITOR_ID,this.filtersText);
    this.filtersText.addDisposeListener(new DisposeListener(){
      @Override public void widgetDisposed(      DisposeEvent e){
        UIUtils.removeFocusTracker(viewer.getSite(),filtersText);
        dispose();
      }
    }
);
  }
  UIUtils.enableHostEditorKeyBindingsSupport(viewer.getSite(),this.filtersText);
  ToolBar filterToolbar=new ToolBar(this,SWT.HORIZONTAL | SWT.RIGHT);
  filtersApplyButton=new ToolItem(filterToolbar,SWT.PUSH | SWT.NO_FOCUS);
  filtersApplyButton.setImage(DBeaverIcons.getImage(UIIcon.FILTER_APPLY));
  filtersApplyButton.setToolTipText("Apply filter criteria");
  filtersApplyButton.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      setCustomDataFilter();
    }
  }
);
  filtersApplyButton.setEnabled(false);
  filtersClearButton=new ToolItem(filterToolbar,SWT.PUSH | SWT.NO_FOCUS);
  filtersClearButton.setImage(DBeaverIcons.getImage(UIIcon.FILTER_RESET));
  filtersClearButton.setToolTipText("Remove all filters");
  filtersClearButton.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      viewer.resetDataFilter(true);
    }
  }
);
  filtersClearButton.setEnabled(false);
  historyBackButton=new ToolItem(filterToolbar,SWT.DROP_DOWN | SWT.NO_FOCUS);
  historyBackButton.setImage(DBeaverIcons.getImage(UIIcon.RS_BACK));
  historyBackButton.setEnabled(false);
  historyBackButton.addSelectionListener(new HistoryMenuListener(historyBackButton,true));
  historyForwardButton=new ToolItem(filterToolbar,SWT.DROP_DOWN | SWT.NO_FOCUS);
  historyForwardButton.setImage(DBeaverIcons.getImage(UIIcon.RS_FORWARD));
  historyForwardButton.setEnabled(false);
  historyForwardButton.addSelectionListener(new HistoryMenuListener(historyForwardButton,false));
  this.filtersText.addModifyListener(new ModifyListener(){
    @Override public void modifyText(    ModifyEvent e){
      if (filtersEnableState == null) {
        String filterText=filtersText.getText();
        filtersApplyButton.setEnabled(true);
        filtersClearButton.setEnabled(!CommonUtils.isEmpty(filterText));
      }
    }
  }
);
  this.addTraverseListener(new TraverseListener(){
    @Override public void keyTraversed(    TraverseEvent e){
      if (e.detail == SWT.TRAVERSE_RETURN) {
        setCustomDataFilter();
        e.doit=false;
        e.detail=SWT.TRAVERSE_NONE;
      }
    }
  }
);
  filtersEnableState=ControlEnableState.disable(this);
}
