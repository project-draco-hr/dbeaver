{
  final DatabaseConsumerSettings settings=getWizard().getPageSettings(this,DatabaseConsumerSettings.class);
  boolean allowsCreate=true;
  java.util.List<String> items=new ArrayList<String>();
  if (element instanceof DatabaseMappingContainer) {
    if (settings.getContainerNode() == null) {
      allowsCreate=false;
    }
    if (settings.getContainer() != null) {
      DBSObjectContainer container=settings.getContainer();
      for (      DBSObject child : container.getChildren(VoidProgressMonitor.INSTANCE)) {
        if (child instanceof DBSDataManipulator) {
          items.add(child.getName());
        }
      }
    }
    items.add(TARGET_NAME_BROWSE);
  }
 else {
    DatabaseMappingAttribute mapping=(DatabaseMappingAttribute)element;
switch (mapping.getParent().getMappingType()) {
case skip:
case unspecified:
      allowsCreate=false;
    break;
}
if (mapping.getParent().getTarget() instanceof DBSEntity) {
  DBSEntity parentEntity=(DBSEntity)mapping.getParent().getTarget();
  for (  DBSEntityAttribute attr : parentEntity.getAttributes(VoidProgressMonitor.INSTANCE)) {
    items.add(attr.getName());
  }
}
}
items.add(DatabaseMappingAttribute.TARGET_NAME_SKIP);
CustomComboBoxCellEditor editor=new CustomComboBoxCellEditor(mappingViewer.getTree(),items.toArray(new String[items.size()]),SWT.DROP_DOWN | (allowsCreate ? SWT.NONE : SWT.READ_ONLY));
return editor;
}
