{
  if (mappingViewer.getInput() == null) {
    final DatabaseConsumerSettings settings=getWizard().getPageSettings(this,DatabaseConsumerSettings.class);
    Map<DBSDataContainer,DatabaseMappingContainer> dataMappings=settings.getDataMappings();
    for (    DataTransferPipe pipe : getWizard().getSettings().getDataPipes()) {
      if (pipe.getProducer() == null) {
        continue;
      }
      DBSDataContainer sourceObject=(DBSDataContainer)pipe.getProducer().getSourceObject();
      if (!dataMappings.containsKey(sourceObject)) {
        DatabaseMappingContainer mapping;
        if (pipe.getConsumer() instanceof DatabaseTransferConsumer && ((DatabaseTransferConsumer)pipe.getConsumer()).getTargetObject() != null) {
          try {
            mapping=new DatabaseMappingContainer(getContainer(),sourceObject,((DatabaseTransferConsumer)pipe.getConsumer()).getTargetObject());
          }
 catch (          DBException e) {
            setMessage(e.getMessage(),IMessageProvider.ERROR);
            mapping=new DatabaseMappingContainer(sourceObject);
          }
        }
 else {
          mapping=new DatabaseMappingContainer(sourceObject);
        }
        dataMappings.put(sourceObject,mapping);
      }
    }
    mappingViewer.setInput(dataMappings.values());
    Tree table=mappingViewer.getTree();
    int totalWidth=table.getClientArea().width;
    TreeColumn[] columns=table.getColumns();
    columns[0].setWidth(totalWidth * 40 / 100);
    columns[1].setWidth(totalWidth * 40 / 100);
    columns[2].setWidth(totalWidth * 20 / 100);
  }
  updatePageCompletion();
}
