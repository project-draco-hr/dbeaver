{
  long startTime=System.currentTimeMillis();
  log.debug("Shutdown Core...");
  DBeaverCore.setClosing(true);
  for (  IPluginService pluginService : activatedServices) {
    try {
      pluginService.deactivateService();
    }
 catch (    Exception e) {
      log.error("Error deactivating plugin service",e);
    }
  }
  activatedServices.clear();
  if (this.navigatorModel != null) {
    this.navigatorModel.dispose();
  }
  if (this.projectRegistry != null) {
    this.projectRegistry.dispose();
    this.projectRegistry=null;
  }
  IProgressMonitor monitor=new NullProgressMonitor();
  if (workspace != null) {
    if (tempProject != null && tempProject.exists()) {
      try {
        tempProject.delete(true,true,monitor);
      }
 catch (      CoreException e) {
        log.warn("Can't cleanup temp project",e);
      }
    }
  }
  if (this.qmLogWriter != null) {
    this.queryManager.unregisterMetaListener(qmLogWriter);
    this.qmLogWriter.dispose();
    this.qmLogWriter=null;
  }
  if (this.queryManager != null) {
    this.queryManager.dispose();
  }
  DataSourceProviderRegistry.getInstance().dispose();
  if (isStandalone() && workspace != null) {
    try {
      workspace.save(true,monitor);
    }
 catch (    CoreException ex) {
      log.error("Can't save workspace",ex);
    }
  }
  DBeaverCore.instance=null;
  DBeaverCore.disposed=true;
  log.debug("Shutdown completed in " + (System.currentTimeMillis() - startTime) + "ms");
}
