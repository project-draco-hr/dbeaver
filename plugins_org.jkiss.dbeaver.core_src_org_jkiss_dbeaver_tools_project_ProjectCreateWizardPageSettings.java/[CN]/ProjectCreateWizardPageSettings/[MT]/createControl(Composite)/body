{
  Composite placeholder=UIUtils.createPlaceholder(parent,1);
  Composite configGroup=UIUtils.createControlGroup(placeholder,CoreMessages.dialog_project_create_settings_group_general,2,GridData.FILL_HORIZONTAL,0);
  projectNameText=UIUtils.createLabelText(configGroup,CoreMessages.dialog_project_create_settings_label_name,DEFAULT_PROJECT_NAME);
  createData.setName(DEFAULT_PROJECT_NAME);
  final Text projectDescriptionText=UIUtils.createLabelText(configGroup,CoreMessages.dialog_project_create_settings_label_description,null);
  projectDescriptionText.addModifyListener(new ModifyListener(){
    @Override public void modifyText(    ModifyEvent e){
      createData.setDescription(projectDescriptionText.getText());
    }
  }
);
  UIUtils.createControlLabel(configGroup,"Project path");
  final TextWithOpenFolder projectPathText=new TextWithOpenFolder(configGroup,"Project path");
  projectPathText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  final File projectParentDir=ResourcesPlugin.getWorkspace().getRoot().getLocation().toFile();
  final File projectHome=new File(projectParentDir,DEFAULT_PROJECT_NAME);
  createData.setPath(projectHome);
  projectPathText.setText(projectHome.getAbsolutePath());
  projectPathText.getTextControl().addModifyListener(new ModifyListener(){
    @Override public void modifyText(    ModifyEvent e){
      createData.setPath(new File(projectPathText.getText()));
      updateState();
    }
  }
);
  projectNameText.addModifyListener(new ModifyListener(){
    @Override public void modifyText(    ModifyEvent e){
      final String projectName=projectNameText.getText();
      createData.setName(projectName);
      if (!CommonUtils.isEmptyTrimmed(projectName)) {
        final File oldProjectPath=new File(projectPathText.getText());
        final File newProjectPath=new File(oldProjectPath.getParent(),createData.getName());
        createData.setPath(newProjectPath);
        projectPathText.setText(newProjectPath.getAbsolutePath());
      }
      updateState();
    }
  }
);
  setControl(placeholder);
}
