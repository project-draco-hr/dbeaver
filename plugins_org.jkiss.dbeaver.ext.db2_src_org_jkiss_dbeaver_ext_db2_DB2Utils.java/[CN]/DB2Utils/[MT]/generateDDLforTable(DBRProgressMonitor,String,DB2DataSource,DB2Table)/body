{
  LOG.debug("Generate DDL for " + db2Table.getFullQualifiedName());
  if (db2Table.getSchema().isSystem()) {
    return DB2Messages.no_ddl_for_system_tables;
  }
  if (db2Table.getFullQualifiedName().contains(" ")) {
    return DB2Messages.no_ddl_for_spaces_in_name;
  }
  monitor.beginTask("Generating DDL",3);
  Integer token=0;
  StringBuilder sb=new StringBuilder(2048);
  String command=String.format(DB2LK_COMMAND,statementDelimiter,db2Table.getFullQualifiedName());
  try (JDBCSession session=dataSource.getDefaultContext(true).openSession(monitor,DBCExecutionPurpose.META,"Generate DDL")){
    LOG.debug("Calling DB2LK_GENERATE_DDL with command : " + command);
    try (JDBCCallableStatement stmtSP=session.prepareCall(CALL_DB2LK_GEN)){
      stmtSP.registerOutParameter(2,java.sql.Types.INTEGER);
      stmtSP.setString(1,command);
      stmtSP.executeUpdate();
      token=stmtSP.getInt(2);
    }
     LOG.debug("Token = " + token);
    monitor.worked(1);
    try (JDBCPreparedStatement stmtSel=session.prepareStatement(SEL_DB2LK)){
      stmtSel.setInt(1,token);
      try (JDBCResultSet dbResult=stmtSel.executeQuery()){
        Clob ddlStmt;
        Long ddlLength;
        Long ddlStart=1L;
        while (dbResult.next()) {
          ddlStmt=dbResult.getClob(1);
          ddlLength=ddlStmt.length() + 1L;
          sb.append(ddlStmt.getSubString(ddlStart,ddlLength.intValue()));
          sb.append(LINE_SEP);
          ddlStmt.free();
        }
      }
     }
     monitor.worked(2);
    try (JDBCCallableStatement stmtSPClean=session.prepareCall(CALL_DB2LK_CLEAN)){
      stmtSPClean.setInt(1,token);
      stmtSPClean.executeUpdate();
    }
     monitor.worked(3);
    LOG.debug("Terminated OK");
    return sb.toString();
  }
 catch (  SQLException e) {
    throw new DBException(e,dataSource);
  }
 finally {
    monitor.done();
  }
}
