{
  try {
    store.setValue(DBeaverPreferences.MEMORY_CONTENT_MAX_SIZE,memoryContentSize.getSelection());
    String presentationTitle=binaryPresentationCombo.getItem(binaryPresentationCombo.getSelectionIndex());
    for (    DBDBinaryFormatter formatter : DBDBinaryFormatter.FORMATS) {
      if (formatter.getTitle().equals(presentationTitle)) {
        store.setValue(ModelPreferences.RESULT_SET_BINARY_PRESENTATION,formatter.getId());
        break;
      }
    }
    store.setValue(ModelPreferences.RESULT_SET_BINARY_STRING_MAX_LEN,binaryStringMaxLength.getSelection());
    store.setValue(DBeaverPreferences.RESULT_SET_BINARY_EDITOR_TYPE,binaryEditorType.getSelectionIndex() == 0 ? IValueController.EditType.EDITOR.name() : IValueController.EditType.PANEL.name());
    store.setValue(ModelPreferences.CONTENT_HEX_ENCODING,UIUtils.getComboSelection(encodingCombo));
    store.setValue(ModelPreferences.CONTENT_CACHE_CLOB,contentCacheClob.getSelection());
    store.setValue(DBeaverPreferences.RS_EDIT_LONG_AS_LOB,editLongAsLobCheck.getSelection());
    store.setValue(DBeaverPreferences.RS_EDIT_MAX_TEXT_SIZE,maxTextContentSize.getSelection());
    store.setValue(DBeaverPreferences.RS_COMMIT_ON_EDIT_APPLY,commitOnEditApplyCheck.getSelection());
    store.setValue(DBeaverPreferences.RS_COMMIT_ON_CONTENT_APPLY,commitOnContentApplyCheck.getSelection());
  }
 catch (  Exception e) {
    log.warn(e);
  }
  PrefUtils.savePreferenceStore(store);
}
