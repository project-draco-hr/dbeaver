{
  final ImportDriverInfo driverInfo=connectionInfo.getDriverInfo();
  if (CommonUtils.isEmpty(driverInfo.getDriverClass())) {
    throw new DBException("Cannot create driver '" + driverInfo.getName() + "' - no driver class specified");
  }
  String sampleURL=driverInfo.getSampleURL();
  if (CommonUtils.isEmpty(sampleURL)) {
    throw new DBException("Cannot create driver '" + driverInfo.getName() + "' - no connection URL pattern specified");
  }
{
    DriverDescriptor driver=driverClassMap.get(driverInfo.getDriverClass());
    if (driver != null) {
      connectionInfo.setDriver(driver);
      return true;
    }
  }
  final DataSourceProviderRegistry registry=DataSourceProviderRegistry.getInstance();
  List<DriverDescriptor> matchedDrivers=new ArrayList<>();
  for (  DataSourceProviderDescriptor dataSourceProvider : registry.getDataSourceProviders()) {
    for (    DriverDescriptor driver : dataSourceProvider.getEnabledDrivers()) {
      final String driverClassName=driver.getDriverClassName();
      if (driverClassName != null && driverClassName.equals(driverInfo.getDriverClass())) {
        matchedDrivers.add(driver);
      }
    }
  }
  DriverDescriptor driver;
  if (matchedDrivers.isEmpty()) {
    final DataSourceProviderDescriptor genericProvider=registry.getDataSourceProvider("generic");
    if (genericProvider == null) {
      throw new DBException("Generic datasource provider not found");
    }
    driver=genericProvider.createDriver();
    driver.setName(driverInfo.getName());
    driver.setDriverClassName(driverInfo.getDriverClass());
    driver.setSampleURL(driverInfo.getSampleURL());
    driver.setConnectionProperties(driverInfo.getProperties());
    driver.setDescription(driverInfo.getDescription());
    driver.setDriverDefaultPort(driverInfo.getDefaultPort());
    for (    String path : driverInfo.getLibraries()) {
      driver.addDriverLibrary(path,DBPDriverLibrary.FileType.jar);
    }
    driver.setModified(true);
    genericProvider.addDriver(driver);
    connectionInfo.setDriver(driver);
  }
 else   if (matchedDrivers.size() == 1) {
    driver=matchedDrivers.get(0);
    connectionInfo.setDriver(driver);
  }
 else {
    driver=SelectObjectDialog.selectObject(getShell(),"Choose driver for connection '" + connectionInfo.getAlias() + "'",matchedDrivers);
    if (driver == null) {
      return false;
    }
    connectionInfo.setDriver(driver);
  }
  if (driver != null) {
    driverClassMap.put(driver.getDriverClassName(),driver);
    return true;
  }
  return false;
}
