{
  if (previewController == null || valueController.getValueType() != previewController.getValueType()) {
    cleanupPanel();
    columnImageLabel.setImage(DBUtils.getTypeImage(valueController.getValueType()));
    columnNameLabel.setText(valueController.getValueName());
    try {
      valueViewer=valueController.getValueHandler().createEditor(valueController);
    }
 catch (    DBException e) {
      UIUtils.showErrorDialog(getShell(),"Value preview","Can't create value viewer",e);
      return;
    }
    fillStandardToolBar();
    if (valueViewer != null) {
      valueViewer.createControl();
    }
 else {
      final Composite placeholder=UIUtils.createPlaceholder(viewPlaceholder,1);
      placeholder.setBackground(placeholder.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
      placeholder.addPaintListener(new PaintListener(){
        @Override public void paintControl(        PaintEvent e){
          Rectangle bounds=placeholder.getBounds();
          String message="No editor for [" + valueController.getValueType().getTypeName() + "]";
          Point ext=e.gc.textExtent(message);
          e.gc.drawText(message,(bounds.width - ext.x) / 2,bounds.height / 3 + 20);
        }
      }
);
    }
    previewController=valueController;
    toolBar.getParent().layout();
    viewPlaceholder.layout();
  }
  if (valueViewer != null) {
    try {
      valueViewer.primeEditorValue(previewController.getValue());
    }
 catch (    DBException e) {
      log.error(e);
    }
  }
}
