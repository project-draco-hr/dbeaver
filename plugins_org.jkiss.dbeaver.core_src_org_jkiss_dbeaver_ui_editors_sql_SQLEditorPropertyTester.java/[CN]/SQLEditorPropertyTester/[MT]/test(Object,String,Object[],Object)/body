{
  if (!(receiver instanceof SQLEditorBase)) {
    return false;
  }
  SQLEditor editor=(SQLEditor)receiver;
  final Control editorControl=editor.getEditorControl();
  if (editorControl == null) {
    return false;
  }
  boolean isFocused=editorControl.isFocusControl();
  boolean isConnected=editor.getDataSourceContainer() != null && editor.getDataSourceContainer().isConnected();
switch (property) {
case PROP_CAN_EXECUTE:
    return isConnected && isFocused && (!"statement".equals(expectedValue) || editor.hasActiveQuery());
case PROP_CAN_EXPLAIN:
  return isConnected && isFocused && editor.hasActiveQuery()&& DBUtils.getAdapter(DBCQueryPlanner.class,editor.getDataSource()) != null;
case PROP_CAN_NAVIGATE:
{
  ISelectionProvider selectionProvider=editor.getSelectionProvider();
  if (selectionProvider == null) {
    return false;
  }
  ITextSelection selection=(ITextSelection)selectionProvider.getSelection();
  Document document=editor.getDocument();
  return selection != null && document != null && !new SQLIdentifierDetector(editor.getSyntaxManager().getStructSeparator(),editor.getSyntaxManager().getQuoteSymbol()).detectIdentifier(document,new Region(selection.getOffset(),selection.getLength())).isEmpty();
}
case PROP_CAN_EXPORT:
return isConnected && editor.hasActiveQuery();
}
return false;
}
