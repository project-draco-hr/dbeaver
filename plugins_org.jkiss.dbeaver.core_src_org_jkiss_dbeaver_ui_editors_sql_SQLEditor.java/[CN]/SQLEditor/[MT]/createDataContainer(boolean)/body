{
  boolean firstResultSet=dataContainers.isEmpty();
  final DataContainer dataContainer=new DataContainer();
  dataContainers.add(dataContainer);
  curDataContainer=dataContainer;
  final ResultSetViewer resultsView=new ResultSetViewer(resultTabs,getSite(),dataContainer);
  selectionProvider.trackProvider(resultsView.getSpreadsheet(),resultsView);
  resultsView.getSpreadsheet().addFocusListener(new FocusAdapter(){
    @Override public void focusGained(    FocusEvent e){
      findReplaceTarget.setTarget(resultsView.getFindReplaceTarget());
    }
  }
);
  int tabIndex=dataContainers.size() - 1;
  final CTabItem item=new CTabItem(resultTabs,SWT.NONE,tabIndex);
  String tabName=CoreMessages.editors_sql_data_grid;
  if (!firstResultSet) {
    tabName+=" [" + (getTabIndex(item) + 1) + "]";
  }
  item.setText(tabName);
  item.setImage(imgDataGrid);
  item.setData(dataContainer);
  if (!firstResultSet) {
    item.setShowClose(true);
  }
  item.setControl(resultsView.getControl());
  item.addDisposeListener(new DisposeListener(){
    @Override public void widgetDisposed(    DisposeEvent e){
      DataContainer dataContainer=(DataContainer)item.getData();
      if (dataContainer != null) {
        dataContainers.remove(dataContainer);
      }
      if (dataContainer == curDataContainer) {
        if (dataContainers.isEmpty()) {
          curDataContainer=null;
        }
 else {
          curDataContainer=dataContainers.get(0);
        }
      }
    }
  }
);
  if (setSelection) {
    resultTabs.setSelection(item);
  }
  dataContainer.init(item,resultsView);
  return dataContainer;
}
