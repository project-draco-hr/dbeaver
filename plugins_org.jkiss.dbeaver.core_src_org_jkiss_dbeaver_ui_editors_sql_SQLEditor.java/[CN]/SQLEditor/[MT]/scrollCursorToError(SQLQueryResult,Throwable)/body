{
  DBCExecutionContext context=getExecutionContext();
  if (context == null) {
    return;
  }
  try {
    boolean scrolled=false;
    DBPErrorAssistant errorAssistant=DBUtils.getAdapter(DBPErrorAssistant.class,context.getDataSource());
    if (errorAssistant != null) {
      DBPErrorAssistant.ErrorPosition[] positions=errorAssistant.getErrorPosition(error);
      if (positions != null && positions.length > 0) {
        int queryStartOffset=result.getStatement().getOffset();
        DBPErrorAssistant.ErrorPosition pos=positions[0];
        if (pos.line < 0) {
          if (pos.position >= 0) {
            getSelectionProvider().setSelection(new TextSelection(queryStartOffset + pos.position,1));
            scrolled=true;
          }
        }
 else {
          Document document=getDocument();
          if (document != null) {
            int startLine=document.getLineOfOffset(queryStartOffset);
            int errorOffset=document.getLineOffset(startLine + pos.line);
            int errorLength;
            if (pos.position >= 0) {
              errorOffset+=pos.position;
              errorLength=1;
            }
 else {
              errorLength=document.getLineLength(startLine + pos.line);
            }
            getSelectionProvider().setSelection(new TextSelection(errorOffset,errorLength));
            scrolled=true;
          }
        }
      }
    }
    if (!scrolled) {
      showStatementInEditor(result.getStatement(),true);
    }
  }
 catch (  Exception e) {
    log.warn("Error positioning on query error",e);
  }
}
