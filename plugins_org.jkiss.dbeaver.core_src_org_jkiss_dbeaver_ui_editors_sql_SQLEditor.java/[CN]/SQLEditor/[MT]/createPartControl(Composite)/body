{
  setRangeIndicator(new DefaultRangeIndicator());
  sashForm=UIUtils.createPartDivider(this,parent,SWT.VERTICAL | SWT.SMOOTH);
  UIUtils.setHelp(sashForm,IHelpContextIds.CTX_SQL_EDITOR);
  super.createPartControl(sashForm);
  editorControl=sashForm.getChildren()[0];
{
    resultTabs=new CTabFolder(sashForm,SWT.TOP | SWT.FLAT);
    resultTabs.setLayoutData(new GridData(GridData.FILL_BOTH));
    resultTabs.addSelectionListener(new SelectionAdapter(){
      @Override public void widgetSelected(      SelectionEvent e){
        resultTabs.indexOf((CTabItem)e.item);
      }
    }
);
    resultTabs.setSimple(true);
    resultsView=new ResultSetViewer(resultTabs,getSite(),this);
    planView=new ExplainPlanViewer(this,resultTabs,this);
    final SQLLogPanel logViewer=new SQLLogPanel(resultTabs,this);
    resultTabs.addListener(SWT.MouseDoubleClick,new Listener(){
      @Override public void handleEvent(      Event event){
        CTabItem selectedItem=resultTabs.getItem(new Point(event.getBounds().x,event.getBounds().y));
        if (selectedItem != null && selectedItem == resultTabs.getSelection()) {
          if (sashForm.getMaximizedControl() == null) {
            sashForm.setMaximizedControl(resultTabs);
          }
 else {
            sashForm.setMaximizedControl(null);
          }
        }
      }
    }
);
    CTabItem item=new CTabItem(resultTabs,SWT.NONE,PAGE_INDEX_RESULTSET);
    item.setControl(resultsView.getControl());
    item.setText(CoreMessages.editors_sql_data_grid);
    item.setImage(imgDataGrid);
    item=new CTabItem(resultTabs,SWT.NONE,PAGE_INDEX_PLAN);
    item.setControl(planView.getControl());
    item.setText(CoreMessages.editors_sql_explain_plan);
    item.setImage(imgExplainPlan);
    item=new CTabItem(resultTabs,SWT.NONE,PAGE_INDEX_LOG);
    item.setControl(logViewer);
    item.setText(CoreMessages.editors_sql_execution_log);
    item.setImage(imgLog);
    resultTabs.setSelection(0);
    final CompositeSelectionProvider selectionProvider=new CompositeSelectionProvider();
    selectionProvider.trackViewer(getTextViewer().getTextWidget(),getTextViewer());
    selectionProvider.trackViewer(resultsView.getGridControl(),resultsView);
    selectionProvider.trackViewer(planView.getViewer().getControl(),planView.getViewer());
    getSite().setSelectionProvider(selectionProvider);
  }
  resultsView.getSpreadsheet().addFocusListener(new FocusAdapter(){
    @Override public void focusGained(    FocusEvent e){
      findReplaceTarget.setTarget(resultsView.getFindReplaceTarget());
    }
  }
);
  getViewer().getTextWidget().addFocusListener(new FocusAdapter(){
    @Override public void focusGained(    FocusEvent e){
      findReplaceTarget.setTarget(getViewer().getFindReplaceTarget());
    }
  }
);
  findReplaceTarget.setTarget(getViewer().getFindReplaceTarget());
  checkConnected();
  onDataSourceChange();
}
