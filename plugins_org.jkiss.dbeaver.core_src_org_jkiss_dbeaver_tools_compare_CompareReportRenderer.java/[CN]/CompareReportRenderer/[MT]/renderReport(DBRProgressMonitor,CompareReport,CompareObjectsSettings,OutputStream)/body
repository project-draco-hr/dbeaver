{
  this.report=report;
  this.settings=settings;
  this.xml=new XMLBuilder(outputStream,"utf-8",true);
  this.xml.setButify(true);
  xml.addContent("<!DOCTYPE html \n" + "     PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n" + "    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">");
  if (settings.isShowOnlyDifferences()) {
    List<CompareReportLine> reportLines=report.getReportLines();
    int reportLinesSize=reportLines.size();
    for (int i=0; i < reportLinesSize; i++) {
      if (reportLines.get(i).hasDifference) {
        int depth=reportLines.get(i).depth;
        for (int k=i - 1; k >= 0; k--) {
          CompareReportLine prevNode=reportLines.get(k);
          if (prevNode.depth < depth) {
            if (prevNode.hasDifference) {
              break;
            }
            depth=prevNode.depth;
            prevNode.hasDifference=true;
          }
        }
      }
    }
  }
  xml.startElement("html");
  xml.startElement("head");
  xml.startElement("meta");
  xml.addAttribute("http-equiv","Content-type");
  xml.addAttribute("content","text/html; charset=utf-8");
  xml.endElement();
  xml.startElement("title");
  xml.addText("Compare report");
  xml.endElement();
  xml.endElement();
  xml.startElement("body");
  renderHeader();
  xml.startElement("table");
  xml.addAttribute("width","100%");
  xml.addAttribute("cellspacing",0);
  xml.addAttribute("cellpadding",0);
  renderBody(monitor);
  xml.endElement();
  xml.endElement();
  xml.endElement();
  this.xml.flush();
}
