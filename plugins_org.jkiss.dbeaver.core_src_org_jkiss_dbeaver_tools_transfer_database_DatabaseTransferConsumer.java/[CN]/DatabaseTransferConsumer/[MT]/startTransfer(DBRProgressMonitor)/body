{
  monitor.beginTask("Create necessary database objects",1);
  try {
    DBSObjectContainer container=settings.getContainer();
    if (container == null) {
      throw new DBException("No target datasource");
    }
    boolean hasNewObjects=false;
    DBPDataSource dataSource=container.getDataSource();
    try (DBCSession session=DBUtils.openMetaSession(monitor,dataSource,"Create target metadata")){
      for (      DatabaseMappingContainer containerMapping : settings.getDataMappings().values()) {
switch (containerMapping.getMappingType()) {
case create:
          createTargetTable(session,containerMapping);
        hasNewObjects=true;
      break;
case existing:
    for (    DatabaseMappingAttribute attr : containerMapping.getAttributeMappings(monitor)) {
      if (attr.getMappingType() == DatabaseMappingType.create) {
        createTargetAttribute(session,attr);
        hasNewObjects=true;
      }
    }
  break;
}
}
}
 if (hasNewObjects) {
monitor.subTask("Refresh navigator model");
settings.getContainerNode().refreshNode(monitor,this);
for (DatabaseMappingContainer containerMapping : settings.getDataMappings().values()) {
switch (containerMapping.getMappingType()) {
case create:
DBSObject newTarget=container.getChild(monitor,containerMapping.getTargetName());
if (newTarget == null) {
throw new DBCException("New table " + containerMapping.getTargetName() + " not found in container "+ DBUtils.getObjectFullName(container,DBPEvaluationContext.UI));
}
 else if (!(newTarget instanceof DBSDataManipulator)) {
throw new DBCException("New table " + DBUtils.getObjectFullName(newTarget,DBPEvaluationContext.UI) + " doesn't support data manipulation");
}
containerMapping.setTarget((DBSDataManipulator)newTarget);
containerMapping.setMappingType(DatabaseMappingType.existing);
case existing:
for (DatabaseMappingAttribute attr : containerMapping.getAttributeMappings(monitor)) {
if (attr.getMappingType() == DatabaseMappingType.create) {
attr.updateMappingType(monitor);
if (attr.getTarget() == null) {
throw new DBCException("Can't find target attribute '" + attr.getTargetName() + "' in '"+ containerMapping.getTargetName()+ "'");
}
}
}
break;
}
}
}
}
  finally {
monitor.done();
}
}
