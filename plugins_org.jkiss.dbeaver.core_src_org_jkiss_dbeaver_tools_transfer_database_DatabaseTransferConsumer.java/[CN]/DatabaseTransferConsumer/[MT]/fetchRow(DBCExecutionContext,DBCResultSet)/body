{
  List<DBDAttributeValue> attrValues=new ArrayList<DBDAttributeValue>();
  for (int i=0; i < columnMappings.length; i++) {
    ColumnMapping column=columnMappings[i];
    attrValues.add(new DBDAttributeValue(column.targetAttr.getTarget(),column.valueHandler.fetchValueObject(context,resultSet,column.rsAttr,i)));
  }
  DBSDataManipulator target=containerMapping.getTarget();
  boolean retryInsert=false;
  do {
    try {
      target.insertData(targetContext,attrValues,null);
    }
 catch (    Throwable e) {
      log.error("Error inserting row",e);
      if (!ignoreErrors) {
        ExecutionQueueErrorJob errorJob=new ExecutionQueueErrorJob(DBUtils.getObjectFullName(target) + " data load",e,true);
        errorJob.schedule();
        try {
          errorJob.join();
        }
 catch (        InterruptedException e1) {
          throw new DBCException("Transfer interrupted",e);
        }
switch (errorJob.getResponse()) {
case STOP:
          throw new DBCException("Can't insert row",e);
case RETRY:
        retryInsert=true;
      break;
case IGNORE:
    retryInsert=false;
  break;
case IGNORE_ALL:
ignoreErrors=true;
retryInsert=false;
break;
}
}
}
}
 while (retryInsert);
rowsExported++;
if (settings.isUseTransactions() && (rowsExported % settings.getCommitAfterRows()) == 0) {
targetContext.getTransactionManager().commit();
}
}
