{
  if (searchControlsComposite == null || searchControlsComposite.isDisposed()) {
    return;
  }
  searchControlsComposite.getParent().setRedraw(false);
  try {
    for (    Control child : searchControlsComposite.getChildren()) {
      child.dispose();
    }
    progressBar=null;
    searchText=null;
    if (showDefaultControls) {
      ((GridLayout)searchControlsComposite.getLayout()).numColumns=2;
      defaultToolbarManager.removeAll();
      if (isSearchPossible() && isSearchEnabled()) {
        defaultToolbarManager.add(ActionUtils.makeCommandContribution(PlatformUI.getWorkbench(),IWorkbenchCommandConstants.EDIT_FIND_AND_REPLACE,CoreMessages.controls_progress_page_toolbar_title,UIIcon.SEARCH));
      }
      Label phLabel=new Label(searchControlsComposite,SWT.NONE);
      phLabel.setText("");
      phLabel.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
      ToolBar defaultToolbar=defaultToolbarManager.createControl(searchControlsComposite);
      defaultToolbar.setLayoutData(new GridData(GridData.FILL_HORIZONTAL | GridData.HORIZONTAL_ALIGN_END));
      for (      Control child : customControlsComposite.getChildren()) {
        child.dispose();
      }
      customToolbarManager.removeAll();
      fillCustomActions(customToolbarManager);
      if (!customToolbarManager.isEmpty()) {
        ToolBar toolbar=customToolbarManager.createControl(customControlsComposite);
        toolbar.setLayoutData(new GridData(GridData.FILL_HORIZONTAL | GridData.HORIZONTAL_ALIGN_END));
      }
    }
    searchControlsComposite.getParent().layout();
  }
  finally {
    searchControlsComposite.getParent().setRedraw(true);
  }
}
