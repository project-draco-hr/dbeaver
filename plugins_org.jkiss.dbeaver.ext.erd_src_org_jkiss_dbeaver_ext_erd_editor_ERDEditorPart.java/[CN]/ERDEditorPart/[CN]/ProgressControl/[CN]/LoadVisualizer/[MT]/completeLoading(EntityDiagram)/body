{
  super.completeLoading(entityDiagram);
  Control graphicalControl=getGraphicalControl();
  if (graphicalControl == null) {
    return;
  }
  graphicalControl.setBackground(ColorConstants.white);
  isLoaded=true;
  Control control=getGraphicalViewer().getControl();
  if (control == null || control.isDisposed()) {
    return;
  }
  if (entityDiagram != null) {
    List<String> errorMessages=entityDiagram.getErrorMessages();
    if (!errorMessages.isEmpty()) {
      List<Status> messageStatuses=new ArrayList<>(errorMessages.size());
      for (      String error : errorMessages) {
        messageStatuses.add(new Status(Status.ERROR,DBeaverCore.getCorePluginID(),error));
      }
      MultiStatus status=new MultiStatus(DBeaverCore.getCorePluginID(),0,messageStatuses.toArray(new IStatus[messageStatuses.size()]),null,null);
      UIUtils.showErrorDialog(control.getShell(),"Diagram loading errors","Error(s) occurred during diagram loading. If these errors are recoverable then fix errors and then refresh/reopen diagram",status);
    }
    setInfo(entityDiagram.getEntityCount() + " objects");
  }
 else {
    setInfo("Empty diagram due to error (see error log)");
  }
  getCommandStack().flush();
  getGraphicalViewer().setContents(entityDiagram);
  zoomCombo.setZoomManager(rootPart.getZoomManager());
}
