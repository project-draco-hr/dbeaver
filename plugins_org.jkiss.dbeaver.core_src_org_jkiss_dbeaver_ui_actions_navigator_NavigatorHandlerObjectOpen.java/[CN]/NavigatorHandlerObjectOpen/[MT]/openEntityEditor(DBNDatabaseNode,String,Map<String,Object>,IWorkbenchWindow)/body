{
  if (selectedNode instanceof DBNDataSource) {
    EditConnectionDialog dialog=new EditConnectionDialog(workbenchWindow,new EditConnectionWizard((DataSourceDescriptor)selectedNode.getDataSourceContainer()));
    dialog.open();
    return null;
  }
  if (!selectedNode.isPersisted()) {
    return null;
  }
  try {
    String defaultFolderId=null;
    if (selectedNode instanceof DBNDatabaseFolder && !(selectedNode.getParentNode() instanceof DBNDatabaseFolder) && selectedNode.getParentNode() instanceof DBNDatabaseNode) {
      defaultFolderId=selectedNode.getNodeType();
      selectedNode=(DBNDatabaseNode)selectedNode.getParentNode();
    }
    DatabaseEditorInputFactory.setLookupEditor(true);
    try {
      for (      IEditorReference ref : workbenchWindow.getActivePage().getEditorReferences()) {
        IEditorInput editorInput;
        try {
          editorInput=ref.getEditorInput();
        }
 catch (        PartInitException e) {
          continue;
        }
        if (editorInput instanceof EntityEditorInput && ((EntityEditorInput)editorInput).getNavigatorNode() == selectedNode) {
          final IEditorPart editor=ref.getEditor(true);
          if (editor instanceof IFolderContainer) {
            ((IFolderContainer)editor).switchFolder(defaultFolderId);
          }
          workbenchWindow.getActivePage().activate(editor);
          return editor;
        }
      }
    }
  finally {
      DatabaseEditorInputFactory.setLookupEditor(false);
    }
    IWorkbenchPart oldActivePart=workbenchWindow.getActivePage().getActivePart();
    try {
      if (selectedNode instanceof DBNDatabaseFolder) {
        FolderEditorInput folderInput=new FolderEditorInput((DBNDatabaseFolder)selectedNode);
        folderInput.setDefaultPageId(defaultPageId);
        setInputAttributes(folderInput,defaultPageId,defaultFolderId,attributes);
        return workbenchWindow.getActivePage().openEditor(folderInput,FolderEditor.class.getName());
      }
 else       if (selectedNode instanceof DBNDatabaseObject) {
        DBNDatabaseObject objectNode=(DBNDatabaseObject)selectedNode;
        ObjectEditorInput objectInput=new ObjectEditorInput(objectNode);
        setInputAttributes(objectInput,defaultPageId,defaultFolderId,attributes);
        return workbenchWindow.getActivePage().openEditor(objectInput,objectNode.getMeta().getEditorId());
      }
 else       if (selectedNode.getObject() != null) {
        EntityEditorInput editorInput=new EntityEditorInput(selectedNode);
        setInputAttributes(editorInput,defaultPageId,defaultFolderId,attributes);
        return workbenchWindow.getActivePage().openEditor(editorInput,EntityEditor.class.getName());
      }
 else {
        throw new DBException("Don't know how to open object '" + selectedNode.getNodeName() + "'");
      }
    }
  finally {
      if (!(oldActivePart instanceof IEditorPart)) {
      }
    }
  }
 catch (  Exception ex) {
    UIUtils.showErrorDialog(workbenchWindow.getShell(),CoreMessages.actions_navigator_error_dialog_open_entity_title,"Can't open entity '" + selectedNode.getNodeName() + "'",ex);
    return null;
  }
}
