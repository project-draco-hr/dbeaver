{
  if (connecting) {
    log.debug("Can't connect - connect/disconnect is in progress");
    return false;
  }
  if (this.isConnected()) {
    log.debug("Can't connect - already connected");
    return false;
  }
  log.debug("Connect with '" + getName() + "' ("+ getId()+ ")");
  connecting=true;
  DBPConnectionConfiguration savedConnectionInfo=null;
  tunnelConnectionInfo=null;
  try {
    this.tunnel=null;
    DBWHandlerConfiguration tunnelConfiguration=null;
    for (    DBWHandlerConfiguration handler : connectionInfo.getDeclaredHandlers()) {
      if (handler.isEnabled() && handler.getType() == DBWHandlerType.TUNNEL) {
        tunnelConfiguration=handler;
        break;
      }
    }
    monitor.beginTask("Connect to " + getName(),tunnelConfiguration != null ? 3 : 2);
    if (tunnelConfiguration != null) {
      monitor.subTask("Initialize tunnel");
      tunnel=tunnelConfiguration.createHandler(DBWTunnel.class);
      try {
        tunnelConnectionInfo=tunnel.initializeTunnel(monitor,registry.getApplication(),tunnelConfiguration,connectionInfo);
      }
 catch (      Exception e) {
        throw new DBCException("Can't initialize tunnel",e);
      }
      monitor.worked(1);
    }
    if (tunnelConnectionInfo != null) {
      savedConnectionInfo=connectionInfo;
      connectionInfo=tunnelConnectionInfo;
    }
    monitor.subTask("Connect to data source");
    dataSource=getDriver().getDataSourceProvider().openDataSource(monitor,this);
    monitor.worked(1);
    if (initialize) {
      monitor.subTask("Initialize data source");
      try {
        dataSource.initialize(monitor);
      }
 catch (      Throwable e) {
        log.error("Error initializing datasource",e);
      }
      initConnectionState(monitor);
    }
    connectFailed=false;
    connectTime=new Date();
    if (reflect) {
      getRegistry().notifyDataSourceListeners(new DBPEvent(DBPEvent.Action.OBJECT_UPDATE,DataSourceDescriptor.this,true));
    }
    log.debug("Connected (" + getId() + ")");
    return true;
  }
 catch (  Exception e) {
    log.debug("Connection failed (" + getId() + ")");
    connectFailed=true;
    getRegistry().notifyDataSourceListeners(new DBPEvent(DBPEvent.Action.OBJECT_UPDATE,DataSourceDescriptor.this,false));
    if (e instanceof DBException) {
      throw (DBException)e;
    }
 else {
      throw new DBException("Internal error connecting to " + getName(),e);
    }
  }
 finally {
    monitor.done();
    if (savedConnectionInfo != null) {
      connectionInfo=savedConnectionInfo;
    }
    connecting=false;
  }
}
