{
  if (this.isConnected()) {
    return;
  }
  DBPConnectionInfo savedConnectionInfo=null;
  tunnelConnectionInfo=null;
  try {
    this.tunnel=null;
    DBWHandlerConfiguration tunnelConfiguration=null;
    for (    DBWHandlerConfiguration handler : connectionInfo.getDeclaredHandlers()) {
      if (handler.isEnabled() && handler.getType() == DBWHandlerType.TUNNEL) {
        tunnelConfiguration=handler;
        break;
      }
    }
    if (tunnelConfiguration != null) {
      tunnel=tunnelConfiguration.createHandler(DBWTunnel.class);
      try {
        tunnelConnectionInfo=tunnel.initializeTunnel(monitor,tunnelConfiguration,connectionInfo);
      }
 catch (      Exception e) {
        throw new DBCException("Can't initialize tunnel",e);
      }
    }
    if (tunnelConnectionInfo != null) {
      savedConnectionInfo=connectionInfo;
      connectionInfo=tunnelConnectionInfo;
    }
    dataSource=getDriver().getDataSourceProvider().openDataSource(monitor,this);
    if (initialize) {
      dataSource.initialize(monitor);
      DBCSession session=dataSource.openSession(monitor,DBCExecutionPurpose.UTIL,"Set session defaults ...");
      try {
        DBCTransactionManager txnManager=session.getTransactionManager();
        boolean autoCommit=txnManager.isAutoCommit();
        AbstractPreferenceStore store=getPreferenceStore();
        boolean newAutoCommit;
        if (!store.contains(PrefConstants.DEFAULT_AUTO_COMMIT)) {
          newAutoCommit=connectionInfo.getConnectionType().isAutocommit();
        }
 else {
          newAutoCommit=store.getBoolean(PrefConstants.DEFAULT_AUTO_COMMIT);
        }
        if (autoCommit != newAutoCommit) {
          txnManager.setAutoCommit(newAutoCommit);
        }
        if (store.contains(PrefConstants.DEFAULT_ISOLATION)) {
          int isolationCode=store.getInt(PrefConstants.DEFAULT_ISOLATION);
          Collection<DBPTransactionIsolation> supportedLevels=dataSource.getInfo().getSupportedTransactionsIsolation();
          if (!CommonUtils.isEmpty(supportedLevels)) {
            for (            DBPTransactionIsolation level : supportedLevels) {
              if (level.getCode() == isolationCode) {
                txnManager.setTransactionIsolation(level);
                break;
              }
            }
          }
        }
      }
 catch (      DBCException e) {
        log.error("Can't set session transactions state",e);
      }
 finally {
        session.close();
      }
    }
    connectFailed=false;
    connectTime=new Date();
    if (reflect) {
      getRegistry().fireDataSourceEvent(DBPEvent.Action.OBJECT_UPDATE,DataSourceDescriptor.this,true);
    }
    firePropertyChange();
  }
 catch (  Exception e) {
    connectFailed=true;
    getRegistry().fireDataSourceEvent(DBPEvent.Action.OBJECT_UPDATE,DataSourceDescriptor.this,false);
    if (e instanceof DBException) {
      throw (DBException)e;
    }
 else {
      throw new DBException("Internal error connecting to " + getName(),e);
    }
  }
 finally {
    if (savedConnectionInfo != null) {
      connectionInfo=savedConnectionInfo;
    }
  }
}
