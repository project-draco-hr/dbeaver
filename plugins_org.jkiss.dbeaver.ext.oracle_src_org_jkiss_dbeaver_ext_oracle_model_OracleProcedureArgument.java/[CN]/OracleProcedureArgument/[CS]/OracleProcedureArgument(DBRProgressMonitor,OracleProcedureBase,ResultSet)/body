{
  this.procedure=procedure;
  this.name=JDBCUtils.safeGetString(dbResult,"ARGUMENT_NAME");
  this.position=JDBCUtils.safeGetInt(dbResult,"POSITION");
  this.dataLevel=JDBCUtils.safeGetInt(dbResult,"DATA_LEVEL");
  this.sequence=JDBCUtils.safeGetInt(dbResult,"SEQUENCE");
  this.mode=OracleParameterMode.getMode(JDBCUtils.safeGetString(dbResult,"IN_OUT"));
  final String dataType=JDBCUtils.safeGetString(dbResult,"DATA_TYPE");
  this.type=CommonUtils.isEmpty(dataType) ? null : OracleDataType.resolveDataType(monitor,procedure.getDataSource(),null,dataType);
  final String typeName=JDBCUtils.safeGetString(dbResult,"TYPE_NAME");
  final String typeOwner=JDBCUtils.safeGetString(dbResult,"TYPE_OWNER");
  this.packageTypeName=JDBCUtils.safeGetString(dbResult,"TYPE_SUBNAME");
  if (!CommonUtils.isEmpty(typeName) && !CommonUtils.isEmpty(typeOwner) && CommonUtils.isEmpty(this.packageTypeName)) {
    this.dataType=OracleDataType.resolveDataType(monitor,procedure.getDataSource(),typeOwner,typeName);
  }
 else   if (this.packageTypeName != null) {
    packageTypeName=typeName + "." + packageTypeName;
  }
  this.dataLength=JDBCUtils.safeGetInt(dbResult,"DATA_LENGTH");
  this.dataScale=JDBCUtils.safeGetInt(dbResult,"DATA_SCALE");
  this.dataPrecision=JDBCUtils.safeGetInt(dbResult,"DATA_PRECISION");
}
