{
  if (functionBracket.contains(Boolean.TRUE))   return 0;
  try {
    String s=GeneralUtils.getDefaultLineSeparator();
    final FormatterToken prevToken=argList.get(argIndex - 1);
    if (prevToken.getType() == TokenType.COMMENT && prevToken.getString().startsWith("--")) {
      s="";
    }
    for (int index=0; index < argIndent; index++) {
      s+=formatterCfg.getIndentString();
    }
    FormatterToken token=argList.get(argIndex);
    if (token.getType() == TokenType.SPACE) {
      token.setString(s);
      return 0;
    }
    boolean isDelimiter=statementDelimiters.contains(token.getString().toUpperCase());
    if (!isDelimiter) {
      token=argList.get(argIndex - 1);
      if (token.getType() == TokenType.SPACE) {
        token.setString(s);
        return 0;
      }
    }
    if (isDelimiter) {
      if (argList.size() > argIndex + 1) {
        argList.add(argIndex + 1,new FormatterToken(TokenType.SPACE,s + s));
      }
    }
 else {
      argList.add(argIndex,new FormatterToken(TokenType.SPACE,s));
    }
    return 1;
  }
 catch (  IndexOutOfBoundsException e) {
    e.printStackTrace();
    return 0;
  }
}
