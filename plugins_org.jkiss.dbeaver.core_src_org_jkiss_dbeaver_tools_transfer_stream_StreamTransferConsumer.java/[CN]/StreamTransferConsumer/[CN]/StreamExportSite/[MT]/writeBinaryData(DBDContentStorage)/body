{
  try (final InputStream stream=cs.getContentStream()){
    exportSite.flush();
    final DBPDataSource dataSource=sourceObject.getDataSource();
    if (dataSource instanceof SQLDataSource) {
      ByteArrayOutputStream buffer=new ByteArrayOutputStream((int)cs.getContentLength());
      IOUtils.copyStream(stream,buffer);
      final byte[] bytes=buffer.toByteArray();
      final String binaryString=((SQLDataSource)dataSource).getSQLDialect().getNativeBinaryFormatter().toString(bytes,0,bytes.length);
      writer.write(binaryString);
    }
 else {
switch (settings.getLobEncoding()) {
case BASE64:
{
          Base64.encode(stream,cs.getContentLength(),writer);
          break;
        }
case HEX:
{
        writer.write("0x");
        byte[] buffer=new byte[5000];
        for (; ; ) {
          int count=stream.read(buffer);
          if (count <= 0) {
            break;
          }
          GeneralUtils.writeBytesAsHex(writer,buffer,0,count);
        }
        break;
      }
default :
    try (Reader reader=new InputStreamReader(stream,cs.getCharset())){
      IOUtils.copyText(reader,writer);
    }
   break;
}
}
}
 }
