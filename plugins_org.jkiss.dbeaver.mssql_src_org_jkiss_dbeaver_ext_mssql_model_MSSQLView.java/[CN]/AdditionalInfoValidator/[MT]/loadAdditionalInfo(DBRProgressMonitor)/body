{
  if (!isPersisted() || getContainer().isSystem()) {
    additionalInfo.loaded=true;
    return;
  }
  JDBCExecutionContext context=getDataSource().openContext(monitor,DBCExecutionPurpose.META,"Load table status");
  try {
    JDBCPreparedStatement dbStat=context.prepareStatement("SELECT * FROM " + MSSQLConstants.META_TABLE_VIEWS + " WHERE "+ MSSQLConstants.COL_TABLE_SCHEMA+ "=? AND "+ MSSQLConstants.COL_TABLE_NAME+ "=?");
    try {
      dbStat.setString(1,getContainer().getName());
      dbStat.setString(2,getName());
      JDBCResultSet dbResult=dbStat.executeQuery();
      try {
        if (dbResult.next()) {
          try {
            additionalInfo.setCheckOption(CheckOption.valueOf(JDBCUtils.safeGetString(dbResult,MSSQLConstants.COL_CHECK_OPTION)));
          }
 catch (          IllegalArgumentException e) {
            log.warn(e);
          }
          additionalInfo.setDefiner(JDBCUtils.safeGetString(dbResult,MSSQLConstants.COL_DEFINER));
          additionalInfo.setDefinition(SQLUtils.formatSQL(getDataSource(),JDBCUtils.safeGetString(dbResult,MSSQLConstants.COL_VIEW_DEFINITION)));
          additionalInfo.setUpdatable("YES".equals(JDBCUtils.safeGetString(dbResult,MSSQLConstants.COL_IS_UPDATABLE)));
        }
        additionalInfo.loaded=true;
      }
  finally {
        dbResult.close();
      }
    }
  finally {
      dbStat.close();
    }
  }
 catch (  SQLException e) {
    throw new DBCException(e);
  }
 finally {
    context.close();
  }
}
