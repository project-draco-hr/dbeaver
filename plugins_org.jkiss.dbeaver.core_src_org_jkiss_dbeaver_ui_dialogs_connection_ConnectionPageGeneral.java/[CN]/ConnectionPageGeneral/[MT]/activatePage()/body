{
  if (connectionNameText != null) {
    ConnectionPageSettings settings=wizard.getPageSettings();
    String newName;
    if (settings != null) {
      DBPConnectionConfiguration connectionInfo=settings.getActiveDataSource().getConnectionConfiguration();
      newName=dataSourceDescriptor == null ? "" : settings.getActiveDataSource().getName();
      if (CommonUtils.isEmpty(newName)) {
        newName=connectionInfo.getDatabaseName();
        if (CommonUtils.isEmpty(newName)) {
          newName=connectionInfo.getHostName();
        }
        if (CommonUtils.isEmpty(newName)) {
          newName=connectionInfo.getUrl();
        }
        if (CommonUtils.isEmpty(newName)) {
          newName=CoreMessages.dialog_connection_wizard_final_default_new_connection_name;
        }
        StringTokenizer st=new StringTokenizer(newName,"/\\:,?=%$#@!^&*()");
        while (st.hasMoreTokens()) {
          newName=st.nextToken();
        }
        if (!CommonUtils.isEmpty(settings.getDriver().getCategory())) {
          newName=settings.getDriver().getCategory() + " - " + newName;
        }
 else {
          newName=settings.getDriver().getName() + " - " + newName;
        }
        newName=CommonUtils.truncateString(newName,50);
      }
    }
 else {
      newName=wizard.getSelectedDriver().getName();
    }
    if (CommonUtils.isEmpty(connectionNameText.getText()) || !connectionNameChanged) {
      connectionNameText.setText(newName);
      connectionNameChanged=false;
    }
  }
  if (dataSourceDescriptor != null) {
    if (!activated) {
      connectionTypeCombo.select(dataSourceDescriptor.getConnectionConfiguration().getConnectionType());
      savePasswordCheck.setSelection(dataSourceDescriptor.isSavePassword());
      autocommit.setSelection(dataSourceDescriptor.isDefaultAutoCommit());
      showSystemObjects.setSelection(dataSourceDescriptor.isShowSystemObjects());
      readOnlyConnection.setSelection(dataSourceDescriptor.isConnectionReadOnly());
      isolationLevel.add("");
      if (dataSourceDescriptor.isConnected()) {
        DBPDataSource dataSource=dataSourceDescriptor.getDataSource();
        isolationLevel.setEnabled(!autocommit.getSelection());
        supportedLevels.clear();
        DBPTransactionIsolation defaultLevel=dataSourceDescriptor.getActiveTransactionsIsolation();
        for (        DBPTransactionIsolation level : CommonUtils.safeCollection(dataSource.getInfo().getSupportedTransactionsIsolation())) {
          if (!level.isEnabled())           continue;
          isolationLevel.add(level.getTitle());
          supportedLevels.add(level);
          if (level.equals(defaultLevel)) {
            isolationLevel.select(isolationLevel.getItemCount() - 1);
          }
        }
        if (dataSource instanceof DBSObjectContainer) {
          new SchemaReadJob((DBSObjectContainer)dataSource).schedule();
        }
      }
 else {
        isolationLevel.setEnabled(false);
      }
      defaultSchema.setText(CommonUtils.notEmpty(dataSourceDescriptor.getConnectionConfiguration().getBootstrap().getDefaultObjectName()));
      activated=true;
    }
  }
 else {
    if (eventsButton != null) {
      eventsButton.setFont(getFont());
      DataSourceDescriptor dataSource=getActiveDataSource();
      for (      DBPConnectionEventType eventType : dataSource.getConnectionConfiguration().getDeclaredEvents()) {
        if (dataSource.getConnectionConfiguration().getEvent(eventType).isEnabled()) {
          eventsButton.setFont(boldFont);
          break;
        }
      }
    }
    savePasswordCheck.setSelection(true);
    connectionTypeCombo.select(0);
    autocommit.setSelection(((DBPConnectionType)connectionTypeCombo.getData(0)).isAutocommit());
    showSystemObjects.setSelection(true);
    readOnlyConnection.setSelection(false);
    isolationLevel.setEnabled(false);
    defaultSchema.setText("");
  }
  if (savePasswordCheck != null) {
  }
  long features=0;
  try {
    features=wizard.getSelectedDriver().getDataSourceProvider().getFeatures();
  }
 catch (  DBException e) {
    log.error("Can't obtain data source provider instance",e);
  }
  for (  FilterInfo filterInfo : filters) {
    if (DBSCatalog.class.isAssignableFrom(filterInfo.type)) {
      enableFilter(filterInfo,(features & DBPDataSourceProvider.FEATURE_CATALOGS) != 0);
    }
 else     if (DBSSchema.class.isAssignableFrom(filterInfo.type)) {
      enableFilter(filterInfo,(features & DBPDataSourceProvider.FEATURE_SCHEMAS) != 0);
    }
 else {
      enableFilter(filterInfo,true);
    }
  }
  filtersGroup.layout();
}
