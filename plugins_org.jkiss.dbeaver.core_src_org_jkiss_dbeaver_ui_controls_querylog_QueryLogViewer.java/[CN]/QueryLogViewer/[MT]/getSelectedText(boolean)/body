{
  IStructuredSelection selection=getSelection();
  if (selection.isEmpty()) {
    return null;
  }
  StringBuilder tdt=new StringBuilder();
  for (Iterator<?> i=selection.iterator(); i.hasNext(); ) {
    QMMetaEvent item=(QMMetaEvent)i.next();
    if (tdt.length() > 0) {
      tdt.append(GeneralUtils.getDefaultLineSeparator());
    }
    if (extraInfo) {
      for (int i1=0, columnsSize=columns.size(); i1 < columnsSize; i1++) {
        ColumnDescriptor cd=columns.get(i1);
        String text=cd.logColumn.getText(item);
        if (i1 > 0) {
          tdt.append('\t');
        }
        tdt.append(text);
      }
    }
 else {
      String text=COLUMN_TEXT.getText(item);
      tdt.append(text);
    }
  }
  return tdt.toString();
}
