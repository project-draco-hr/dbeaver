{
  MenuManager menuMgr=new MenuManager();
  Menu menu=menuMgr.createContextMenu(logTable);
  menuMgr.addMenuListener(new IMenuListener(){
    @Override public void menuAboutToShow(    IMenuManager manager){
      IAction copyAction=new Action(CoreMessages.controls_querylog_action_copy){
        @Override public void run(){
          copySelectionToClipboard(false);
        }
      }
;
      copyAction.setEnabled(logTable.getSelectionCount() > 0);
      copyAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_COPY);
      IAction copyAllAction=new Action(CoreMessages.controls_querylog_action_copy_all_fields){
        @Override public void run(){
          copySelectionToClipboard(true);
        }
      }
;
      copyAllAction.setEnabled(logTable.getSelectionCount() > 0);
      copyAllAction.setActionDefinitionId(CoreCommands.CMD_COPY_SPECIAL);
      IAction selectAllAction=new Action(CoreMessages.controls_querylog_action_select_all){
        @Override public void run(){
          selectAll();
        }
      }
;
      selectAllAction.setActionDefinitionId(IWorkbenchCommandConstants.EDIT_SELECT_ALL);
      IAction clearLogAction=new Action(CoreMessages.controls_querylog_action_clear_log){
        @Override public void run(){
          clearLog();
        }
      }
;
      manager.add(copyAction);
      manager.add(copyAllAction);
      manager.add(selectAllAction);
      manager.add(clearLogAction);
    }
  }
);
  menuMgr.setRemoveAllWhenShown(true);
  logTable.setMenu(menu);
  site.registerContextMenu(menuMgr,this);
}
