{
  GridLayout gridLayout=new GridLayout();
  gridLayout.numColumns=2;
  textComposite=new Composite(dialogShell,SWT.NONE);
  textComposite.setLayout(gridLayout);
  createRadixPanel();
  text=new Text(textComposite,SWT.BORDER | SWT.SINGLE);
  text.setTextLimit(30);
  int columns=35;
  GC gc=new GC(text);
  FontMetrics fm=gc.getFontMetrics();
  int width=columns * fm.getAverageCharWidth();
  gc.dispose();
  text.setLayoutData(new GridData(width,SWT.DEFAULT));
  text.addModifyListener(new ModifyListener(){
    @Override public void modifyText(    ModifyEvent e){
      String newText=text.getText();
      int radix=10;
      Matcher numberMatcher;
      if (hexRadioButton.getSelection()) {
        numberMatcher=patternHexDigits.matcher(newText);
        radix=16;
      }
 else {
        numberMatcher=patternDecDigits.matcher(newText);
      }
      tempResult=-1;
      if (numberMatcher.matches())       tempResult=Long.parseLong(newText,radix);
      if (tempResult >= 0L && tempResult <= limit) {
        showButton.setEnabled(true);
        gotoButton.setEnabled(true);
        label2.setText("");
      }
 else {
        showButton.setEnabled(false);
        gotoButton.setEnabled(false);
        if ("".equals(newText))         label2.setText("");
 else         if (tempResult < 0)         label2.setText(CoreMessages.dialog_go_to_label_not_number);
 else         label2.setText(CoreMessages.dialog_go_to_label_out_of_range);
      }
    }
  }
);
  FormData formData=new FormData();
  formData.top=new FormAttachment(label);
  textComposite.setLayoutData(formData);
}
