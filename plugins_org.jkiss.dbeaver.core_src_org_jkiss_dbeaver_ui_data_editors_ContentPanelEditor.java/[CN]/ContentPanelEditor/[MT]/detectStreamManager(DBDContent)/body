{
  DBeaverUI.runInUI(DBeaverUI.getActiveWorkbenchWindow(),new DBRRunnableWithProgress(){
    @Override public void run(    DBRProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
      monitor.beginTask("Detect appropriate editor",1);
      try {
        streamManagers=ValueManagerRegistry.getInstance().getApplicableStreamManagers(monitor,valueController.getValueType(),content);
        curStreamManager=findManager(IStreamValueManager.MatchType.EXCLUSIVE);
        if (curStreamManager == null)         curStreamManager=findManager(IStreamValueManager.MatchType.PRIMARY);
        if (curStreamManager == null)         curStreamManager=findManager(IStreamValueManager.MatchType.DEFAULT);
        if (curStreamManager == null)         curStreamManager=findManager(IStreamValueManager.MatchType.APPLIES);
        if (curStreamManager == null) {
          throw new DBException("Can't find appropriate stream manager");
        }
      }
 catch (      Exception e) {
        throw new InvocationTargetException(e);
      }
 finally {
        monitor.done();
      }
    }
    private StreamValueManagerDescriptor findManager(    IStreamValueManager.MatchType matchType){
      for (      Map.Entry<StreamValueManagerDescriptor,IStreamValueManager.MatchType> entry : streamManagers.entrySet()) {
        if (entry.getValue() == matchType) {
          return entry.getKey();
        }
      }
      return null;
    }
  }
);
}
