{
  IStructuredSelection selection=(IStructuredSelection)HandlerUtil.getCurrentSelection(event);
  List<DB2Table> tables=new ArrayList<DB2Table>();
  DB2DataSource dataSource=null;
  for (Iterator iter=selection.iterator(); iter.hasNext(); ) {
    final DB2Table db2Table=RuntimeUtils.getObjectAdapter(iter.next(),DB2Table.class);
    if (db2Table != null) {
      tables.add(db2Table);
      dataSource=db2Table.getDataSource();
    }
  }
  if (!tables.isEmpty()) {
    IWorkbenchPart activePart=HandlerUtil.getActivePart(event);
    Shell activeShell=HandlerUtil.getActiveShell(event);
    try {
      if (event.getCommand().getId().equals(CMD_REORG_ID)) {
        performReorg(activeShell,tables.get(0));
      }
 else       if (event.getCommand().getId().equals(CMD_REORGIX_ID)) {
        performReorgIx(activeShell,tables.get(0));
      }
 else       if (event.getCommand().getId().equals(CMD_RUNSTATS_ID)) {
        performRunstats(activePart.getSite(),dataSource,tables);
      }
    }
 catch (    InvocationTargetException e) {
      UIUtils.showErrorDialog(activeShell,"Error",e.getTargetException().getMessage());
    }
catch (    InterruptedException e) {
    }
catch (    SQLException e) {
      UIUtils.showErrorDialog(activeShell,"Error",e.getMessage());
    }
catch (    DBException e) {
      UIUtils.showErrorDialog(activeShell,"Error",e.getMessage());
    }
  }
  return null;
}
