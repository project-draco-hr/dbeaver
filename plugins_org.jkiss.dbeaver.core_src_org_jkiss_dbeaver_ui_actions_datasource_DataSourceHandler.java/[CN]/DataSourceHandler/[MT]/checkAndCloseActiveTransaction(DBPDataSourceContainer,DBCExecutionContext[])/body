{
  if (container.getDataSource() == null) {
    return true;
  }
  Boolean commitTxn=null;
  for (  final DBCExecutionContext context : contexts) {
    try {
      if (isContextTransactionAffected(context)) {
        if (commitTxn == null) {
          TransactionCloseConfirmer closeConfirmer=new TransactionCloseConfirmer(container.getName());
          DBeaverUI.syncExec(closeConfirmer);
switch (closeConfirmer.result) {
case IDialogConstants.YES_ID:
            commitTxn=true;
          break;
case IDialogConstants.NO_ID:
        commitTxn=false;
      break;
default :
    return false;
}
}
final boolean commit=commitTxn;
DBeaverUI.runInProgressService(new DBRRunnableWithProgress(){
@Override public void run(DBRProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
  closeActiveTransaction(monitor,context,commit);
}
}
);
}
}
 catch (Throwable e) {
log.warn("Can't rollback active transaction before disconnect",e);
}
}
return true;
}
