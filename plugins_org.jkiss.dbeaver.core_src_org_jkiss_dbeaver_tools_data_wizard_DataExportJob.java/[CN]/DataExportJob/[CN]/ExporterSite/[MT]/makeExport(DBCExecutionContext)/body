{
  try {
    dataExporter=settings.getDataExporter().createExporter();
  }
 catch (  Exception e) {
    throw new DBException("Could not create data exporter",e);
  }
  outputFile=settings.makeOutputFile(getSource());
  this.outputStream=new BufferedOutputStream(new FileOutputStream(outputFile),10000);
  try {
    ZipOutputStream zipStream=null;
    if (settings.isCompressResults()) {
      zipStream=new ZipOutputStream(this.outputStream);
      zipStream.putNextEntry(new ZipEntry(settings.getOutputFileName(getSource())));
      this.outputStream=zipStream;
    }
    this.writer=new PrintWriter(new OutputStreamWriter(this.outputStream,settings.getOutputEncoding()),true);
    try {
      if (settings.isOutputEncodingBOM()) {
        byte[] bom=ContentUtils.getCharsetBOM(settings.getOutputEncoding());
        if (bom != null) {
          outputStream.write(bom);
          outputStream.flush();
        }
      }
      dataExporter.init(this);
      dataProducer.transferData(context,this,settings);
    }
  finally {
      try {
        this.flush();
      }
 catch (      IOException e) {
        log.debug(e);
      }
      dataExporter.dispose();
      dataExporter=null;
      if (zipStream != null) {
        try {
          zipStream.closeEntry();
        }
 catch (        IOException e) {
          log.debug(e);
        }
        try {
          zipStream.finish();
        }
 catch (        IOException e) {
          log.debug(e);
        }
      }
      if (this.writer != null) {
        ContentUtils.close(this.writer);
        this.writer=null;
      }
    }
  }
  finally {
    ContentUtils.close(outputStream);
    outputStream=null;
  }
}
