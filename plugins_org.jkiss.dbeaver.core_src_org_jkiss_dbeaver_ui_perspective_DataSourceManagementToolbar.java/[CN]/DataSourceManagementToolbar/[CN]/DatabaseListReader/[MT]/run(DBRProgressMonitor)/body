{
  DBSObjectContainer objectContainer=DBUtils.getAdapter(DBSObjectContainer.class,getDataSource());
  DBSObjectSelector objectSelector=DBUtils.getAdapter(DBSObjectSelector.class,getDataSource());
  if (objectContainer == null || objectSelector == null) {
    return Status.CANCEL_STATUS;
  }
  try {
    monitor.beginTask(CoreMessages.toolbar_datasource_selector_action_read_databases,1);
    Class<? extends DBSObject> childType=objectContainer.getChildType(monitor);
    if (childType == null || !DBSObjectContainer.class.isAssignableFrom(childType)) {
      enabled=false;
    }
 else {
      enabled=true;
      Collection<? extends DBSObject> children=objectContainer.getChildren(monitor);
      databasesInfo.list=CommonUtils.isEmpty(children) ? Collections.<DBSObject>emptyList() : new ArrayList<DBSObject>(children);
      databasesInfo.active=objectSelector.getSelectedObject();
      if (children != null) {
        for (        DBSObject child : children) {
          DBeaverCore.getInstance().getNavigatorModel().getNodeByObject(monitor,child,false);
        }
      }
    }
  }
 catch (  DBException e) {
    return RuntimeUtils.makeExceptionStatus(e);
  }
 finally {
    monitor.done();
  }
  if (enabled) {
    if (databasesInfo.list != null && !databasesInfo.list.isEmpty()) {
      DBNModel navigatorModel=DBeaverCore.getInstance().getNavigatorModel();
      for (      DBSObject database : databasesInfo.list) {
        if (DBUtils.getAdapter(DBSObjectContainer.class,database) != null) {
          navigatorModel.getNodeByObject(monitor,database,false);
        }
      }
    }
  }
  return Status.OK_STATUS;
}
