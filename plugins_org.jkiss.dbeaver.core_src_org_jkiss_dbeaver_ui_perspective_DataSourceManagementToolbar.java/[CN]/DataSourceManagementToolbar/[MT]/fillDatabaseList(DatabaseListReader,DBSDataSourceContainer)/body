{
synchronized (dbListReads) {
    dbListReads.remove(reader);
  }
  if (databaseCombo.isDisposed()) {
    return;
  }
  databaseCombo.setRedraw(false);
  try {
    databaseCombo.removeAll();
    if (!reader.enabled) {
      databaseCombo.setEnabled(false);
      return;
    }
    Collection<DBNDatabaseNode> dbList=reader.nodeList;
    if (dbList != null && !dbList.isEmpty()) {
      for (      DBNDatabaseNode node : dbList) {
        databaseCombo.add(DBeaverIcons.getImage(node.getNodeIconDefault()),node.getName(),UIUtils.getConnectionColor(node.getObject().getDataSource().getContainer().getConnectionConfiguration()),node);
      }
    }
    if (reader.active != null) {
      int dbCount=databaseCombo.getItemCount();
      for (int i=0; i < dbCount; i++) {
        String dbName=databaseCombo.getItemText(i);
        if (dbName.equals(reader.active.getName())) {
          databaseCombo.select(i);
          break;
        }
      }
    }
    databaseCombo.setEnabled(reader.enabled);
  }
  finally {
    if (!databaseCombo.isDisposed()) {
      databaseCombo.setRedraw(true);
    }
  }
}
