{
  super(schema,JDBCUtils.safeGetStringTrimmed(dbResult,"MODULENAME"),true);
  this.moduleId=JDBCUtils.safeGetInteger(dbResult,"MODULEID");
  this.owner=JDBCUtils.safeGetString(dbResult,"OWNER");
  this.ownerType=CommonUtils.valueOf(DB2OwnerType.class,JDBCUtils.safeGetString(dbResult,"OWNERTYPE"));
  this.dialect=JDBCUtils.safeGetString(dbResult,"DIALECT");
  this.type=CommonUtils.valueOf(DB2ModuleType.class,JDBCUtils.safeGetString(dbResult,"MODULETYPE"));
  this.createTime=JDBCUtils.safeGetTimestamp(dbResult,"CREATE_TIME");
  this.remarks=JDBCUtils.safeGetString(dbResult,"REMARKS");
  this.conditionCache=new JDBCObjectSimpleCache<DB2Module,DB2ModuleCondition>(DB2ModuleCondition.class,C_CON,schema.getName(),name);
  this.functionCache=new JDBCObjectSimpleCache<DB2Module,DB2Routine>(DB2Routine.class,C_FCT,schema.getName(),name);
  this.procedureCache=new JDBCObjectSimpleCache<DB2Module,DB2Routine>(DB2Routine.class,C_PRC,schema.getName(),name);
  this.typeCache=new JDBCObjectSimpleCache<DB2Module,DB2DataType>(DB2DataType.class,C_TYP,schema.getName(),name);
  this.variableCache=new JDBCObjectSimpleCache<DB2Module,DB2Variable>(DB2Variable.class,C_VAR,schema.getName(),name);
}
