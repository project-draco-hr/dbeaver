{
  super(table,name,null,null,true);
  this.oid=JDBCUtils.safeGetInt(resultSet,"oid");
  Object keyNumbers=JDBCUtils.safeGetArray(resultSet,"conkey");
  if (keyNumbers != null) {
    List<PostgreAttribute> attributes=table.getAttributes(resultSet.getSession().getProgressMonitor());
    int colCount=Array.getLength(keyNumbers);
    for (int i=0; i < colCount; i++) {
      Number colNumber=(Number)Array.get(keyNumbers,i);
      if (colNumber.intValue() < 0 || colNumber.intValue() >= attributes.size()) {
        log.warn("Bad constraint attribute index: " + colNumber);
      }
 else {
        PostgreAttribute attr=attributes.get(colNumber.intValue());
        PostgreTableConstraintColumn cCol=new PostgreTableConstraintColumn(this,attr,i);
        columns.add(cCol);
      }
    }
  }
}
