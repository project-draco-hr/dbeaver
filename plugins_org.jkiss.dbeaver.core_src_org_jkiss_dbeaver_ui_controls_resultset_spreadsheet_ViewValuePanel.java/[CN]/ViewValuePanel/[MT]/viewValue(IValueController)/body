{
  if (previewController == null || valueController.getValueType() != previewController.getValueType()) {
    cleanupPanel();
    columnImageLabel.setImage(DBeaverIcons.getImage(DBUtils.getTypeImage(valueController.getValueType())));
    columnNameLabel.setText(valueController.getValueName());
    IValueManager valueManager=valueController.getValueManager();
    try {
      valueViewer=valueManager.createEditor(valueController);
    }
 catch (    DBException e) {
      UIUtils.showErrorDialog(getShell(),"Value preview","Can't create value viewer",e);
      return;
    }
    toolBarManager.removeAll();
    try {
      valueManager.contributeActions(toolBarManager,valueController);
    }
 catch (    DBCException e) {
      log.error("Error filling toolbar actions",e);
    }
    if (valueViewer != null) {
      try {
        valueViewer.createControl();
      }
 catch (      Exception e) {
        log.error(e);
      }
      Control control=valueViewer.getControl();
      if (control != null) {
        resultSet.lockActionsByFocus(control);
        control.addKeyListener(new KeyAdapter(){
          @Override public void keyPressed(          KeyEvent e){
            if (e.keyCode == SWT.CR && e.stateMask == SWT.CTRL) {
              saveValue();
              e.doit=false;
            }
          }
        }
);
      }
      referenceValueEditor=new ReferenceValueEditor(valueController,valueViewer);
      if (referenceValueEditor.isReferenceValue()) {
        GridLayout gl=new GridLayout(1,false);
        viewPlaceholder.setLayout(gl);
        valueViewer.getControl().setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
        referenceValueEditor.createEditorSelector(viewPlaceholder);
      }
 else {
        viewPlaceholder.setLayout(new FillLayout());
      }
    }
 else {
      final Composite placeholder=UIUtils.createPlaceholder(viewPlaceholder,1);
      placeholder.setBackground(placeholder.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
      placeholder.addPaintListener(new PaintListener(){
        @Override public void paintControl(        PaintEvent e){
          Rectangle bounds=placeholder.getBounds();
          String message="No editor for [" + valueController.getValueType().getTypeName() + "]";
          Point ext=e.gc.textExtent(message);
          e.gc.drawText(message,(bounds.width - ext.x) / 2,bounds.height / 3 + 20);
        }
      }
);
      referenceValueEditor=null;
    }
    previewController=valueController;
    fillStandardToolBar();
    toolBarManager.update(true);
    toolBarManager.getControl().getParent().layout();
    viewPlaceholder.layout();
  }
  if (valueViewer != null) {
    try {
      if (referenceValueEditor != null) {
        referenceValueEditor.setHandleEditorChange(false);
      }
      Object newValue=previewController.getValue();
      if (newValue instanceof DBDValue) {
        valueViewer.primeEditorValue(newValue);
      }
 else {
        Object oldValue=valueViewer.extractEditorValue();
        if (!CommonUtils.equalObjects(oldValue,newValue)) {
          valueViewer.primeEditorValue(newValue);
        }
      }
    }
 catch (    DBException e) {
      log.error(e);
    }
 finally {
      if (referenceValueEditor != null) {
        referenceValueEditor.setHandleEditorChange(true);
      }
    }
  }
}
