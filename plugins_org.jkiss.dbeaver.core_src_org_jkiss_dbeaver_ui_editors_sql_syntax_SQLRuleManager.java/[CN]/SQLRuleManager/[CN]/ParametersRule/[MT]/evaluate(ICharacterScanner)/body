{
  int column=scanner.getColumn();
  if (column <= 0) {
    return Token.UNDEFINED;
  }
  scanner.unread();
  int prevChar=scanner.read();
  if (Character.isJavaIdentifierPart(prevChar) || prevChar == namedParameterPrefix || prevChar == anonymousParameterMark || prevChar == '\\' || prevChar == '/') {
    return Token.UNDEFINED;
  }
  int c=scanner.read();
  if (c != ICharacterScanner.EOF && (c == anonymousParameterMark || c == namedParameterPrefix)) {
    buffer.setLength(0);
    do {
      buffer.append((char)c);
      c=scanner.read();
    }
 while (c != ICharacterScanner.EOF && Character.isJavaIdentifierPart(c));
    scanner.unread();
    if (syntaxManager.isAnonymousParametersEnabled()) {
      if (buffer.length() == 1 && buffer.charAt(0) == anonymousParameterMark) {
        return parameterToken;
      }
    }
    if (syntaxManager.isParametersEnabled()) {
      if (buffer.charAt(0) == namedParameterPrefix && buffer.length() > 1) {
        boolean validChars=true;
        for (int i=1; i < buffer.length(); i++) {
          if (!Character.isLetterOrDigit(buffer.charAt(i))) {
            validChars=false;
            break;
          }
        }
        if (validChars) {
          return parameterToken;
        }
      }
    }
    for (int i=buffer.length() - 1; i >= 0; i--) {
      scanner.unread();
    }
  }
 else {
    scanner.unread();
  }
  return Token.UNDEFINED;
}
