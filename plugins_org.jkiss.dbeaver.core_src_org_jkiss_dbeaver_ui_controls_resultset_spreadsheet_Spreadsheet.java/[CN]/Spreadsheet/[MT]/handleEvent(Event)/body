{
switch (event.type) {
case SWT.KeyDown:
    boolean ctrlPressed=((event.stateMask & SWT.MOD1) != 0);
  if (!ctrlPressed && (event.keyCode == SWT.CR || (event.keyCode >= SWT.KEYPAD_0 && event.keyCode <= SWT.KEYPAD_9) || (event.keyCode >= 'a' && event.keyCode <= 'z') || (event.keyCode >= '0' && event.keyCode <= '9'))) {
    Control editorControl=tableEditor.getEditor();
    if (editorControl == null || editorControl.isDisposed()) {
      editorControl=presentation.openValueEditor(true);
    }
    if (editorControl != null && event.keyCode != SWT.CR) {
      if (!editorControl.isDisposed()) {
        final Event kdEvent=new Event();
        kdEvent.type=SWT.KeyDown;
        kdEvent.character=event.character;
        kdEvent.keyCode=event.keyCode;
        UIUtils.postEvent(editorControl,kdEvent);
        final Event kuEvent=new Event();
        kuEvent.type=SWT.KeyUp;
        kuEvent.character=event.character;
        kuEvent.keyCode=event.keyCode;
        UIUtils.postEvent(editorControl,kuEvent);
      }
    }
  }
 else   if (event.keyCode == SWT.ESC) {
    Object col=getFocusColumnElement();
    Object row=getFocusRowElement();
    if (col != null && row != null) {
      presentation.resetCellValue(col,row,false);
    }
  }
break;
case SWT.MouseDoubleClick:
if (event.button != 1) {
return;
}
GridPos pos=super.getCell(new Point(event.x,event.y));
GridPos focusPos=super.getFocusPos();
if (pos != null && focusPos != null && pos.equals(super.getFocusPos())) {
DoubleClickBehavior doubleClickBehavior=DoubleClickBehavior.valueOf(presentation.getPreferenceStore().getString(DBeaverPreferences.RESULT_SET_DOUBLE_CLICK));
switch (doubleClickBehavior) {
case NONE:
return;
case EDITOR:
presentation.openValueEditor(false);
break;
case INLINE_EDITOR:
presentation.openValueEditor(true);
break;
}
}
break;
case SWT.MouseDown:
if (event.button == 2) {
}
break;
case LightGrid.Event_ChangeSort:
presentation.changeSorting(event.data,event.stateMask);
break;
case LightGrid.Event_NavigateLink:
getDisplay().asyncExec(new Runnable(){
@Override public void run(){
presentation.navigateLink((GridCell)event.data,event.stateMask);
}
}
);
break;
}
}
