{
  String projectName=projectElement.getAttribute(ExportConstants.ATTR_NAME);
  String projectDescription=projectElement.getAttribute(ExportConstants.ATTR_DESCRIPTION);
  String targetProjectName=data.getTargetProjectName(projectName);
  if (targetProjectName == null) {
    targetProjectName=projectName;
  }
  IProject project=DBeaverCore.getInstance().getWorkspace().getRoot().getProject(targetProjectName);
  if (project.exists()) {
    throw new DBException("Project '" + targetProjectName + "' already exists");
  }
  monitor.subTask(CoreMessages.dialog_project_import_wizard_monitor_import_project + targetProjectName);
  final IProjectDescription description=DBeaverCore.getInstance().getWorkspace().newProjectDescription(project.getName());
  if (!CommonUtils.isEmpty(projectDescription)) {
    description.setComment(projectDescription);
  }
  ProjectRegistry projectRegistry=DBeaverCore.getInstance().getProjectRegistry();
  project.create(description,0,RuntimeUtils.getNestedMonitor(monitor));
  try {
    project.open(RuntimeUtils.getNestedMonitor(monitor));
    loadResourceProperties(monitor,project,projectElement);
    importChildResources(monitor,project,projectElement,ExportConstants.DIR_PROJECTS + "/" + projectName+ "/",zipFile);
    updateDriverReferences(monitor,project,driverMap);
  }
 catch (  Exception e) {
    try {
      project.delete(true,true,RuntimeUtils.getNestedMonitor(monitor));
    }
 catch (    CoreException e1) {
      log.error(e1);
    }
    throw new DBException("Error importing project resources",e);
  }
  if (projectRegistry.getDataSourceRegistry(project) == null) {
    projectRegistry.addProject(project);
  }
  return project;
}
