{
  SQLDialect dialect=getSQLDialect();
  if (dialect != null) {
    syntaxManager.init(dialect,getActivePreferenceStore());
    ruleManager.refreshRules();
    Document document=getDocument();
    if (document != null) {
      IDocumentPartitioner partitioner=new FastPartitioner(new SQLPartitionScanner(dialect),SQLPartitionScanner.SQL_PARTITION_TYPES);
      partitioner.connect(document);
      document.setDocumentPartitioner(SQLPartitionScanner.SQL_PARTITIONING,partitioner);
      ProjectionViewer projectionViewer=(ProjectionViewer)getSourceViewer();
      if (projectionViewer != null && document.getLength() > 0) {
        try {
          projectionViewer.reinitializeProjection();
        }
 catch (        Throwable ex) {
          log.warn("Can't initialize SQL syntax projection",ex);
        }
      }
    }
  }
  Color fgColor=ruleManager.getColor(SQLConstants.CONFIG_COLOR_TEXT);
  Color bgColor=ruleManager.getColor(!syntaxManager.isUnassigned() && dialect == null ? SQLConstants.CONFIG_COLOR_DISABLED : SQLConstants.CONFIG_COLOR_BACKGROUND);
  if (fgColor != null) {
    getTextViewer().getTextWidget().setForeground(fgColor);
  }
  getTextViewer().getTextWidget().setBackground(bgColor);
  if (getSourceViewerConfiguration() instanceof SQLEditorSourceViewerConfiguration) {
    ((SQLEditorSourceViewerConfiguration)getSourceViewerConfiguration()).onDataSourceChange();
  }
  getVerticalRuler().update();
}
