{
  logPage.startLogReader(processBuilder,process.getErrorStream());
  String outFileName=GeneralUtils.replaceVariables(outputFilePattern,new GeneralUtils.IVariableResolver(){
    @Override public String get(    String name){
switch (name) {
case VARIABLE_DATABASE:
        return arg.getDatabase().getName();
case VARIABLE_HOST:
      return arg.getDatabase().getDataSource().getContainer().getConnectionConfiguration().getHostName();
case VARIABLE_TABLE:
    final Iterator<MySQLTableBase> iterator=arg.getTables() == null ? null : arg.getTables().iterator();
  if (iterator != null && iterator.hasNext()) {
    return iterator.next().getName();
  }
 else {
    return "null";
  }
case VARIABLE_TIMESTAMP:
return RuntimeUtils.getCurrentTimeStamp();
default :
System.getProperty(name);
}
return null;
}
}
);
File outFile=new File(outputFolder,outFileName);
boolean isFiltering=removeDefiner;
Thread job=isFiltering ? new DumpFilterJob(monitor,process.getInputStream(),outFile) : new DumpCopierJob(monitor,process.getInputStream(),outFile);
job.start();
}
