{
  File homeFolder=RuntimeUtils.getUserHomeDir();
  File dbvisConfigHome=new File(homeFolder,DBVIS_HOME_FOLDER);
  if (!dbvisConfigHome.exists()) {
    throw new DBException("DBVisualizer installation not found");
  }
  File configFolder=new File(dbvisConfigHome,DBVIS_CONFIG70_FOLDER);
  if (!configFolder.exists()) {
    throw new DBException("Only DBVisualizer 7.x version is supported");
  }
  File configFile=new File(configFolder,DBVIS_CONFIG_FILE);
  if (!configFile.exists()) {
    throw new DBException("DBVisualizer configuration file not found");
  }
  try {
    Document configDocument=XMLUtils.parseDocument(configFile);
    Element driversElement=XMLUtils.getChildElement(configDocument.getDocumentElement(),"Drivers");
    if (driversElement != null) {
      for (      Element driverElement : XMLUtils.getChildElementList(driversElement,"Driver")) {
        String name=XMLUtils.getChildElementBody(driverElement,"Name");
        String sampleURL=XMLUtils.getChildElementBody(driverElement,"URLFormat");
        String driverClass=XMLUtils.getChildElementBody(driverElement,"DefaultClass");
        String lastName=XMLUtils.getChildElementBody(driverElement,"LastName");
        if (!CommonUtils.isEmpty(name) && !CommonUtils.isEmpty(sampleURL) && !CommonUtils.isEmpty(driverClass)) {
          ImportDriverInfo driver=new ImportDriverInfo(null,name,sampleURL,driverClass);
          if (!CommonUtils.isEmpty(lastName)) {
            driver.setDescription(lastName);
          }
          adaptSampleUrl(driver);
          Element locationsElement=XMLUtils.getChildElement(driverElement,"Locations");
          if (locationsElement != null) {
            for (            Element locationElement : XMLUtils.getChildElementList(locationsElement,"Location")) {
              String path=XMLUtils.getChildElementBody(locationElement,"Path");
              if (!CommonUtils.isEmpty(path)) {
                driver.addLibrary(path);
              }
            }
          }
          importData.addDriver(driver);
        }
      }
    }
    Element databasesElement=XMLUtils.getChildElement(configDocument.getDocumentElement(),"Databases");
    if (databasesElement != null) {
      for (      Element dbElement : XMLUtils.getChildElementList(databasesElement,"Database")) {
        String alias=XMLUtils.getChildElementBody(dbElement,"Alias");
        String url=XMLUtils.getChildElementBody(dbElement,"Url");
        String driverName=XMLUtils.getChildElementBody(dbElement,"Driver");
        String user=XMLUtils.getChildElementBody(dbElement,"Userid");
        if (!CommonUtils.isEmpty(alias) && !CommonUtils.isEmpty(url) && !CommonUtils.isEmpty(driverName)) {
          ImportDriverInfo driver=importData.getDriver(driverName);
          if (driver != null) {
            ImportConnectionInfo connectionInfo=new ImportConnectionInfo(driver,dbElement.getAttribute("id"),alias,url,null,null,null,user,null);
            importData.addConnection(connectionInfo);
          }
        }
      }
    }
  }
 catch (  XMLException e) {
    throw new DBException("Configuration parse error: " + e.getMessage());
  }
}
