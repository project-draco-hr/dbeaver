{
  final DriverDescriptor driver=getWizard().getDriver();
  setMessage("Download & configure " + driver.getFullName() + " driver files");
  Composite composite=UIUtils.createPlaceholder(parent,1);
  composite.setLayoutData(new GridData(GridData.FILL_BOTH));
  StringBuilder message=new StringBuilder();
  message.append("").append(driver.getFullName());
  message.append(" driver files missing.\n\n" + "According to vendor policy this driver isn't publicly available and you have to download it manually from vendor's web site.\n\n" + "After successful driver download you will need to add JAR files in DBeaver libraries list.");
  Text infoText=new Text(composite,SWT.MULTI | SWT.READ_ONLY | SWT.WRAP);
  infoText.setText(message.toString());
  GridData gd=new GridData(GridData.FILL_HORIZONTAL);
  gd.widthHint=200;
  infoText.setLayoutData(gd);
  Group filesGroup=UIUtils.createControlGroup(composite,"Driver files",1,-1,-1);
  gd=new GridData(GridData.FILL_HORIZONTAL);
  gd.verticalIndent=10;
  filesGroup.setLayoutData(gd);
  final Combo sourceCombo=new Combo(filesGroup,SWT.DROP_DOWN | SWT.READ_ONLY);
  sourceCombo.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      selectFileSource(driver.getDriverFileSources().get(sourceCombo.getSelectionIndex()));
    }
  }
);
  for (  DriverFileSource source : driver.getDriverFileSources()) {
    sourceCombo.add(source.getName());
  }
  filesTable=new Table(filesGroup,SWT.BORDER | SWT.FULL_SELECTION);
  filesTable.setHeaderVisible(true);
  filesTable.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
  UIUtils.createTableColumn(filesTable,SWT.LEFT,"File");
  UIUtils.createTableColumn(filesTable,SWT.LEFT,"Required");
  UIUtils.createTableColumn(filesTable,SWT.LEFT,"Description");
  sourceCombo.select(0);
  selectFileSource(driver.getDriverFileSources().get(0));
  UIUtils.packColumns(filesTable,true);
  createLinksPanel(composite);
  setControl(composite);
}
