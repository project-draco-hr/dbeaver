{
  Color background=JFaceColors.getBannerBackground(parent.getDisplay());
  parent.setBackground(background);
  Composite group=new Composite(parent,SWT.NONE);
  group.setBackground(background);
  GridLayout layout=new GridLayout(1,false);
  layout.marginHeight=20;
  layout.marginWidth=20;
  group.setLayout(layout);
  GridData gd;
  IProduct product=Platform.getProduct();
  String productVersion=DBeaverCore.getVersion().toString();
  Label titleLabel=new Label(group,SWT.NONE);
  titleLabel.setBackground(background);
  titleLabel.setFont(TITLE_FONT);
  titleLabel.setText(product.getProperty(PRODUCT_PROP_SUB_TITLE));
  gd=new GridData(GridData.FILL_HORIZONTAL);
  gd.horizontalAlignment=GridData.CENTER;
  titleLabel.setLayoutData(gd);
  titleLabel.addMouseListener(new MouseAdapter(){
    @Override public void mouseDoubleClick(    MouseEvent e){
      BusyIndicator.showWhile(getShell().getDisplay(),new Runnable(){
        @Override public void run(){
          IWorkbenchWindow workbenchWindow=PlatformUI.getWorkbench().getActiveWorkbenchWindow();
          IHandlerService service=workbenchWindow.getService(IHandlerService.class);
          if (service != null) {
            try {
              service.executeCommand("org.eclipse.ui.help.installationDialog",null);
            }
 catch (            Exception e1) {
            }
          }
        }
      }
);
    }
  }
);
  Label imageLabel=new Label(group,SWT.NONE);
  imageLabel.setBackground(background);
  gd=new GridData();
  gd.verticalAlignment=GridData.BEGINNING;
  gd.horizontalAlignment=GridData.CENTER;
  gd.grabExcessHorizontalSpace=true;
  imageLabel.setLayoutData(gd);
  imageLabel.setImage(ABOUT_IMAGE);
  Label versionLabel=new Label(group,SWT.NONE);
  versionLabel.setBackground(background);
  versionLabel.setText(CoreMessages.dialog_about_label_version + productVersion);
  gd=new GridData(GridData.FILL_HORIZONTAL);
  gd.horizontalAlignment=GridData.CENTER;
  versionLabel.setLayoutData(gd);
  Label authorLabel=new Label(group,SWT.NONE);
  authorLabel.setBackground(background);
  authorLabel.setText(product.getProperty(PRODUCT_PROP_COPYRIGHT));
  gd=new GridData(GridData.FILL_HORIZONTAL);
  gd.horizontalAlignment=GridData.CENTER;
  authorLabel.setLayoutData(gd);
  Link siteLink=UIUtils.createLink(group,UIUtils.makeAnchor(product.getProperty(PRODUCT_PROP_WEBSITE)),new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      RuntimeUtils.launchProgram(e.text);
    }
  }
);
  siteLink.setBackground(background);
  gd=new GridData();
  gd.horizontalAlignment=GridData.CENTER;
  siteLink.setLayoutData(gd);
  Link emailLink=UIUtils.createLink(group,UIUtils.makeAnchor(product.getProperty(PRODUCT_PROP_EMAIL)),new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      RuntimeUtils.launchProgram("mailto:" + e.text);
    }
  }
);
  emailLink.setBackground(background);
  gd=new GridData();
  gd.horizontalAlignment=GridData.CENTER;
  emailLink.setLayoutData(gd);
  return parent;
}
