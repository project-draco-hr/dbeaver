{
  super(parent,style=checkStyle(style));
  this.comboComposite=new Composite(this,SWT.NONE);
  this.comboComposite.setLayoutData(new GridData(GridData.VERTICAL_ALIGN_CENTER));
  GridLayout gridLayout=new GridLayout(2,false);
  gridLayout.marginHeight=0;
  gridLayout.marginWidth=0;
  gridLayout.horizontalSpacing=3;
  this.comboComposite.setLayout(gridLayout);
  this.imageLabel=new Label(this.comboComposite,SWT.NONE);
  this.imageLabel.setLayoutData(new GridData(GridData.FILL_VERTICAL | GridData.HORIZONTAL_ALIGN_BEGINNING | GridData.VERTICAL_ALIGN_CENTER));
  this.text=new Text(this.comboComposite,SWT.READ_ONLY);
  this.text.setLayoutData(new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_CENTER));
  this.comboComposite.setCursor(getDisplay().getSystemCursor(SWT.CURSOR_ARROW));
  int arrowStyle=SWT.ARROW | SWT.DOWN;
  if ((style & SWT.FLAT) != 0) {
    arrowStyle|=SWT.FLAT;
  }
  this.arrow=new Button(this,arrowStyle);
  setEnabled(true,true);
  this.listener=new Listener(){
    @Override public void handleEvent(    Event event){
      if (CImageCombo.this.popup == event.widget) {
        popupEvent(event);
        return;
      }
      if (CImageCombo.this.text == event.widget) {
        textEvent(event);
        return;
      }
      if (CImageCombo.this.table == event.widget) {
        listEvent(event);
        return;
      }
      if (CImageCombo.this.arrow == event.widget) {
        arrowEvent(event);
        return;
      }
      if (CImageCombo.this == event.widget) {
        comboEvent(event);
        return;
      }
      if (getShell() == event.widget) {
        handleFocus(SWT.FocusOut);
      }
    }
  }
;
  this.filter=new Listener(){
    @Override public void handleEvent(    Event event){
      Shell shell=((Control)event.widget).getShell();
      if (shell == CImageCombo.this.getShell()) {
        handleFocus(SWT.FocusOut);
      }
    }
  }
;
  int[] comboEvents={SWT.Dispose,SWT.Move,SWT.Resize};
  for (  int comboEvent : comboEvents) {
    this.addListener(comboEvent,this.listener);
  }
  int[] textEvents={SWT.KeyDown,SWT.KeyUp,SWT.Modify,SWT.MouseDown,SWT.MouseUp,SWT.Traverse,SWT.FocusIn};
  for (  int textEvent : textEvents) {
    this.text.addListener(textEvent,this.listener);
  }
  int[] arrowEvents={SWT.Selection,SWT.FocusIn};
  for (  int arrowEvent : arrowEvents) {
    this.arrow.addListener(arrowEvent,this.listener);
  }
  createPopup(-1);
}
